/*
* generated by Xtext
*/

package sc.ndt.editor.fast.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class FastfstGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelFastfstElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelFastfst");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cHeadAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cHeadHeaderParserRuleCall_0_0 = (RuleCall)cHeadAssignment_0.eContents().get(0);
		private final Assignment cSectionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSectionsSectionParserRuleCall_1_0 = (RuleCall)cSectionsAssignment_1.eContents().get(0);
		private final Assignment cEchoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEchoBEchoParserRuleCall_2_0 = (RuleCall)cEchoAssignment_2.eContents().get(0);
		private final Assignment cADAMSPrepAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cADAMSPrepIADAMSPrepParserRuleCall_3_0 = (RuleCall)cADAMSPrepAssignment_3.eContents().get(0);
		private final Assignment cAnalModeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnalModeIAnalModeParserRuleCall_4_0 = (RuleCall)cAnalModeAssignment_4.eContents().get(0);
		private final Assignment cNumBlAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNumBlINumBlParserRuleCall_5_0 = (RuleCall)cNumBlAssignment_5.eContents().get(0);
		private final Assignment cTMaxAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTMaxNTMaxParserRuleCall_6_0 = (RuleCall)cTMaxAssignment_6.eContents().get(0);
		private final Assignment cDTAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDTNDTParserRuleCall_7_0 = (RuleCall)cDTAssignment_7.eContents().get(0);
		private final Assignment cSectionsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSectionsSectionParserRuleCall_8_0 = (RuleCall)cSectionsAssignment_8.eContents().get(0);
		private final Assignment cYCModeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cYCModeIYCModeParserRuleCall_9_0 = (RuleCall)cYCModeAssignment_9.eContents().get(0);
		private final Assignment cTYCOnAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTYCOnNTYCOnParserRuleCall_10_0 = (RuleCall)cTYCOnAssignment_10.eContents().get(0);
		private final Assignment cPCModeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPCModeIPCModeParserRuleCall_11_0 = (RuleCall)cPCModeAssignment_11.eContents().get(0);
		private final Assignment cTPCOnAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cTPCOnNTPCOnParserRuleCall_12_0 = (RuleCall)cTPCOnAssignment_12.eContents().get(0);
		private final Assignment cVSContrlAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cVSContrlIVSContrlParserRuleCall_13_0 = (RuleCall)cVSContrlAssignment_13.eContents().get(0);
		private final Assignment cVS_RtGnSpAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cVS_RtGnSpNVS_RtGnSpParserRuleCall_14_0 = (RuleCall)cVS_RtGnSpAssignment_14.eContents().get(0);
		private final Assignment cVS_RtTqAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cVS_RtTqNVS_RtTqParserRuleCall_15_0 = (RuleCall)cVS_RtTqAssignment_15.eContents().get(0);
		private final Assignment cVS_Rgn2KAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cVS_Rgn2KNVS_Rgn2KParserRuleCall_16_0 = (RuleCall)cVS_Rgn2KAssignment_16.eContents().get(0);
		private final Assignment cVS_SlPcAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cVS_SlPcNVS_SlPcParserRuleCall_17_0 = (RuleCall)cVS_SlPcAssignment_17.eContents().get(0);
		private final Assignment cGenModelAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cGenModelIGenModelParserRuleCall_18_0 = (RuleCall)cGenModelAssignment_18.eContents().get(0);
		private final Assignment cGenTiStrAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cGenTiStrBGenTiStrParserRuleCall_19_0 = (RuleCall)cGenTiStrAssignment_19.eContents().get(0);
		private final Assignment cGenTiStpAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cGenTiStpBGenTiStpParserRuleCall_20_0 = (RuleCall)cGenTiStpAssignment_20.eContents().get(0);
		private final Assignment cSpdGenOnAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cSpdGenOnNSpdGenOnParserRuleCall_21_0 = (RuleCall)cSpdGenOnAssignment_21.eContents().get(0);
		private final Assignment cTimGenOnAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cTimGenOnNTimGenOnParserRuleCall_22_0 = (RuleCall)cTimGenOnAssignment_22.eContents().get(0);
		private final Assignment cTimGenOfAssignment_23 = (Assignment)cGroup.eContents().get(23);
		private final RuleCall cTimGenOfNTimGenOfParserRuleCall_23_0 = (RuleCall)cTimGenOfAssignment_23.eContents().get(0);
		private final Assignment cHSSBrModeAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cHSSBrModeIHSSBrModeParserRuleCall_24_0 = (RuleCall)cHSSBrModeAssignment_24.eContents().get(0);
		private final Assignment cTHSSBrDpAssignment_25 = (Assignment)cGroup.eContents().get(25);
		private final RuleCall cTHSSBrDpNTHSSBrDpParserRuleCall_25_0 = (RuleCall)cTHSSBrDpAssignment_25.eContents().get(0);
		private final Assignment cTiDynBrkAssignment_26 = (Assignment)cGroup.eContents().get(26);
		private final RuleCall cTiDynBrkNTiDynBrkParserRuleCall_26_0 = (RuleCall)cTiDynBrkAssignment_26.eContents().get(0);
		private final Assignment cTTpBrDp_1_Assignment_27 = (Assignment)cGroup.eContents().get(27);
		private final RuleCall cTTpBrDp_1_NTTpBrDp_1_ParserRuleCall_27_0 = (RuleCall)cTTpBrDp_1_Assignment_27.eContents().get(0);
		private final Assignment cTTpBrDp_2_Assignment_28 = (Assignment)cGroup.eContents().get(28);
		private final RuleCall cTTpBrDp_2_NTTpBrDp_2_ParserRuleCall_28_0 = (RuleCall)cTTpBrDp_2_Assignment_28.eContents().get(0);
		private final Assignment cTTpBrDp_3_Assignment_29 = (Assignment)cGroup.eContents().get(29);
		private final RuleCall cTTpBrDp_3_NTTpBrDp_3_ParserRuleCall_29_0 = (RuleCall)cTTpBrDp_3_Assignment_29.eContents().get(0);
		private final Assignment cTBDepISp_1_Assignment_30 = (Assignment)cGroup.eContents().get(30);
		private final RuleCall cTBDepISp_1_NTBDepISp_1_ParserRuleCall_30_0 = (RuleCall)cTBDepISp_1_Assignment_30.eContents().get(0);
		private final Assignment cTBDepISp_2_Assignment_31 = (Assignment)cGroup.eContents().get(31);
		private final RuleCall cTBDepISp_2_NTBDepISp_2_ParserRuleCall_31_0 = (RuleCall)cTBDepISp_2_Assignment_31.eContents().get(0);
		private final Assignment cTBDepISp_3_Assignment_32 = (Assignment)cGroup.eContents().get(32);
		private final RuleCall cTBDepISp_3_NTBDepISp_3_ParserRuleCall_32_0 = (RuleCall)cTBDepISp_3_Assignment_32.eContents().get(0);
		private final Assignment cTYawManSAssignment_33 = (Assignment)cGroup.eContents().get(33);
		private final RuleCall cTYawManSNTYawManSParserRuleCall_33_0 = (RuleCall)cTYawManSAssignment_33.eContents().get(0);
		private final Assignment cTYawManEAssignment_34 = (Assignment)cGroup.eContents().get(34);
		private final RuleCall cTYawManENTYawManEParserRuleCall_34_0 = (RuleCall)cTYawManEAssignment_34.eContents().get(0);
		private final Assignment cNacYawFAssignment_35 = (Assignment)cGroup.eContents().get(35);
		private final RuleCall cNacYawFNNacYawFParserRuleCall_35_0 = (RuleCall)cNacYawFAssignment_35.eContents().get(0);
		private final Assignment cTPitManS_1_Assignment_36 = (Assignment)cGroup.eContents().get(36);
		private final RuleCall cTPitManS_1_NTPitManS_1_ParserRuleCall_36_0 = (RuleCall)cTPitManS_1_Assignment_36.eContents().get(0);
		private final Assignment cTPitManS_2_Assignment_37 = (Assignment)cGroup.eContents().get(37);
		private final RuleCall cTPitManS_2_NTPitManS_2_ParserRuleCall_37_0 = (RuleCall)cTPitManS_2_Assignment_37.eContents().get(0);
		private final Assignment cTPitManS_3_Assignment_38 = (Assignment)cGroup.eContents().get(38);
		private final RuleCall cTPitManS_3_NTPitManS_3_ParserRuleCall_38_0 = (RuleCall)cTPitManS_3_Assignment_38.eContents().get(0);
		private final Assignment cTPitManE_1_Assignment_39 = (Assignment)cGroup.eContents().get(39);
		private final RuleCall cTPitManE_1_NTPitManE_1_ParserRuleCall_39_0 = (RuleCall)cTPitManE_1_Assignment_39.eContents().get(0);
		private final Assignment cTPitManE_2_Assignment_40 = (Assignment)cGroup.eContents().get(40);
		private final RuleCall cTPitManE_2_NTPitManE_2_ParserRuleCall_40_0 = (RuleCall)cTPitManE_2_Assignment_40.eContents().get(0);
		private final Assignment cTPitManE_3_Assignment_41 = (Assignment)cGroup.eContents().get(41);
		private final RuleCall cTPitManE_3_NTPitManE_3_ParserRuleCall_41_0 = (RuleCall)cTPitManE_3_Assignment_41.eContents().get(0);
		private final Assignment cBlPitch_1_Assignment_42 = (Assignment)cGroup.eContents().get(42);
		private final RuleCall cBlPitch_1_NBlPitch_1_ParserRuleCall_42_0 = (RuleCall)cBlPitch_1_Assignment_42.eContents().get(0);
		private final Assignment cBlPitch_2_Assignment_43 = (Assignment)cGroup.eContents().get(43);
		private final RuleCall cBlPitch_2_NBlPitch_2_ParserRuleCall_43_0 = (RuleCall)cBlPitch_2_Assignment_43.eContents().get(0);
		private final Assignment cBlPitch_3_Assignment_44 = (Assignment)cGroup.eContents().get(44);
		private final RuleCall cBlPitch_3_NBlPitch_3_ParserRuleCall_44_0 = (RuleCall)cBlPitch_3_Assignment_44.eContents().get(0);
		private final Assignment cBlPitchF_1_Assignment_45 = (Assignment)cGroup.eContents().get(45);
		private final RuleCall cBlPitchF_1_NBlPitchF_1_ParserRuleCall_45_0 = (RuleCall)cBlPitchF_1_Assignment_45.eContents().get(0);
		private final Assignment cBlPitchF_2_Assignment_46 = (Assignment)cGroup.eContents().get(46);
		private final RuleCall cBlPitchF_2_NBlPitchF_2_ParserRuleCall_46_0 = (RuleCall)cBlPitchF_2_Assignment_46.eContents().get(0);
		private final Assignment cBlPitchF_3_Assignment_47 = (Assignment)cGroup.eContents().get(47);
		private final RuleCall cBlPitchF_3_NBlPitchF_3_ParserRuleCall_47_0 = (RuleCall)cBlPitchF_3_Assignment_47.eContents().get(0);
		private final Assignment cSectionsAssignment_48 = (Assignment)cGroup.eContents().get(48);
		private final RuleCall cSectionsSectionParserRuleCall_48_0 = (RuleCall)cSectionsAssignment_48.eContents().get(0);
		private final Assignment cGravityAssignment_49 = (Assignment)cGroup.eContents().get(49);
		private final RuleCall cGravityNGravityParserRuleCall_49_0 = (RuleCall)cGravityAssignment_49.eContents().get(0);
		private final Assignment cSectionsAssignment_50 = (Assignment)cGroup.eContents().get(50);
		private final RuleCall cSectionsSectionParserRuleCall_50_0 = (RuleCall)cSectionsAssignment_50.eContents().get(0);
		private final Assignment cFlapDOF1Assignment_51 = (Assignment)cGroup.eContents().get(51);
		private final RuleCall cFlapDOF1BFlapDOF1ParserRuleCall_51_0 = (RuleCall)cFlapDOF1Assignment_51.eContents().get(0);
		private final Assignment cFlapDOF2Assignment_52 = (Assignment)cGroup.eContents().get(52);
		private final RuleCall cFlapDOF2BFlapDOF2ParserRuleCall_52_0 = (RuleCall)cFlapDOF2Assignment_52.eContents().get(0);
		private final Assignment cEdgeDOFAssignment_53 = (Assignment)cGroup.eContents().get(53);
		private final RuleCall cEdgeDOFBEdgeDOFParserRuleCall_53_0 = (RuleCall)cEdgeDOFAssignment_53.eContents().get(0);
		private final Assignment cTeetDOFAssignment_54 = (Assignment)cGroup.eContents().get(54);
		private final RuleCall cTeetDOFBTeetDOFParserRuleCall_54_0 = (RuleCall)cTeetDOFAssignment_54.eContents().get(0);
		private final Assignment cDrTrDOFAssignment_55 = (Assignment)cGroup.eContents().get(55);
		private final RuleCall cDrTrDOFBDrTrDOFParserRuleCall_55_0 = (RuleCall)cDrTrDOFAssignment_55.eContents().get(0);
		private final Assignment cGenDOFAssignment_56 = (Assignment)cGroup.eContents().get(56);
		private final RuleCall cGenDOFBGenDOFParserRuleCall_56_0 = (RuleCall)cGenDOFAssignment_56.eContents().get(0);
		private final Assignment cYawDOFAssignment_57 = (Assignment)cGroup.eContents().get(57);
		private final RuleCall cYawDOFBYawDOFParserRuleCall_57_0 = (RuleCall)cYawDOFAssignment_57.eContents().get(0);
		private final Assignment cTwFADOF1Assignment_58 = (Assignment)cGroup.eContents().get(58);
		private final RuleCall cTwFADOF1BTwFADOF1ParserRuleCall_58_0 = (RuleCall)cTwFADOF1Assignment_58.eContents().get(0);
		private final Assignment cTwFADOF2Assignment_59 = (Assignment)cGroup.eContents().get(59);
		private final RuleCall cTwFADOF2BTwFADOF2ParserRuleCall_59_0 = (RuleCall)cTwFADOF2Assignment_59.eContents().get(0);
		private final Assignment cTwSSDOF1Assignment_60 = (Assignment)cGroup.eContents().get(60);
		private final RuleCall cTwSSDOF1BTwSSDOF1ParserRuleCall_60_0 = (RuleCall)cTwSSDOF1Assignment_60.eContents().get(0);
		private final Assignment cTwSSDOF2Assignment_61 = (Assignment)cGroup.eContents().get(61);
		private final RuleCall cTwSSDOF2BTwSSDOF2ParserRuleCall_61_0 = (RuleCall)cTwSSDOF2Assignment_61.eContents().get(0);
		private final Assignment cCompAeroAssignment_62 = (Assignment)cGroup.eContents().get(62);
		private final RuleCall cCompAeroBCompAeroParserRuleCall_62_0 = (RuleCall)cCompAeroAssignment_62.eContents().get(0);
		private final Assignment cCompNoiseAssignment_63 = (Assignment)cGroup.eContents().get(63);
		private final RuleCall cCompNoiseBCompNoiseParserRuleCall_63_0 = (RuleCall)cCompNoiseAssignment_63.eContents().get(0);
		private final Assignment cSectionsAssignment_64 = (Assignment)cGroup.eContents().get(64);
		private final RuleCall cSectionsSectionParserRuleCall_64_0 = (RuleCall)cSectionsAssignment_64.eContents().get(0);
		private final Assignment cOoPDeflAssignment_65 = (Assignment)cGroup.eContents().get(65);
		private final RuleCall cOoPDeflNOoPDeflParserRuleCall_65_0 = (RuleCall)cOoPDeflAssignment_65.eContents().get(0);
		private final Assignment cIPDeflAssignment_66 = (Assignment)cGroup.eContents().get(66);
		private final RuleCall cIPDeflNIPDeflParserRuleCall_66_0 = (RuleCall)cIPDeflAssignment_66.eContents().get(0);
		private final Assignment cTeetDeflAssignment_67 = (Assignment)cGroup.eContents().get(67);
		private final RuleCall cTeetDeflNTeetDeflParserRuleCall_67_0 = (RuleCall)cTeetDeflAssignment_67.eContents().get(0);
		private final Assignment cAzimuthAssignment_68 = (Assignment)cGroup.eContents().get(68);
		private final RuleCall cAzimuthNAzimuthParserRuleCall_68_0 = (RuleCall)cAzimuthAssignment_68.eContents().get(0);
		private final Assignment cRotSpeedAssignment_69 = (Assignment)cGroup.eContents().get(69);
		private final RuleCall cRotSpeedNRotSpeedParserRuleCall_69_0 = (RuleCall)cRotSpeedAssignment_69.eContents().get(0);
		private final Assignment cNacYawAssignment_70 = (Assignment)cGroup.eContents().get(70);
		private final RuleCall cNacYawNNacYawParserRuleCall_70_0 = (RuleCall)cNacYawAssignment_70.eContents().get(0);
		private final Assignment cTTDspFAAssignment_71 = (Assignment)cGroup.eContents().get(71);
		private final RuleCall cTTDspFANTTDspFAParserRuleCall_71_0 = (RuleCall)cTTDspFAAssignment_71.eContents().get(0);
		private final Assignment cTTDspSSAssignment_72 = (Assignment)cGroup.eContents().get(72);
		private final RuleCall cTTDspSSNTTDspSSParserRuleCall_72_0 = (RuleCall)cTTDspSSAssignment_72.eContents().get(0);
		private final Assignment cSectionsAssignment_73 = (Assignment)cGroup.eContents().get(73);
		private final RuleCall cSectionsSectionParserRuleCall_73_0 = (RuleCall)cSectionsAssignment_73.eContents().get(0);
		private final Assignment cTipRadAssignment_74 = (Assignment)cGroup.eContents().get(74);
		private final RuleCall cTipRadNTipRadParserRuleCall_74_0 = (RuleCall)cTipRadAssignment_74.eContents().get(0);
		private final Assignment cHubRadAssignment_75 = (Assignment)cGroup.eContents().get(75);
		private final RuleCall cHubRadNHubRadParserRuleCall_75_0 = (RuleCall)cHubRadAssignment_75.eContents().get(0);
		private final Assignment cPSpnElNAssignment_76 = (Assignment)cGroup.eContents().get(76);
		private final RuleCall cPSpnElNNPSpnElNParserRuleCall_76_0 = (RuleCall)cPSpnElNAssignment_76.eContents().get(0);
		private final Assignment cUndSlingAssignment_77 = (Assignment)cGroup.eContents().get(77);
		private final RuleCall cUndSlingNUndSlingParserRuleCall_77_0 = (RuleCall)cUndSlingAssignment_77.eContents().get(0);
		private final Assignment cHubCMAssignment_78 = (Assignment)cGroup.eContents().get(78);
		private final RuleCall cHubCMNHubCMParserRuleCall_78_0 = (RuleCall)cHubCMAssignment_78.eContents().get(0);
		private final Assignment cOverHangAssignment_79 = (Assignment)cGroup.eContents().get(79);
		private final RuleCall cOverHangNOverHangParserRuleCall_79_0 = (RuleCall)cOverHangAssignment_79.eContents().get(0);
		private final Assignment cNacCMxnAssignment_80 = (Assignment)cGroup.eContents().get(80);
		private final RuleCall cNacCMxnNNacCMxnParserRuleCall_80_0 = (RuleCall)cNacCMxnAssignment_80.eContents().get(0);
		private final Assignment cNacCMynAssignment_81 = (Assignment)cGroup.eContents().get(81);
		private final RuleCall cNacCMynNNacCMynParserRuleCall_81_0 = (RuleCall)cNacCMynAssignment_81.eContents().get(0);
		private final Assignment cNacCMznAssignment_82 = (Assignment)cGroup.eContents().get(82);
		private final RuleCall cNacCMznNNacCMznParserRuleCall_82_0 = (RuleCall)cNacCMznAssignment_82.eContents().get(0);
		private final Assignment cTowerHtAssignment_83 = (Assignment)cGroup.eContents().get(83);
		private final RuleCall cTowerHtNTowerHtParserRuleCall_83_0 = (RuleCall)cTowerHtAssignment_83.eContents().get(0);
		private final Assignment cTwr2ShftAssignment_84 = (Assignment)cGroup.eContents().get(84);
		private final RuleCall cTwr2ShftNTwr2ShftParserRuleCall_84_0 = (RuleCall)cTwr2ShftAssignment_84.eContents().get(0);
		private final Assignment cTwrRBHtAssignment_85 = (Assignment)cGroup.eContents().get(85);
		private final RuleCall cTwrRBHtNTwrRBHtParserRuleCall_85_0 = (RuleCall)cTwrRBHtAssignment_85.eContents().get(0);
		private final Assignment cShftTiltAssignment_86 = (Assignment)cGroup.eContents().get(86);
		private final RuleCall cShftTiltNShftTiltParserRuleCall_86_0 = (RuleCall)cShftTiltAssignment_86.eContents().get(0);
		private final Assignment cDelta3Assignment_87 = (Assignment)cGroup.eContents().get(87);
		private final RuleCall cDelta3NDelta3ParserRuleCall_87_0 = (RuleCall)cDelta3Assignment_87.eContents().get(0);
		private final Assignment cPreCone_1_Assignment_88 = (Assignment)cGroup.eContents().get(88);
		private final RuleCall cPreCone_1_NPreCone_1_ParserRuleCall_88_0 = (RuleCall)cPreCone_1_Assignment_88.eContents().get(0);
		private final Assignment cPreCone_2_Assignment_89 = (Assignment)cGroup.eContents().get(89);
		private final RuleCall cPreCone_2_NPreCone_2_ParserRuleCall_89_0 = (RuleCall)cPreCone_2_Assignment_89.eContents().get(0);
		private final Assignment cPreCone_3_Assignment_90 = (Assignment)cGroup.eContents().get(90);
		private final RuleCall cPreCone_3_NPreCone_3_ParserRuleCall_90_0 = (RuleCall)cPreCone_3_Assignment_90.eContents().get(0);
		private final Assignment cAzimB1UpAssignment_91 = (Assignment)cGroup.eContents().get(91);
		private final RuleCall cAzimB1UpNAzimB1UpParserRuleCall_91_0 = (RuleCall)cAzimB1UpAssignment_91.eContents().get(0);
		private final Assignment cSectionsAssignment_92 = (Assignment)cGroup.eContents().get(92);
		private final RuleCall cSectionsSectionParserRuleCall_92_0 = (RuleCall)cSectionsAssignment_92.eContents().get(0);
		private final Assignment cYawBrMassAssignment_93 = (Assignment)cGroup.eContents().get(93);
		private final RuleCall cYawBrMassNYawBrMassParserRuleCall_93_0 = (RuleCall)cYawBrMassAssignment_93.eContents().get(0);
		private final Assignment cNacMassAssignment_94 = (Assignment)cGroup.eContents().get(94);
		private final RuleCall cNacMassNNacMassParserRuleCall_94_0 = (RuleCall)cNacMassAssignment_94.eContents().get(0);
		private final Assignment cHubMassAssignment_95 = (Assignment)cGroup.eContents().get(95);
		private final RuleCall cHubMassNHubMassParserRuleCall_95_0 = (RuleCall)cHubMassAssignment_95.eContents().get(0);
		private final Assignment cTipMass_1_Assignment_96 = (Assignment)cGroup.eContents().get(96);
		private final RuleCall cTipMass_1_NTipMass_1_ParserRuleCall_96_0 = (RuleCall)cTipMass_1_Assignment_96.eContents().get(0);
		private final Assignment cTipMass_2_Assignment_97 = (Assignment)cGroup.eContents().get(97);
		private final RuleCall cTipMass_2_NTipMass_2_ParserRuleCall_97_0 = (RuleCall)cTipMass_2_Assignment_97.eContents().get(0);
		private final Assignment cTipMass_3_Assignment_98 = (Assignment)cGroup.eContents().get(98);
		private final RuleCall cTipMass_3_NTipMass_3_ParserRuleCall_98_0 = (RuleCall)cTipMass_3_Assignment_98.eContents().get(0);
		private final Assignment cNacYInerAssignment_99 = (Assignment)cGroup.eContents().get(99);
		private final RuleCall cNacYInerNNacYInerParserRuleCall_99_0 = (RuleCall)cNacYInerAssignment_99.eContents().get(0);
		private final Assignment cGenInerAssignment_100 = (Assignment)cGroup.eContents().get(100);
		private final RuleCall cGenInerNGenInerParserRuleCall_100_0 = (RuleCall)cGenInerAssignment_100.eContents().get(0);
		private final Assignment cHubInerAssignment_101 = (Assignment)cGroup.eContents().get(101);
		private final RuleCall cHubInerNHubInerParserRuleCall_101_0 = (RuleCall)cHubInerAssignment_101.eContents().get(0);
		private final Assignment cSectionsAssignment_102 = (Assignment)cGroup.eContents().get(102);
		private final RuleCall cSectionsSectionParserRuleCall_102_0 = (RuleCall)cSectionsAssignment_102.eContents().get(0);
		private final Assignment cGBoxEffAssignment_103 = (Assignment)cGroup.eContents().get(103);
		private final RuleCall cGBoxEffNGBoxEffParserRuleCall_103_0 = (RuleCall)cGBoxEffAssignment_103.eContents().get(0);
		private final Assignment cGenEffAssignment_104 = (Assignment)cGroup.eContents().get(104);
		private final RuleCall cGenEffNGenEffParserRuleCall_104_0 = (RuleCall)cGenEffAssignment_104.eContents().get(0);
		private final Assignment cGBRatioAssignment_105 = (Assignment)cGroup.eContents().get(105);
		private final RuleCall cGBRatioNGBRatioParserRuleCall_105_0 = (RuleCall)cGBRatioAssignment_105.eContents().get(0);
		private final Assignment cGBReversAssignment_106 = (Assignment)cGroup.eContents().get(106);
		private final RuleCall cGBReversBGBReversParserRuleCall_106_0 = (RuleCall)cGBReversAssignment_106.eContents().get(0);
		private final Assignment cHSSBrTqFAssignment_107 = (Assignment)cGroup.eContents().get(107);
		private final RuleCall cHSSBrTqFNHSSBrTqFParserRuleCall_107_0 = (RuleCall)cHSSBrTqFAssignment_107.eContents().get(0);
		private final Assignment cHSSBrDTAssignment_108 = (Assignment)cGroup.eContents().get(108);
		private final RuleCall cHSSBrDTNHSSBrDTParserRuleCall_108_0 = (RuleCall)cHSSBrDTAssignment_108.eContents().get(0);
		private final Assignment cDynBrkFiAssignment_109 = (Assignment)cGroup.eContents().get(109);
		private final RuleCall cDynBrkFiFDynBrkFiParserRuleCall_109_0 = (RuleCall)cDynBrkFiAssignment_109.eContents().get(0);
		private final Assignment cDTTorSprAssignment_110 = (Assignment)cGroup.eContents().get(110);
		private final RuleCall cDTTorSprNDTTorSprParserRuleCall_110_0 = (RuleCall)cDTTorSprAssignment_110.eContents().get(0);
		private final Assignment cDTTorDmpAssignment_111 = (Assignment)cGroup.eContents().get(111);
		private final RuleCall cDTTorDmpNDTTorDmpParserRuleCall_111_0 = (RuleCall)cDTTorDmpAssignment_111.eContents().get(0);
		private final Assignment cSectionsAssignment_112 = (Assignment)cGroup.eContents().get(112);
		private final RuleCall cSectionsSectionParserRuleCall_112_0 = (RuleCall)cSectionsAssignment_112.eContents().get(0);
		private final Assignment cSIG_SlPcAssignment_113 = (Assignment)cGroup.eContents().get(113);
		private final RuleCall cSIG_SlPcNSIG_SlPcParserRuleCall_113_0 = (RuleCall)cSIG_SlPcAssignment_113.eContents().get(0);
		private final Assignment cSIG_SySpAssignment_114 = (Assignment)cGroup.eContents().get(114);
		private final RuleCall cSIG_SySpNSIG_SySpParserRuleCall_114_0 = (RuleCall)cSIG_SySpAssignment_114.eContents().get(0);
		private final Assignment cSIG_RtTqAssignment_115 = (Assignment)cGroup.eContents().get(115);
		private final RuleCall cSIG_RtTqNSIG_RtTqParserRuleCall_115_0 = (RuleCall)cSIG_RtTqAssignment_115.eContents().get(0);
		private final Assignment cSIG_PORtAssignment_116 = (Assignment)cGroup.eContents().get(116);
		private final RuleCall cSIG_PORtNSIG_PORtParserRuleCall_116_0 = (RuleCall)cSIG_PORtAssignment_116.eContents().get(0);
		private final Assignment cSectionsAssignment_117 = (Assignment)cGroup.eContents().get(117);
		private final RuleCall cSectionsSectionParserRuleCall_117_0 = (RuleCall)cSectionsAssignment_117.eContents().get(0);
		private final Assignment cTEC_FreqAssignment_118 = (Assignment)cGroup.eContents().get(118);
		private final RuleCall cTEC_FreqNTEC_FreqParserRuleCall_118_0 = (RuleCall)cTEC_FreqAssignment_118.eContents().get(0);
		private final Assignment cTEC_NpolAssignment_119 = (Assignment)cGroup.eContents().get(119);
		private final RuleCall cTEC_NpolNTEC_NpolParserRuleCall_119_0 = (RuleCall)cTEC_NpolAssignment_119.eContents().get(0);
		private final Assignment cTEC_SresAssignment_120 = (Assignment)cGroup.eContents().get(120);
		private final RuleCall cTEC_SresNTEC_SresParserRuleCall_120_0 = (RuleCall)cTEC_SresAssignment_120.eContents().get(0);
		private final Assignment cTEC_RresAssignment_121 = (Assignment)cGroup.eContents().get(121);
		private final RuleCall cTEC_RresNTEC_RresParserRuleCall_121_0 = (RuleCall)cTEC_RresAssignment_121.eContents().get(0);
		private final Assignment cTEC_VLLAssignment_122 = (Assignment)cGroup.eContents().get(122);
		private final RuleCall cTEC_VLLNTEC_VLLParserRuleCall_122_0 = (RuleCall)cTEC_VLLAssignment_122.eContents().get(0);
		private final Assignment cTEC_SLRAssignment_123 = (Assignment)cGroup.eContents().get(123);
		private final RuleCall cTEC_SLRNTEC_SLRParserRuleCall_123_0 = (RuleCall)cTEC_SLRAssignment_123.eContents().get(0);
		private final Assignment cTEC_RLRAssignment_124 = (Assignment)cGroup.eContents().get(124);
		private final RuleCall cTEC_RLRNTEC_RLRParserRuleCall_124_0 = (RuleCall)cTEC_RLRAssignment_124.eContents().get(0);
		private final Assignment cTEC_MRAssignment_125 = (Assignment)cGroup.eContents().get(125);
		private final RuleCall cTEC_MRNTEC_MRParserRuleCall_125_0 = (RuleCall)cTEC_MRAssignment_125.eContents().get(0);
		private final Assignment cSectionsAssignment_126 = (Assignment)cGroup.eContents().get(126);
		private final RuleCall cSectionsSectionParserRuleCall_126_0 = (RuleCall)cSectionsAssignment_126.eContents().get(0);
		private final Assignment cPtfmModelAssignment_127 = (Assignment)cGroup.eContents().get(127);
		private final RuleCall cPtfmModelIPtfmModelParserRuleCall_127_0 = (RuleCall)cPtfmModelAssignment_127.eContents().get(0);
		private final Assignment cPtfmFileAssignment_128 = (Assignment)cGroup.eContents().get(128);
		private final RuleCall cPtfmFileFPtfmFileParserRuleCall_128_0 = (RuleCall)cPtfmFileAssignment_128.eContents().get(0);
		private final Assignment cSectionsAssignment_129 = (Assignment)cGroup.eContents().get(129);
		private final RuleCall cSectionsSectionParserRuleCall_129_0 = (RuleCall)cSectionsAssignment_129.eContents().get(0);
		private final Assignment cTwrNodesAssignment_130 = (Assignment)cGroup.eContents().get(130);
		private final RuleCall cTwrNodesITwrNodesParserRuleCall_130_0 = (RuleCall)cTwrNodesAssignment_130.eContents().get(0);
		private final Assignment cTwrFileAssignment_131 = (Assignment)cGroup.eContents().get(131);
		private final RuleCall cTwrFileFTwrFileParserRuleCall_131_0 = (RuleCall)cTwrFileAssignment_131.eContents().get(0);
		private final Assignment cSectionsAssignment_132 = (Assignment)cGroup.eContents().get(132);
		private final RuleCall cSectionsSectionParserRuleCall_132_0 = (RuleCall)cSectionsAssignment_132.eContents().get(0);
		private final Assignment cYawSprAssignment_133 = (Assignment)cGroup.eContents().get(133);
		private final RuleCall cYawSprNYawSprParserRuleCall_133_0 = (RuleCall)cYawSprAssignment_133.eContents().get(0);
		private final Assignment cYawDampAssignment_134 = (Assignment)cGroup.eContents().get(134);
		private final RuleCall cYawDampNYawDampParserRuleCall_134_0 = (RuleCall)cYawDampAssignment_134.eContents().get(0);
		private final Assignment cYawNeutAssignment_135 = (Assignment)cGroup.eContents().get(135);
		private final RuleCall cYawNeutNYawNeutParserRuleCall_135_0 = (RuleCall)cYawNeutAssignment_135.eContents().get(0);
		private final Assignment cSectionsAssignment_136 = (Assignment)cGroup.eContents().get(136);
		private final RuleCall cSectionsSectionParserRuleCall_136_0 = (RuleCall)cSectionsAssignment_136.eContents().get(0);
		private final Assignment cFurlingAssignment_137 = (Assignment)cGroup.eContents().get(137);
		private final RuleCall cFurlingBFurlingParserRuleCall_137_0 = (RuleCall)cFurlingAssignment_137.eContents().get(0);
		private final Assignment cFurlFileAssignment_138 = (Assignment)cGroup.eContents().get(138);
		private final RuleCall cFurlFileFFurlFileParserRuleCall_138_0 = (RuleCall)cFurlFileAssignment_138.eContents().get(0);
		private final Assignment cSectionsAssignment_139 = (Assignment)cGroup.eContents().get(139);
		private final RuleCall cSectionsSectionParserRuleCall_139_0 = (RuleCall)cSectionsAssignment_139.eContents().get(0);
		private final Assignment cTeetModAssignment_140 = (Assignment)cGroup.eContents().get(140);
		private final RuleCall cTeetModITeetModParserRuleCall_140_0 = (RuleCall)cTeetModAssignment_140.eContents().get(0);
		private final Assignment cTeetDmpPAssignment_141 = (Assignment)cGroup.eContents().get(141);
		private final RuleCall cTeetDmpPNTeetDmpPParserRuleCall_141_0 = (RuleCall)cTeetDmpPAssignment_141.eContents().get(0);
		private final Assignment cTeetDmpAssignment_142 = (Assignment)cGroup.eContents().get(142);
		private final RuleCall cTeetDmpNTeetDmpParserRuleCall_142_0 = (RuleCall)cTeetDmpAssignment_142.eContents().get(0);
		private final Assignment cTeetCDmpAssignment_143 = (Assignment)cGroup.eContents().get(143);
		private final RuleCall cTeetCDmpNTeetCDmpParserRuleCall_143_0 = (RuleCall)cTeetCDmpAssignment_143.eContents().get(0);
		private final Assignment cTeetSStPAssignment_144 = (Assignment)cGroup.eContents().get(144);
		private final RuleCall cTeetSStPNTeetSStPParserRuleCall_144_0 = (RuleCall)cTeetSStPAssignment_144.eContents().get(0);
		private final Assignment cTeetHStPAssignment_145 = (Assignment)cGroup.eContents().get(145);
		private final RuleCall cTeetHStPNTeetHStPParserRuleCall_145_0 = (RuleCall)cTeetHStPAssignment_145.eContents().get(0);
		private final Assignment cTeetSSSpAssignment_146 = (Assignment)cGroup.eContents().get(146);
		private final RuleCall cTeetSSSpNTeetSSSpParserRuleCall_146_0 = (RuleCall)cTeetSSSpAssignment_146.eContents().get(0);
		private final Assignment cTeetHSSpAssignment_147 = (Assignment)cGroup.eContents().get(147);
		private final RuleCall cTeetHSSpNTeetHSSpParserRuleCall_147_0 = (RuleCall)cTeetHSSpAssignment_147.eContents().get(0);
		private final Assignment cSectionsAssignment_148 = (Assignment)cGroup.eContents().get(148);
		private final RuleCall cSectionsSectionParserRuleCall_148_0 = (RuleCall)cSectionsAssignment_148.eContents().get(0);
		private final Assignment cTBDrConNAssignment_149 = (Assignment)cGroup.eContents().get(149);
		private final RuleCall cTBDrConNNTBDrConNParserRuleCall_149_0 = (RuleCall)cTBDrConNAssignment_149.eContents().get(0);
		private final Assignment cTBDrConDAssignment_150 = (Assignment)cGroup.eContents().get(150);
		private final RuleCall cTBDrConDNTBDrConDParserRuleCall_150_0 = (RuleCall)cTBDrConDAssignment_150.eContents().get(0);
		private final Assignment cTpBrDTAssignment_151 = (Assignment)cGroup.eContents().get(151);
		private final RuleCall cTpBrDTNTpBrDTParserRuleCall_151_0 = (RuleCall)cTpBrDTAssignment_151.eContents().get(0);
		private final Assignment cSectionsAssignment_152 = (Assignment)cGroup.eContents().get(152);
		private final RuleCall cSectionsSectionParserRuleCall_152_0 = (RuleCall)cSectionsAssignment_152.eContents().get(0);
		private final Assignment cBldFile_1_Assignment_153 = (Assignment)cGroup.eContents().get(153);
		private final RuleCall cBldFile_1_FBldFile_1_ParserRuleCall_153_0 = (RuleCall)cBldFile_1_Assignment_153.eContents().get(0);
		private final Assignment cBldFile_2_Assignment_154 = (Assignment)cGroup.eContents().get(154);
		private final RuleCall cBldFile_2_FBldFile_2_ParserRuleCall_154_0 = (RuleCall)cBldFile_2_Assignment_154.eContents().get(0);
		private final Assignment cBldFile_3_Assignment_155 = (Assignment)cGroup.eContents().get(155);
		private final RuleCall cBldFile_3_FBldFile_3_ParserRuleCall_155_0 = (RuleCall)cBldFile_3_Assignment_155.eContents().get(0);
		private final Assignment cSectionsAssignment_156 = (Assignment)cGroup.eContents().get(156);
		private final RuleCall cSectionsSectionParserRuleCall_156_0 = (RuleCall)cSectionsAssignment_156.eContents().get(0);
		private final Assignment cADFileAssignment_157 = (Assignment)cGroup.eContents().get(157);
		private final RuleCall cADFileFADFileParserRuleCall_157_0 = (RuleCall)cADFileAssignment_157.eContents().get(0);
		private final Assignment cSectionsAssignment_158 = (Assignment)cGroup.eContents().get(158);
		private final RuleCall cSectionsSectionParserRuleCall_158_0 = (RuleCall)cSectionsAssignment_158.eContents().get(0);
		private final Assignment cNoiseFileAssignment_159 = (Assignment)cGroup.eContents().get(159);
		private final RuleCall cNoiseFileFNoiseFileParserRuleCall_159_0 = (RuleCall)cNoiseFileAssignment_159.eContents().get(0);
		private final Assignment cSectionsAssignment_160 = (Assignment)cGroup.eContents().get(160);
		private final RuleCall cSectionsSectionParserRuleCall_160_0 = (RuleCall)cSectionsAssignment_160.eContents().get(0);
		private final Assignment cADAMSFileAssignment_161 = (Assignment)cGroup.eContents().get(161);
		private final RuleCall cADAMSFileFADAMSFileParserRuleCall_161_0 = (RuleCall)cADAMSFileAssignment_161.eContents().get(0);
		private final Assignment cSectionsAssignment_162 = (Assignment)cGroup.eContents().get(162);
		private final RuleCall cSectionsSectionParserRuleCall_162_0 = (RuleCall)cSectionsAssignment_162.eContents().get(0);
		private final Assignment cLinFileAssignment_163 = (Assignment)cGroup.eContents().get(163);
		private final RuleCall cLinFileFLinFileParserRuleCall_163_0 = (RuleCall)cLinFileAssignment_163.eContents().get(0);
		private final Assignment cSectionsAssignment_164 = (Assignment)cGroup.eContents().get(164);
		private final RuleCall cSectionsSectionParserRuleCall_164_0 = (RuleCall)cSectionsAssignment_164.eContents().get(0);
		private final Assignment cSumPrintAssignment_165 = (Assignment)cGroup.eContents().get(165);
		private final RuleCall cSumPrintBSumPrintParserRuleCall_165_0 = (RuleCall)cSumPrintAssignment_165.eContents().get(0);
		private final Assignment cOutFileFmtAssignment_166 = (Assignment)cGroup.eContents().get(166);
		private final RuleCall cOutFileFmtBOutFileFmtParserRuleCall_166_0 = (RuleCall)cOutFileFmtAssignment_166.eContents().get(0);
		private final Assignment cTabDelimAssignment_167 = (Assignment)cGroup.eContents().get(167);
		private final RuleCall cTabDelimBTabDelimParserRuleCall_167_0 = (RuleCall)cTabDelimAssignment_167.eContents().get(0);
		private final Assignment cOutFmtAssignment_168 = (Assignment)cGroup.eContents().get(168);
		private final RuleCall cOutFmtSOutFmtParserRuleCall_168_0 = (RuleCall)cOutFmtAssignment_168.eContents().get(0);
		private final Assignment cTStartAssignment_169 = (Assignment)cGroup.eContents().get(169);
		private final RuleCall cTStartNTStartParserRuleCall_169_0 = (RuleCall)cTStartAssignment_169.eContents().get(0);
		private final Assignment cDecFactAssignment_170 = (Assignment)cGroup.eContents().get(170);
		private final RuleCall cDecFactIDecFactParserRuleCall_170_0 = (RuleCall)cDecFactAssignment_170.eContents().get(0);
		private final Assignment cSttsTimeAssignment_171 = (Assignment)cGroup.eContents().get(171);
		private final RuleCall cSttsTimeNSttsTimeParserRuleCall_171_0 = (RuleCall)cSttsTimeAssignment_171.eContents().get(0);
		private final Assignment cNcIMUxnAssignment_172 = (Assignment)cGroup.eContents().get(172);
		private final RuleCall cNcIMUxnNNcIMUxnParserRuleCall_172_0 = (RuleCall)cNcIMUxnAssignment_172.eContents().get(0);
		private final Assignment cNcIMUynAssignment_173 = (Assignment)cGroup.eContents().get(173);
		private final RuleCall cNcIMUynNNcIMUynParserRuleCall_173_0 = (RuleCall)cNcIMUynAssignment_173.eContents().get(0);
		private final Assignment cNcIMUznAssignment_174 = (Assignment)cGroup.eContents().get(174);
		private final RuleCall cNcIMUznNNcIMUznParserRuleCall_174_0 = (RuleCall)cNcIMUznAssignment_174.eContents().get(0);
		private final Assignment cShftGagLAssignment_175 = (Assignment)cGroup.eContents().get(175);
		private final RuleCall cShftGagLNShftGagLParserRuleCall_175_0 = (RuleCall)cShftGagLAssignment_175.eContents().get(0);
		private final Assignment cNTwGagesAssignment_176 = (Assignment)cGroup.eContents().get(176);
		private final RuleCall cNTwGagesINTwGagesParserRuleCall_176_0 = (RuleCall)cNTwGagesAssignment_176.eContents().get(0);
		private final Assignment cTwrGagNdAssignment_177 = (Assignment)cGroup.eContents().get(177);
		private final RuleCall cTwrGagNdATwrGagNdParserRuleCall_177_0 = (RuleCall)cTwrGagNdAssignment_177.eContents().get(0);
		private final Assignment cNBlGagesAssignment_178 = (Assignment)cGroup.eContents().get(178);
		private final RuleCall cNBlGagesINBlGagesParserRuleCall_178_0 = (RuleCall)cNBlGagesAssignment_178.eContents().get(0);
		private final Assignment cBldGagNdAssignment_179 = (Assignment)cGroup.eContents().get(179);
		private final RuleCall cBldGagNdABldGagNdParserRuleCall_179_0 = (RuleCall)cBldGagNdAssignment_179.eContents().get(0);
		private final Assignment cOutListAssignment_180 = (Assignment)cGroup.eContents().get(180);
		private final RuleCall cOutListVOutListParserRuleCall_180_0 = (RuleCall)cOutListAssignment_180.eContents().get(0);
		private final Alternatives cAlternatives_181 = (Alternatives)cGroup.eContents().get(181);
		private final RuleCall cWSTerminalRuleCall_181_0 = (RuleCall)cAlternatives_181.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_181_1 = (RuleCall)cAlternatives_181.eContents().get(1);
		private final RuleCall cSL_COMMENTTerminalRuleCall_181_2 = (RuleCall)cAlternatives_181.eContents().get(2);
		private final RuleCall cENDTerminalRuleCall_182 = (RuleCall)cGroup.eContents().get(182);
		private final Alternatives cAlternatives_183 = (Alternatives)cGroup.eContents().get(183);
		private final RuleCall cWSTerminalRuleCall_183_0 = (RuleCall)cAlternatives_183.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_183_1 = (RuleCall)cAlternatives_183.eContents().get(1);
		private final RuleCall cSL_COMMENTTerminalRuleCall_183_2 = (RuleCall)cAlternatives_183.eContents().get(2);
		
		//// about EOF
		//
		//// http://www.euclideanspace.com/software/development/eclipse/xtext/grammar/lexer/index.htm
		//
		//ModelFastfst:
		//
		//	Head=Header sections+=Section Echo=bEcho ADAMSPrep=iADAMSPrep AnalMode=iAnalMode NumBl=iNumBl TMax=nTMax DT=nDT
		//
		//	sections+=Section YCMode=iYCMode TYCOn=nTYCOn PCMode=iPCMode TPCOn=nTPCOn VSContrl=iVSContrl VS_RtGnSp=nVS_RtGnSp
		//
		//	VS_RtTq=nVS_RtTq VS_Rgn2K=nVS_Rgn2K VS_SlPc=nVS_SlPc GenModel=iGenModel GenTiStr=bGenTiStr GenTiStp=bGenTiStp
		//
		//	SpdGenOn=nSpdGenOn TimGenOn=nTimGenOn TimGenOf=nTimGenOf HSSBrMode=iHSSBrMode THSSBrDp=nTHSSBrDp TiDynBrk=nTiDynBrk
		//
		//	TTpBrDp_1_=nTTpBrDp_1_ TTpBrDp_2_=nTTpBrDp_2_ TTpBrDp_3_=nTTpBrDp_3_ TBDepISp_1_=nTBDepISp_1_
		//
		//	TBDepISp_2_=nTBDepISp_2_ TBDepISp_3_=nTBDepISp_3_ TYawManS=nTYawManS TYawManE=nTYawManE NacYawF=nNacYawF
		//
		//	TPitManS_1_=nTPitManS_1_ TPitManS_2_=nTPitManS_2_ TPitManS_3_=nTPitManS_3_ TPitManE_1_=nTPitManE_1_
		//
		//	TPitManE_2_=nTPitManE_2_ TPitManE_3_=nTPitManE_3_ BlPitch_1_=nBlPitch_1_ BlPitch_2_=nBlPitch_2_
		//
		//	BlPitch_3_=nBlPitch_3_ BlPitchF_1_=nBlPitchF_1_ BlPitchF_2_=nBlPitchF_2_ BlPitchF_3_=nBlPitchF_3_ sections+=Section
		//
		//	Gravity=nGravity sections+=Section FlapDOF1=bFlapDOF1 FlapDOF2=bFlapDOF2 EdgeDOF=bEdgeDOF TeetDOF=bTeetDOF
		//
		//	DrTrDOF=bDrTrDOF GenDOF=bGenDOF YawDOF=bYawDOF TwFADOF1=bTwFADOF1 TwFADOF2=bTwFADOF2 TwSSDOF1=bTwSSDOF1
		//
		//	TwSSDOF2=bTwSSDOF2 CompAero=bCompAero CompNoise=bCompNoise sections+=Section OoPDefl=nOoPDefl IPDefl=nIPDefl
		//
		//	TeetDefl=nTeetDefl Azimuth=nAzimuth RotSpeed=nRotSpeed NacYaw=nNacYaw TTDspFA=nTTDspFA TTDspSS=nTTDspSS
		//
		//	sections+=Section TipRad=nTipRad HubRad=nHubRad PSpnElN=nPSpnElN UndSling=nUndSling HubCM=nHubCM OverHang=nOverHang
		//
		//	NacCMxn=nNacCMxn NacCMyn=nNacCMyn NacCMzn=nNacCMzn TowerHt=nTowerHt Twr2Shft=nTwr2Shft TwrRBHt=nTwrRBHt
		//
		//	ShftTilt=nShftTilt Delta3=nDelta3 PreCone_1_=nPreCone_1_ PreCone_2_=nPreCone_2_ PreCone_3_=nPreCone_3_
		//
		//	AzimB1Up=nAzimB1Up sections+=Section YawBrMass=nYawBrMass NacMass=nNacMass HubMass=nHubMass TipMass_1_=nTipMass_1_
		//
		//	TipMass_2_=nTipMass_2_ TipMass_3_=nTipMass_3_ NacYIner=nNacYIner GenIner=nGenIner HubIner=nHubIner sections+=Section
		//
		//	GBoxEff= // Gearbox efficiency (%)								
		//
		//	nGBoxEff GenEff= // Generator efficiency [ignored by the Thevenin and user-defined generator models] (%)								
		//
		//	nGenEff GBRatio= // Gearbox ratio (-)								
		//
		//	nGBRatio GBRevers= // Gearbox reversal {T: if rotor and generator rotate in opposite directions} (flag)
		//
		//	bGBRevers HSSBrTqF= // Fully deployed HSS-brake torque (N-m)
		//
		//	nHSSBrTqF HSSBrDT= // Time for HSS-brake to reach full deployment once initiated (sec) [used only when HSSBrMode=1]
		//
		//	nHSSBrDT DynBrkFi= // File containing a mech-gen-torque vs HSS-speed curve for a dynamic brake [CURRENTLY IGNORED] (quoted string)
		//
		//	fDynBrkFi DTTorSpr= // Drivetrain torsional spring (N-m/rad)
		//
		//	nDTTorSpr DTTorDmp= // Drivetrain torsional damper (N-m/s)
		//
		//	nDTTorDmp sections+=Section SIG_SlPc= // Rated generator slip percentage (%) [used only when VSContrl=0 and GenModel=1]
		//
		//	nSIG_SlPc SIG_SySp= // Synchronous (zero-torque) generator speed (rpm) [used only when VSContrl=0 and GenModel=1]
		//
		//	nSIG_SySp SIG_RtTq= // Rated torque (N-m) [used only when VSContrl=0 and GenModel=1]
		//
		//	nSIG_RtTq SIG_PORt= // Pull-out ratio (Tpullout/Trated) (-) [used only when VSContrl=0 and GenModel=1]
		//
		//	nSIG_PORt sections+=Section TEC_Freq= // Line frequency [50 or 60] (Hz) [used only when VSContrl=0 and GenModel=2]
		//
		//	nTEC_Freq TEC_Npol= // Number of poles [even integer > 0] (-) [used only when VSContrl=0 and GenModel=2]
		//
		//	nTEC_Npol TEC_Sres= // Stator resistance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//	nTEC_Sres TEC_Rres= // Rotor resistance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//	nTEC_Rres TEC_VLL= // Line-to-line RMS voltage (volts) [used only when VSContrl=0 and GenModel=2]								
		//
		//	nTEC_VLL TEC_SLR= // Stator leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
		//
		//	nTEC_SLR TEC_RLR= // Rotor leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
		//
		//	nTEC_RLR TEC_MR= // Magnetizing reactance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//	nTEC_MR sections+=Section PtfmModel= // Platform model {0: none, 1: onshore, 2: fixed bottom offshore, 3: floating offshore}	(switch)
		//
		//	iPtfmModel PtfmFile= // Name of file containing platform properties [unused when PtfmModel=0]
		//
		//	fPtfmFile sections+=Section TwrNodes= // Number of tower nodes used for analysis (-)
		//
		//	iTwrNodes TwrFile= // Name of file containing tower properties	(quoted string)
		//
		//	fTwrFile sections+=Section YawSpr= // Nacelle-yaw spring constant (N-m/rad)								
		//
		//	nYawSpr YawDamp= // Nacelle-yaw damping constant (N-m/rad/s)								
		//
		//	nYawDamp YawNeut= // Neutral yaw position--yaw spring force is zero at this yaw (degrees)
		//
		//	nYawNeut sections+=Section Furling= // Read in additional model properties for Furling turbine (flag)								
		//
		//	bFurling FurlFile= // Name of file containing furling properties (quoted string) [unused when Furling=False]
		//
		//	fFurlFile sections+=Section TeetMod= // Rotor-teeter spring/damper model {0: none, 1: standard, 2: user-def routine UserTeet} [unused for 3 blades]								(switch)
		//
		//	iTeetMod TeetDmpP= // Rotor-teeter damper position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//	nTeetDmpP TeetDmp= // Rotor-teeter damping constant (N-m/rad/s) [used only for 2 blades and when TeetMod=1]								
		//
		//	nTeetDmp TeetCDmp= // Rotor-teeter rate-independent Coulomb-damping moment (N-m) [used only for 2 blades and when TeetMod=1]								
		//
		//	nTeetCDmp TeetSStP= // Rotor-teeter soft-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//	nTeetSStP TeetHStP= // Rotor-teeter hard-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//	nTeetHStP TeetSSSp= // Rotor-teeter soft-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]								
		//
		//	nTeetSSSp TeetHSSp= // Rotor-teeter hard-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]
		//
		//	nTeetHSSp sections+=Section TBDrConN= // Tip-brake drag constant during normal operation, Cd*Area	(m^2)
		//
		//	nTBDrConN TBDrConD= // Tip-brake drag constant during fully-deployed operation, Cd*Area (m^2)
		//
		//	nTBDrConD TpBrDT= // Time for Tip-BRAKE to reach full deployment once released (sec)
		//
		//	nTpBrDT sections+=Section BldFile_1_= // Name of file containing properties for blade 1 (quoted string)
		//
		//	fBldFile_1_ BldFile_2_= // Name of file containing properties for blade 2 (quoted string)
		//
		//	fBldFile_2_ BldFile_3_= // Name of file containing properties for blade 3 [unused for 2 blades]	
		//
		//	fBldFile_3_ sections+=Section ADFile= // Name of file containing AeroDyn input parameters	(quoted string)
		//
		//	fADFile sections+=Section NoiseFile= // Name of file containing aerodynamic noise input parameters [used only when CompNoise=True] (quoted string)
		//
		//	fNoiseFile sections+=Section ADAMSFile= // Name of file containing ADAMS-specific input parameters (quoted string) [unused when ADAMSPrep=1]
		//
		//	fADAMSFile sections+=Section LinFile= // Name of file containing FAST linearazation parameters (quoted string) [unused when AnalMode=1]
		//
		//	fLinFile sections+=Section SumPrint= // Print summary data to "<RootName>.fsm" (flag)
		//
		//	bSumPrint OutFileFmt=bOutFileFmt? // Format for tabular (time-marching) output file(s) (1: text file [<RootName>.out], 2: binary file [<RootName>.outb], 3: both) (switch)
		//
		//	TabDelim= // Generate A tab-delimited tabular Output file. (flag)
		//
		//	bTabDelim OutFmt= // Format used for tabular output except time.  Resulting field should be 10 characters. [not checked for validity!]								(quoted string)
		//
		//	sOutFmt TStart= // Time to begin tabular Output (s)
		//
		//	nTStart DecFact= // Decimation factor for tabular output {1: output every time step} (-)								
		//
		//	iDecFact SttsTime= // Amount of time between screen status messages (sec)								
		//
		//	nSttsTime NcIMUxn= // Downwind distance from the tower-top to the nacelle IMU (meters)								
		//
		//	nNcIMUxn NcIMUyn= // Lateral  distance from the tower-top to the nacelle IMU (meters)								
		//
		//	nNcIMUyn NcIMUzn= // Vertical distance from the tower-top to the nacelle IMU (meters)								
		//
		//	nNcIMUzn ShftGagL= // Distance from rotor apex [3 blades] or teeter pin [2 blades] to shaft strain gages [positive for upwind rotors] (meters)								
		//
		//	nShftGagL NTwGages= // Number of tower nodes that have strain gages for output [0 to 5]								(-)
		//
		//	iNTwGages TwrGagNd= // List of tower nodes that have strain gages [1 to TwrNodes] [unused if NTwGages=0]								(-)
		//
		//	aTwrGagNd NBlGages= // Number of blade nodes that have strain gages for output [0 to 5]								(-)
		//
		//	iNBlGages BldGagNd= // List of blade nodes that have strain gages [1 to BldNodes] [unused if NBlGages=0]								(-)
		//
		//	aBldGagNd OutList= // The next line(s) contains a list of output parameters.  See OutList.txt for a listing of available output channels.
		//
		//	vOutList (WS | NEWLINE | SL_COMMENT)* // The word "END" must appear in the first 3 columns of this last line).
		//
		//	END (WS | NEWLINE | SL_COMMENT)*;
		public ParserRule getRule() { return rule; }

		//Head=Header sections+=Section Echo=bEcho ADAMSPrep=iADAMSPrep AnalMode=iAnalMode NumBl=iNumBl TMax=nTMax DT=nDT
		//
		//sections+=Section YCMode=iYCMode TYCOn=nTYCOn PCMode=iPCMode TPCOn=nTPCOn VSContrl=iVSContrl VS_RtGnSp=nVS_RtGnSp
		//
		//VS_RtTq=nVS_RtTq VS_Rgn2K=nVS_Rgn2K VS_SlPc=nVS_SlPc GenModel=iGenModel GenTiStr=bGenTiStr GenTiStp=bGenTiStp
		//
		//SpdGenOn=nSpdGenOn TimGenOn=nTimGenOn TimGenOf=nTimGenOf HSSBrMode=iHSSBrMode THSSBrDp=nTHSSBrDp TiDynBrk=nTiDynBrk
		//
		//TTpBrDp_1_=nTTpBrDp_1_ TTpBrDp_2_=nTTpBrDp_2_ TTpBrDp_3_=nTTpBrDp_3_ TBDepISp_1_=nTBDepISp_1_ TBDepISp_2_=nTBDepISp_2_
		//
		//TBDepISp_3_=nTBDepISp_3_ TYawManS=nTYawManS TYawManE=nTYawManE NacYawF=nNacYawF TPitManS_1_=nTPitManS_1_
		//
		//TPitManS_2_=nTPitManS_2_ TPitManS_3_=nTPitManS_3_ TPitManE_1_=nTPitManE_1_ TPitManE_2_=nTPitManE_2_
		//
		//TPitManE_3_=nTPitManE_3_ BlPitch_1_=nBlPitch_1_ BlPitch_2_=nBlPitch_2_ BlPitch_3_=nBlPitch_3_ BlPitchF_1_=nBlPitchF_1_
		//
		//BlPitchF_2_=nBlPitchF_2_ BlPitchF_3_=nBlPitchF_3_ sections+=Section Gravity=nGravity sections+=Section
		//
		//FlapDOF1=bFlapDOF1 FlapDOF2=bFlapDOF2 EdgeDOF=bEdgeDOF TeetDOF=bTeetDOF DrTrDOF=bDrTrDOF GenDOF=bGenDOF YawDOF=bYawDOF
		//
		//TwFADOF1=bTwFADOF1 TwFADOF2=bTwFADOF2 TwSSDOF1=bTwSSDOF1 TwSSDOF2=bTwSSDOF2 CompAero=bCompAero CompNoise=bCompNoise
		//
		//sections+=Section OoPDefl=nOoPDefl IPDefl=nIPDefl TeetDefl=nTeetDefl Azimuth=nAzimuth RotSpeed=nRotSpeed
		//
		//NacYaw=nNacYaw TTDspFA=nTTDspFA TTDspSS=nTTDspSS sections+=Section TipRad=nTipRad HubRad=nHubRad PSpnElN=nPSpnElN
		//
		//UndSling=nUndSling HubCM=nHubCM OverHang=nOverHang NacCMxn=nNacCMxn NacCMyn=nNacCMyn NacCMzn=nNacCMzn TowerHt=nTowerHt
		//
		//Twr2Shft=nTwr2Shft TwrRBHt=nTwrRBHt ShftTilt=nShftTilt Delta3=nDelta3 PreCone_1_=nPreCone_1_ PreCone_2_=nPreCone_2_
		//
		//PreCone_3_=nPreCone_3_ AzimB1Up=nAzimB1Up sections+=Section YawBrMass=nYawBrMass NacMass=nNacMass HubMass=nHubMass
		//
		//TipMass_1_=nTipMass_1_ TipMass_2_=nTipMass_2_ TipMass_3_=nTipMass_3_ NacYIner=nNacYIner GenIner=nGenIner
		//
		//HubIner=nHubIner sections+=Section GBoxEff= // Gearbox efficiency (%)								
		//
		//nGBoxEff GenEff= // Generator efficiency [ignored by the Thevenin and user-defined generator models] (%)								
		//
		//nGenEff GBRatio= // Gearbox ratio (-)								
		//
		//nGBRatio GBRevers= // Gearbox reversal {T: if rotor and generator rotate in opposite directions} (flag)
		//
		//bGBRevers HSSBrTqF= // Fully deployed HSS-brake torque (N-m)
		//
		//nHSSBrTqF HSSBrDT= // Time for HSS-brake to reach full deployment once initiated (sec) [used only when HSSBrMode=1]
		//
		//nHSSBrDT DynBrkFi= // File containing a mech-gen-torque vs HSS-speed curve for a dynamic brake [CURRENTLY IGNORED] (quoted string)
		//
		//fDynBrkFi DTTorSpr= // Drivetrain torsional spring (N-m/rad)
		//
		//nDTTorSpr DTTorDmp= // Drivetrain torsional damper (N-m/s)
		//
		//nDTTorDmp sections+=Section SIG_SlPc= // Rated generator slip percentage (%) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_SlPc SIG_SySp= // Synchronous (zero-torque) generator speed (rpm) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_SySp SIG_RtTq= // Rated torque (N-m) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_RtTq SIG_PORt= // Pull-out ratio (Tpullout/Trated) (-) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_PORt sections+=Section TEC_Freq= // Line frequency [50 or 60] (Hz) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Freq TEC_Npol= // Number of poles [even integer > 0] (-) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Npol TEC_Sres= // Stator resistance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Sres TEC_Rres= // Rotor resistance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Rres TEC_VLL= // Line-to-line RMS voltage (volts) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_VLL TEC_SLR= // Stator leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_SLR TEC_RLR= // Rotor leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_RLR TEC_MR= // Magnetizing reactance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_MR sections+=Section PtfmModel= // Platform model {0: none, 1: onshore, 2: fixed bottom offshore, 3: floating offshore}	(switch)
		//
		//iPtfmModel PtfmFile= // Name of file containing platform properties [unused when PtfmModel=0]
		//
		//fPtfmFile sections+=Section TwrNodes= // Number of tower nodes used for analysis (-)
		//
		//iTwrNodes TwrFile= // Name of file containing tower properties	(quoted string)
		//
		//fTwrFile sections+=Section YawSpr= // Nacelle-yaw spring constant (N-m/rad)								
		//
		//nYawSpr YawDamp= // Nacelle-yaw damping constant (N-m/rad/s)								
		//
		//nYawDamp YawNeut= // Neutral yaw position--yaw spring force is zero at this yaw (degrees)
		//
		//nYawNeut sections+=Section Furling= // Read in additional model properties for Furling turbine (flag)								
		//
		//bFurling FurlFile= // Name of file containing furling properties (quoted string) [unused when Furling=False]
		//
		//fFurlFile sections+=Section TeetMod= // Rotor-teeter spring/damper model {0: none, 1: standard, 2: user-def routine UserTeet} [unused for 3 blades]								(switch)
		//
		//iTeetMod TeetDmpP= // Rotor-teeter damper position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetDmpP TeetDmp= // Rotor-teeter damping constant (N-m/rad/s) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetDmp TeetCDmp= // Rotor-teeter rate-independent Coulomb-damping moment (N-m) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetCDmp TeetSStP= // Rotor-teeter soft-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetSStP TeetHStP= // Rotor-teeter hard-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetHStP TeetSSSp= // Rotor-teeter soft-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetSSSp TeetHSSp= // Rotor-teeter hard-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]
		//
		//nTeetHSSp sections+=Section TBDrConN= // Tip-brake drag constant during normal operation, Cd*Area	(m^2)
		//
		//nTBDrConN TBDrConD= // Tip-brake drag constant during fully-deployed operation, Cd*Area (m^2)
		//
		//nTBDrConD TpBrDT= // Time for Tip-BRAKE to reach full deployment once released (sec)
		//
		//nTpBrDT sections+=Section BldFile_1_= // Name of file containing properties for blade 1 (quoted string)
		//
		//fBldFile_1_ BldFile_2_= // Name of file containing properties for blade 2 (quoted string)
		//
		//fBldFile_2_ BldFile_3_= // Name of file containing properties for blade 3 [unused for 2 blades]	
		//
		//fBldFile_3_ sections+=Section ADFile= // Name of file containing AeroDyn input parameters	(quoted string)
		//
		//fADFile sections+=Section NoiseFile= // Name of file containing aerodynamic noise input parameters [used only when CompNoise=True] (quoted string)
		//
		//fNoiseFile sections+=Section ADAMSFile= // Name of file containing ADAMS-specific input parameters (quoted string) [unused when ADAMSPrep=1]
		//
		//fADAMSFile sections+=Section LinFile= // Name of file containing FAST linearazation parameters (quoted string) [unused when AnalMode=1]
		//
		//fLinFile sections+=Section SumPrint= // Print summary data to "<RootName>.fsm" (flag)
		//
		//bSumPrint OutFileFmt=bOutFileFmt? // Format for tabular (time-marching) output file(s) (1: text file [<RootName>.out], 2: binary file [<RootName>.outb], 3: both) (switch)
		//
		//TabDelim= // Generate A tab-delimited tabular Output file. (flag)
		//
		//bTabDelim OutFmt= // Format used for tabular output except time.  Resulting field should be 10 characters. [not checked for validity!]								(quoted string)
		//
		//sOutFmt TStart= // Time to begin tabular Output (s)
		//
		//nTStart DecFact= // Decimation factor for tabular output {1: output every time step} (-)								
		//
		//iDecFact SttsTime= // Amount of time between screen status messages (sec)								
		//
		//nSttsTime NcIMUxn= // Downwind distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUxn NcIMUyn= // Lateral  distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUyn NcIMUzn= // Vertical distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUzn ShftGagL= // Distance from rotor apex [3 blades] or teeter pin [2 blades] to shaft strain gages [positive for upwind rotors] (meters)								
		//
		//nShftGagL NTwGages= // Number of tower nodes that have strain gages for output [0 to 5]								(-)
		//
		//iNTwGages TwrGagNd= // List of tower nodes that have strain gages [1 to TwrNodes] [unused if NTwGages=0]								(-)
		//
		//aTwrGagNd NBlGages= // Number of blade nodes that have strain gages for output [0 to 5]								(-)
		//
		//iNBlGages BldGagNd= // List of blade nodes that have strain gages [1 to BldNodes] [unused if NBlGages=0]								(-)
		//
		//aBldGagNd OutList= // The next line(s) contains a list of output parameters.  See OutList.txt for a listing of available output channels.
		//
		//vOutList (WS | NEWLINE | SL_COMMENT)* // The word "END" must appear in the first 3 columns of this last line).
		//
		//END (WS | NEWLINE | SL_COMMENT)*
		public Group getGroup() { return cGroup; }

		//Head=Header
		public Assignment getHeadAssignment_0() { return cHeadAssignment_0; }

		//Header
		public RuleCall getHeadHeaderParserRuleCall_0_0() { return cHeadHeaderParserRuleCall_0_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_1() { return cSectionsAssignment_1; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_1_0() { return cSectionsSectionParserRuleCall_1_0; }

		//Echo=bEcho
		public Assignment getEchoAssignment_2() { return cEchoAssignment_2; }

		//bEcho
		public RuleCall getEchoBEchoParserRuleCall_2_0() { return cEchoBEchoParserRuleCall_2_0; }

		//ADAMSPrep=iADAMSPrep
		public Assignment getADAMSPrepAssignment_3() { return cADAMSPrepAssignment_3; }

		//iADAMSPrep
		public RuleCall getADAMSPrepIADAMSPrepParserRuleCall_3_0() { return cADAMSPrepIADAMSPrepParserRuleCall_3_0; }

		//AnalMode=iAnalMode
		public Assignment getAnalModeAssignment_4() { return cAnalModeAssignment_4; }

		//iAnalMode
		public RuleCall getAnalModeIAnalModeParserRuleCall_4_0() { return cAnalModeIAnalModeParserRuleCall_4_0; }

		//NumBl=iNumBl
		public Assignment getNumBlAssignment_5() { return cNumBlAssignment_5; }

		//iNumBl
		public RuleCall getNumBlINumBlParserRuleCall_5_0() { return cNumBlINumBlParserRuleCall_5_0; }

		//TMax=nTMax
		public Assignment getTMaxAssignment_6() { return cTMaxAssignment_6; }

		//nTMax
		public RuleCall getTMaxNTMaxParserRuleCall_6_0() { return cTMaxNTMaxParserRuleCall_6_0; }

		//DT=nDT
		public Assignment getDTAssignment_7() { return cDTAssignment_7; }

		//nDT
		public RuleCall getDTNDTParserRuleCall_7_0() { return cDTNDTParserRuleCall_7_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_8() { return cSectionsAssignment_8; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_8_0() { return cSectionsSectionParserRuleCall_8_0; }

		//YCMode=iYCMode
		public Assignment getYCModeAssignment_9() { return cYCModeAssignment_9; }

		//iYCMode
		public RuleCall getYCModeIYCModeParserRuleCall_9_0() { return cYCModeIYCModeParserRuleCall_9_0; }

		//TYCOn=nTYCOn
		public Assignment getTYCOnAssignment_10() { return cTYCOnAssignment_10; }

		//nTYCOn
		public RuleCall getTYCOnNTYCOnParserRuleCall_10_0() { return cTYCOnNTYCOnParserRuleCall_10_0; }

		//PCMode=iPCMode
		public Assignment getPCModeAssignment_11() { return cPCModeAssignment_11; }

		//iPCMode
		public RuleCall getPCModeIPCModeParserRuleCall_11_0() { return cPCModeIPCModeParserRuleCall_11_0; }

		//TPCOn=nTPCOn
		public Assignment getTPCOnAssignment_12() { return cTPCOnAssignment_12; }

		//nTPCOn
		public RuleCall getTPCOnNTPCOnParserRuleCall_12_0() { return cTPCOnNTPCOnParserRuleCall_12_0; }

		//VSContrl=iVSContrl
		public Assignment getVSContrlAssignment_13() { return cVSContrlAssignment_13; }

		//iVSContrl
		public RuleCall getVSContrlIVSContrlParserRuleCall_13_0() { return cVSContrlIVSContrlParserRuleCall_13_0; }

		//VS_RtGnSp=nVS_RtGnSp
		public Assignment getVS_RtGnSpAssignment_14() { return cVS_RtGnSpAssignment_14; }

		//nVS_RtGnSp
		public RuleCall getVS_RtGnSpNVS_RtGnSpParserRuleCall_14_0() { return cVS_RtGnSpNVS_RtGnSpParserRuleCall_14_0; }

		//VS_RtTq=nVS_RtTq
		public Assignment getVS_RtTqAssignment_15() { return cVS_RtTqAssignment_15; }

		//nVS_RtTq
		public RuleCall getVS_RtTqNVS_RtTqParserRuleCall_15_0() { return cVS_RtTqNVS_RtTqParserRuleCall_15_0; }

		//VS_Rgn2K=nVS_Rgn2K
		public Assignment getVS_Rgn2KAssignment_16() { return cVS_Rgn2KAssignment_16; }

		//nVS_Rgn2K
		public RuleCall getVS_Rgn2KNVS_Rgn2KParserRuleCall_16_0() { return cVS_Rgn2KNVS_Rgn2KParserRuleCall_16_0; }

		//VS_SlPc=nVS_SlPc
		public Assignment getVS_SlPcAssignment_17() { return cVS_SlPcAssignment_17; }

		//nVS_SlPc
		public RuleCall getVS_SlPcNVS_SlPcParserRuleCall_17_0() { return cVS_SlPcNVS_SlPcParserRuleCall_17_0; }

		//GenModel=iGenModel
		public Assignment getGenModelAssignment_18() { return cGenModelAssignment_18; }

		//iGenModel
		public RuleCall getGenModelIGenModelParserRuleCall_18_0() { return cGenModelIGenModelParserRuleCall_18_0; }

		//GenTiStr=bGenTiStr
		public Assignment getGenTiStrAssignment_19() { return cGenTiStrAssignment_19; }

		//bGenTiStr
		public RuleCall getGenTiStrBGenTiStrParserRuleCall_19_0() { return cGenTiStrBGenTiStrParserRuleCall_19_0; }

		//GenTiStp=bGenTiStp
		public Assignment getGenTiStpAssignment_20() { return cGenTiStpAssignment_20; }

		//bGenTiStp
		public RuleCall getGenTiStpBGenTiStpParserRuleCall_20_0() { return cGenTiStpBGenTiStpParserRuleCall_20_0; }

		//SpdGenOn=nSpdGenOn
		public Assignment getSpdGenOnAssignment_21() { return cSpdGenOnAssignment_21; }

		//nSpdGenOn
		public RuleCall getSpdGenOnNSpdGenOnParserRuleCall_21_0() { return cSpdGenOnNSpdGenOnParserRuleCall_21_0; }

		//TimGenOn=nTimGenOn
		public Assignment getTimGenOnAssignment_22() { return cTimGenOnAssignment_22; }

		//nTimGenOn
		public RuleCall getTimGenOnNTimGenOnParserRuleCall_22_0() { return cTimGenOnNTimGenOnParserRuleCall_22_0; }

		//TimGenOf=nTimGenOf
		public Assignment getTimGenOfAssignment_23() { return cTimGenOfAssignment_23; }

		//nTimGenOf
		public RuleCall getTimGenOfNTimGenOfParserRuleCall_23_0() { return cTimGenOfNTimGenOfParserRuleCall_23_0; }

		//HSSBrMode=iHSSBrMode
		public Assignment getHSSBrModeAssignment_24() { return cHSSBrModeAssignment_24; }

		//iHSSBrMode
		public RuleCall getHSSBrModeIHSSBrModeParserRuleCall_24_0() { return cHSSBrModeIHSSBrModeParserRuleCall_24_0; }

		//THSSBrDp=nTHSSBrDp
		public Assignment getTHSSBrDpAssignment_25() { return cTHSSBrDpAssignment_25; }

		//nTHSSBrDp
		public RuleCall getTHSSBrDpNTHSSBrDpParserRuleCall_25_0() { return cTHSSBrDpNTHSSBrDpParserRuleCall_25_0; }

		//TiDynBrk=nTiDynBrk
		public Assignment getTiDynBrkAssignment_26() { return cTiDynBrkAssignment_26; }

		//nTiDynBrk
		public RuleCall getTiDynBrkNTiDynBrkParserRuleCall_26_0() { return cTiDynBrkNTiDynBrkParserRuleCall_26_0; }

		//TTpBrDp_1_=nTTpBrDp_1_
		public Assignment getTTpBrDp_1_Assignment_27() { return cTTpBrDp_1_Assignment_27; }

		//nTTpBrDp_1_
		public RuleCall getTTpBrDp_1_NTTpBrDp_1_ParserRuleCall_27_0() { return cTTpBrDp_1_NTTpBrDp_1_ParserRuleCall_27_0; }

		//TTpBrDp_2_=nTTpBrDp_2_
		public Assignment getTTpBrDp_2_Assignment_28() { return cTTpBrDp_2_Assignment_28; }

		//nTTpBrDp_2_
		public RuleCall getTTpBrDp_2_NTTpBrDp_2_ParserRuleCall_28_0() { return cTTpBrDp_2_NTTpBrDp_2_ParserRuleCall_28_0; }

		//TTpBrDp_3_=nTTpBrDp_3_
		public Assignment getTTpBrDp_3_Assignment_29() { return cTTpBrDp_3_Assignment_29; }

		//nTTpBrDp_3_
		public RuleCall getTTpBrDp_3_NTTpBrDp_3_ParserRuleCall_29_0() { return cTTpBrDp_3_NTTpBrDp_3_ParserRuleCall_29_0; }

		//TBDepISp_1_=nTBDepISp_1_
		public Assignment getTBDepISp_1_Assignment_30() { return cTBDepISp_1_Assignment_30; }

		//nTBDepISp_1_
		public RuleCall getTBDepISp_1_NTBDepISp_1_ParserRuleCall_30_0() { return cTBDepISp_1_NTBDepISp_1_ParserRuleCall_30_0; }

		//TBDepISp_2_=nTBDepISp_2_
		public Assignment getTBDepISp_2_Assignment_31() { return cTBDepISp_2_Assignment_31; }

		//nTBDepISp_2_
		public RuleCall getTBDepISp_2_NTBDepISp_2_ParserRuleCall_31_0() { return cTBDepISp_2_NTBDepISp_2_ParserRuleCall_31_0; }

		//TBDepISp_3_=nTBDepISp_3_
		public Assignment getTBDepISp_3_Assignment_32() { return cTBDepISp_3_Assignment_32; }

		//nTBDepISp_3_
		public RuleCall getTBDepISp_3_NTBDepISp_3_ParserRuleCall_32_0() { return cTBDepISp_3_NTBDepISp_3_ParserRuleCall_32_0; }

		//TYawManS=nTYawManS
		public Assignment getTYawManSAssignment_33() { return cTYawManSAssignment_33; }

		//nTYawManS
		public RuleCall getTYawManSNTYawManSParserRuleCall_33_0() { return cTYawManSNTYawManSParserRuleCall_33_0; }

		//TYawManE=nTYawManE
		public Assignment getTYawManEAssignment_34() { return cTYawManEAssignment_34; }

		//nTYawManE
		public RuleCall getTYawManENTYawManEParserRuleCall_34_0() { return cTYawManENTYawManEParserRuleCall_34_0; }

		//NacYawF=nNacYawF
		public Assignment getNacYawFAssignment_35() { return cNacYawFAssignment_35; }

		//nNacYawF
		public RuleCall getNacYawFNNacYawFParserRuleCall_35_0() { return cNacYawFNNacYawFParserRuleCall_35_0; }

		//TPitManS_1_=nTPitManS_1_
		public Assignment getTPitManS_1_Assignment_36() { return cTPitManS_1_Assignment_36; }

		//nTPitManS_1_
		public RuleCall getTPitManS_1_NTPitManS_1_ParserRuleCall_36_0() { return cTPitManS_1_NTPitManS_1_ParserRuleCall_36_0; }

		//TPitManS_2_=nTPitManS_2_
		public Assignment getTPitManS_2_Assignment_37() { return cTPitManS_2_Assignment_37; }

		//nTPitManS_2_
		public RuleCall getTPitManS_2_NTPitManS_2_ParserRuleCall_37_0() { return cTPitManS_2_NTPitManS_2_ParserRuleCall_37_0; }

		//TPitManS_3_=nTPitManS_3_
		public Assignment getTPitManS_3_Assignment_38() { return cTPitManS_3_Assignment_38; }

		//nTPitManS_3_
		public RuleCall getTPitManS_3_NTPitManS_3_ParserRuleCall_38_0() { return cTPitManS_3_NTPitManS_3_ParserRuleCall_38_0; }

		//TPitManE_1_=nTPitManE_1_
		public Assignment getTPitManE_1_Assignment_39() { return cTPitManE_1_Assignment_39; }

		//nTPitManE_1_
		public RuleCall getTPitManE_1_NTPitManE_1_ParserRuleCall_39_0() { return cTPitManE_1_NTPitManE_1_ParserRuleCall_39_0; }

		//TPitManE_2_=nTPitManE_2_
		public Assignment getTPitManE_2_Assignment_40() { return cTPitManE_2_Assignment_40; }

		//nTPitManE_2_
		public RuleCall getTPitManE_2_NTPitManE_2_ParserRuleCall_40_0() { return cTPitManE_2_NTPitManE_2_ParserRuleCall_40_0; }

		//TPitManE_3_=nTPitManE_3_
		public Assignment getTPitManE_3_Assignment_41() { return cTPitManE_3_Assignment_41; }

		//nTPitManE_3_
		public RuleCall getTPitManE_3_NTPitManE_3_ParserRuleCall_41_0() { return cTPitManE_3_NTPitManE_3_ParserRuleCall_41_0; }

		//BlPitch_1_=nBlPitch_1_
		public Assignment getBlPitch_1_Assignment_42() { return cBlPitch_1_Assignment_42; }

		//nBlPitch_1_
		public RuleCall getBlPitch_1_NBlPitch_1_ParserRuleCall_42_0() { return cBlPitch_1_NBlPitch_1_ParserRuleCall_42_0; }

		//BlPitch_2_=nBlPitch_2_
		public Assignment getBlPitch_2_Assignment_43() { return cBlPitch_2_Assignment_43; }

		//nBlPitch_2_
		public RuleCall getBlPitch_2_NBlPitch_2_ParserRuleCall_43_0() { return cBlPitch_2_NBlPitch_2_ParserRuleCall_43_0; }

		//BlPitch_3_=nBlPitch_3_
		public Assignment getBlPitch_3_Assignment_44() { return cBlPitch_3_Assignment_44; }

		//nBlPitch_3_
		public RuleCall getBlPitch_3_NBlPitch_3_ParserRuleCall_44_0() { return cBlPitch_3_NBlPitch_3_ParserRuleCall_44_0; }

		//BlPitchF_1_=nBlPitchF_1_
		public Assignment getBlPitchF_1_Assignment_45() { return cBlPitchF_1_Assignment_45; }

		//nBlPitchF_1_
		public RuleCall getBlPitchF_1_NBlPitchF_1_ParserRuleCall_45_0() { return cBlPitchF_1_NBlPitchF_1_ParserRuleCall_45_0; }

		//BlPitchF_2_=nBlPitchF_2_
		public Assignment getBlPitchF_2_Assignment_46() { return cBlPitchF_2_Assignment_46; }

		//nBlPitchF_2_
		public RuleCall getBlPitchF_2_NBlPitchF_2_ParserRuleCall_46_0() { return cBlPitchF_2_NBlPitchF_2_ParserRuleCall_46_0; }

		//BlPitchF_3_=nBlPitchF_3_
		public Assignment getBlPitchF_3_Assignment_47() { return cBlPitchF_3_Assignment_47; }

		//nBlPitchF_3_
		public RuleCall getBlPitchF_3_NBlPitchF_3_ParserRuleCall_47_0() { return cBlPitchF_3_NBlPitchF_3_ParserRuleCall_47_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_48() { return cSectionsAssignment_48; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_48_0() { return cSectionsSectionParserRuleCall_48_0; }

		//Gravity=nGravity
		public Assignment getGravityAssignment_49() { return cGravityAssignment_49; }

		//nGravity
		public RuleCall getGravityNGravityParserRuleCall_49_0() { return cGravityNGravityParserRuleCall_49_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_50() { return cSectionsAssignment_50; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_50_0() { return cSectionsSectionParserRuleCall_50_0; }

		//FlapDOF1=bFlapDOF1
		public Assignment getFlapDOF1Assignment_51() { return cFlapDOF1Assignment_51; }

		//bFlapDOF1
		public RuleCall getFlapDOF1BFlapDOF1ParserRuleCall_51_0() { return cFlapDOF1BFlapDOF1ParserRuleCall_51_0; }

		//FlapDOF2=bFlapDOF2
		public Assignment getFlapDOF2Assignment_52() { return cFlapDOF2Assignment_52; }

		//bFlapDOF2
		public RuleCall getFlapDOF2BFlapDOF2ParserRuleCall_52_0() { return cFlapDOF2BFlapDOF2ParserRuleCall_52_0; }

		//EdgeDOF=bEdgeDOF
		public Assignment getEdgeDOFAssignment_53() { return cEdgeDOFAssignment_53; }

		//bEdgeDOF
		public RuleCall getEdgeDOFBEdgeDOFParserRuleCall_53_0() { return cEdgeDOFBEdgeDOFParserRuleCall_53_0; }

		//TeetDOF=bTeetDOF
		public Assignment getTeetDOFAssignment_54() { return cTeetDOFAssignment_54; }

		//bTeetDOF
		public RuleCall getTeetDOFBTeetDOFParserRuleCall_54_0() { return cTeetDOFBTeetDOFParserRuleCall_54_0; }

		//DrTrDOF=bDrTrDOF
		public Assignment getDrTrDOFAssignment_55() { return cDrTrDOFAssignment_55; }

		//bDrTrDOF
		public RuleCall getDrTrDOFBDrTrDOFParserRuleCall_55_0() { return cDrTrDOFBDrTrDOFParserRuleCall_55_0; }

		//GenDOF=bGenDOF
		public Assignment getGenDOFAssignment_56() { return cGenDOFAssignment_56; }

		//bGenDOF
		public RuleCall getGenDOFBGenDOFParserRuleCall_56_0() { return cGenDOFBGenDOFParserRuleCall_56_0; }

		//YawDOF=bYawDOF
		public Assignment getYawDOFAssignment_57() { return cYawDOFAssignment_57; }

		//bYawDOF
		public RuleCall getYawDOFBYawDOFParserRuleCall_57_0() { return cYawDOFBYawDOFParserRuleCall_57_0; }

		//TwFADOF1=bTwFADOF1
		public Assignment getTwFADOF1Assignment_58() { return cTwFADOF1Assignment_58; }

		//bTwFADOF1
		public RuleCall getTwFADOF1BTwFADOF1ParserRuleCall_58_0() { return cTwFADOF1BTwFADOF1ParserRuleCall_58_0; }

		//TwFADOF2=bTwFADOF2
		public Assignment getTwFADOF2Assignment_59() { return cTwFADOF2Assignment_59; }

		//bTwFADOF2
		public RuleCall getTwFADOF2BTwFADOF2ParserRuleCall_59_0() { return cTwFADOF2BTwFADOF2ParserRuleCall_59_0; }

		//TwSSDOF1=bTwSSDOF1
		public Assignment getTwSSDOF1Assignment_60() { return cTwSSDOF1Assignment_60; }

		//bTwSSDOF1
		public RuleCall getTwSSDOF1BTwSSDOF1ParserRuleCall_60_0() { return cTwSSDOF1BTwSSDOF1ParserRuleCall_60_0; }

		//TwSSDOF2=bTwSSDOF2
		public Assignment getTwSSDOF2Assignment_61() { return cTwSSDOF2Assignment_61; }

		//bTwSSDOF2
		public RuleCall getTwSSDOF2BTwSSDOF2ParserRuleCall_61_0() { return cTwSSDOF2BTwSSDOF2ParserRuleCall_61_0; }

		//CompAero=bCompAero
		public Assignment getCompAeroAssignment_62() { return cCompAeroAssignment_62; }

		//bCompAero
		public RuleCall getCompAeroBCompAeroParserRuleCall_62_0() { return cCompAeroBCompAeroParserRuleCall_62_0; }

		//CompNoise=bCompNoise
		public Assignment getCompNoiseAssignment_63() { return cCompNoiseAssignment_63; }

		//bCompNoise
		public RuleCall getCompNoiseBCompNoiseParserRuleCall_63_0() { return cCompNoiseBCompNoiseParserRuleCall_63_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_64() { return cSectionsAssignment_64; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_64_0() { return cSectionsSectionParserRuleCall_64_0; }

		//OoPDefl=nOoPDefl
		public Assignment getOoPDeflAssignment_65() { return cOoPDeflAssignment_65; }

		//nOoPDefl
		public RuleCall getOoPDeflNOoPDeflParserRuleCall_65_0() { return cOoPDeflNOoPDeflParserRuleCall_65_0; }

		//IPDefl=nIPDefl
		public Assignment getIPDeflAssignment_66() { return cIPDeflAssignment_66; }

		//nIPDefl
		public RuleCall getIPDeflNIPDeflParserRuleCall_66_0() { return cIPDeflNIPDeflParserRuleCall_66_0; }

		//TeetDefl=nTeetDefl
		public Assignment getTeetDeflAssignment_67() { return cTeetDeflAssignment_67; }

		//nTeetDefl
		public RuleCall getTeetDeflNTeetDeflParserRuleCall_67_0() { return cTeetDeflNTeetDeflParserRuleCall_67_0; }

		//Azimuth=nAzimuth
		public Assignment getAzimuthAssignment_68() { return cAzimuthAssignment_68; }

		//nAzimuth
		public RuleCall getAzimuthNAzimuthParserRuleCall_68_0() { return cAzimuthNAzimuthParserRuleCall_68_0; }

		//RotSpeed=nRotSpeed
		public Assignment getRotSpeedAssignment_69() { return cRotSpeedAssignment_69; }

		//nRotSpeed
		public RuleCall getRotSpeedNRotSpeedParserRuleCall_69_0() { return cRotSpeedNRotSpeedParserRuleCall_69_0; }

		//NacYaw=nNacYaw
		public Assignment getNacYawAssignment_70() { return cNacYawAssignment_70; }

		//nNacYaw
		public RuleCall getNacYawNNacYawParserRuleCall_70_0() { return cNacYawNNacYawParserRuleCall_70_0; }

		//TTDspFA=nTTDspFA
		public Assignment getTTDspFAAssignment_71() { return cTTDspFAAssignment_71; }

		//nTTDspFA
		public RuleCall getTTDspFANTTDspFAParserRuleCall_71_0() { return cTTDspFANTTDspFAParserRuleCall_71_0; }

		//TTDspSS=nTTDspSS
		public Assignment getTTDspSSAssignment_72() { return cTTDspSSAssignment_72; }

		//nTTDspSS
		public RuleCall getTTDspSSNTTDspSSParserRuleCall_72_0() { return cTTDspSSNTTDspSSParserRuleCall_72_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_73() { return cSectionsAssignment_73; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_73_0() { return cSectionsSectionParserRuleCall_73_0; }

		//TipRad=nTipRad
		public Assignment getTipRadAssignment_74() { return cTipRadAssignment_74; }

		//nTipRad
		public RuleCall getTipRadNTipRadParserRuleCall_74_0() { return cTipRadNTipRadParserRuleCall_74_0; }

		//HubRad=nHubRad
		public Assignment getHubRadAssignment_75() { return cHubRadAssignment_75; }

		//nHubRad
		public RuleCall getHubRadNHubRadParserRuleCall_75_0() { return cHubRadNHubRadParserRuleCall_75_0; }

		//PSpnElN=nPSpnElN
		public Assignment getPSpnElNAssignment_76() { return cPSpnElNAssignment_76; }

		//nPSpnElN
		public RuleCall getPSpnElNNPSpnElNParserRuleCall_76_0() { return cPSpnElNNPSpnElNParserRuleCall_76_0; }

		//UndSling=nUndSling
		public Assignment getUndSlingAssignment_77() { return cUndSlingAssignment_77; }

		//nUndSling
		public RuleCall getUndSlingNUndSlingParserRuleCall_77_0() { return cUndSlingNUndSlingParserRuleCall_77_0; }

		//HubCM=nHubCM
		public Assignment getHubCMAssignment_78() { return cHubCMAssignment_78; }

		//nHubCM
		public RuleCall getHubCMNHubCMParserRuleCall_78_0() { return cHubCMNHubCMParserRuleCall_78_0; }

		//OverHang=nOverHang
		public Assignment getOverHangAssignment_79() { return cOverHangAssignment_79; }

		//nOverHang
		public RuleCall getOverHangNOverHangParserRuleCall_79_0() { return cOverHangNOverHangParserRuleCall_79_0; }

		//NacCMxn=nNacCMxn
		public Assignment getNacCMxnAssignment_80() { return cNacCMxnAssignment_80; }

		//nNacCMxn
		public RuleCall getNacCMxnNNacCMxnParserRuleCall_80_0() { return cNacCMxnNNacCMxnParserRuleCall_80_0; }

		//NacCMyn=nNacCMyn
		public Assignment getNacCMynAssignment_81() { return cNacCMynAssignment_81; }

		//nNacCMyn
		public RuleCall getNacCMynNNacCMynParserRuleCall_81_0() { return cNacCMynNNacCMynParserRuleCall_81_0; }

		//NacCMzn=nNacCMzn
		public Assignment getNacCMznAssignment_82() { return cNacCMznAssignment_82; }

		//nNacCMzn
		public RuleCall getNacCMznNNacCMznParserRuleCall_82_0() { return cNacCMznNNacCMznParserRuleCall_82_0; }

		//TowerHt=nTowerHt
		public Assignment getTowerHtAssignment_83() { return cTowerHtAssignment_83; }

		//nTowerHt
		public RuleCall getTowerHtNTowerHtParserRuleCall_83_0() { return cTowerHtNTowerHtParserRuleCall_83_0; }

		//Twr2Shft=nTwr2Shft
		public Assignment getTwr2ShftAssignment_84() { return cTwr2ShftAssignment_84; }

		//nTwr2Shft
		public RuleCall getTwr2ShftNTwr2ShftParserRuleCall_84_0() { return cTwr2ShftNTwr2ShftParserRuleCall_84_0; }

		//TwrRBHt=nTwrRBHt
		public Assignment getTwrRBHtAssignment_85() { return cTwrRBHtAssignment_85; }

		//nTwrRBHt
		public RuleCall getTwrRBHtNTwrRBHtParserRuleCall_85_0() { return cTwrRBHtNTwrRBHtParserRuleCall_85_0; }

		//ShftTilt=nShftTilt
		public Assignment getShftTiltAssignment_86() { return cShftTiltAssignment_86; }

		//nShftTilt
		public RuleCall getShftTiltNShftTiltParserRuleCall_86_0() { return cShftTiltNShftTiltParserRuleCall_86_0; }

		//Delta3=nDelta3
		public Assignment getDelta3Assignment_87() { return cDelta3Assignment_87; }

		//nDelta3
		public RuleCall getDelta3NDelta3ParserRuleCall_87_0() { return cDelta3NDelta3ParserRuleCall_87_0; }

		//PreCone_1_=nPreCone_1_
		public Assignment getPreCone_1_Assignment_88() { return cPreCone_1_Assignment_88; }

		//nPreCone_1_
		public RuleCall getPreCone_1_NPreCone_1_ParserRuleCall_88_0() { return cPreCone_1_NPreCone_1_ParserRuleCall_88_0; }

		//PreCone_2_=nPreCone_2_
		public Assignment getPreCone_2_Assignment_89() { return cPreCone_2_Assignment_89; }

		//nPreCone_2_
		public RuleCall getPreCone_2_NPreCone_2_ParserRuleCall_89_0() { return cPreCone_2_NPreCone_2_ParserRuleCall_89_0; }

		//PreCone_3_=nPreCone_3_
		public Assignment getPreCone_3_Assignment_90() { return cPreCone_3_Assignment_90; }

		//nPreCone_3_
		public RuleCall getPreCone_3_NPreCone_3_ParserRuleCall_90_0() { return cPreCone_3_NPreCone_3_ParserRuleCall_90_0; }

		//AzimB1Up=nAzimB1Up
		public Assignment getAzimB1UpAssignment_91() { return cAzimB1UpAssignment_91; }

		//nAzimB1Up
		public RuleCall getAzimB1UpNAzimB1UpParserRuleCall_91_0() { return cAzimB1UpNAzimB1UpParserRuleCall_91_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_92() { return cSectionsAssignment_92; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_92_0() { return cSectionsSectionParserRuleCall_92_0; }

		//YawBrMass=nYawBrMass
		public Assignment getYawBrMassAssignment_93() { return cYawBrMassAssignment_93; }

		//nYawBrMass
		public RuleCall getYawBrMassNYawBrMassParserRuleCall_93_0() { return cYawBrMassNYawBrMassParserRuleCall_93_0; }

		//NacMass=nNacMass
		public Assignment getNacMassAssignment_94() { return cNacMassAssignment_94; }

		//nNacMass
		public RuleCall getNacMassNNacMassParserRuleCall_94_0() { return cNacMassNNacMassParserRuleCall_94_0; }

		//HubMass=nHubMass
		public Assignment getHubMassAssignment_95() { return cHubMassAssignment_95; }

		//nHubMass
		public RuleCall getHubMassNHubMassParserRuleCall_95_0() { return cHubMassNHubMassParserRuleCall_95_0; }

		//TipMass_1_=nTipMass_1_
		public Assignment getTipMass_1_Assignment_96() { return cTipMass_1_Assignment_96; }

		//nTipMass_1_
		public RuleCall getTipMass_1_NTipMass_1_ParserRuleCall_96_0() { return cTipMass_1_NTipMass_1_ParserRuleCall_96_0; }

		//TipMass_2_=nTipMass_2_
		public Assignment getTipMass_2_Assignment_97() { return cTipMass_2_Assignment_97; }

		//nTipMass_2_
		public RuleCall getTipMass_2_NTipMass_2_ParserRuleCall_97_0() { return cTipMass_2_NTipMass_2_ParserRuleCall_97_0; }

		//TipMass_3_=nTipMass_3_
		public Assignment getTipMass_3_Assignment_98() { return cTipMass_3_Assignment_98; }

		//nTipMass_3_
		public RuleCall getTipMass_3_NTipMass_3_ParserRuleCall_98_0() { return cTipMass_3_NTipMass_3_ParserRuleCall_98_0; }

		//NacYIner=nNacYIner
		public Assignment getNacYInerAssignment_99() { return cNacYInerAssignment_99; }

		//nNacYIner
		public RuleCall getNacYInerNNacYInerParserRuleCall_99_0() { return cNacYInerNNacYInerParserRuleCall_99_0; }

		//GenIner=nGenIner
		public Assignment getGenInerAssignment_100() { return cGenInerAssignment_100; }

		//nGenIner
		public RuleCall getGenInerNGenInerParserRuleCall_100_0() { return cGenInerNGenInerParserRuleCall_100_0; }

		//HubIner=nHubIner
		public Assignment getHubInerAssignment_101() { return cHubInerAssignment_101; }

		//nHubIner
		public RuleCall getHubInerNHubInerParserRuleCall_101_0() { return cHubInerNHubInerParserRuleCall_101_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_102() { return cSectionsAssignment_102; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_102_0() { return cSectionsSectionParserRuleCall_102_0; }

		//GBoxEff= // Gearbox efficiency (%)								
		//
		//nGBoxEff
		public Assignment getGBoxEffAssignment_103() { return cGBoxEffAssignment_103; }

		//// Gearbox efficiency (%)								
		//
		//nGBoxEff
		public RuleCall getGBoxEffNGBoxEffParserRuleCall_103_0() { return cGBoxEffNGBoxEffParserRuleCall_103_0; }

		//GenEff= // Generator efficiency [ignored by the Thevenin and user-defined generator models] (%)								
		//
		//nGenEff
		public Assignment getGenEffAssignment_104() { return cGenEffAssignment_104; }

		//// Generator efficiency [ignored by the Thevenin and user-defined generator models] (%)								
		//
		//nGenEff
		public RuleCall getGenEffNGenEffParserRuleCall_104_0() { return cGenEffNGenEffParserRuleCall_104_0; }

		//GBRatio= // Gearbox ratio (-)								
		//
		//nGBRatio
		public Assignment getGBRatioAssignment_105() { return cGBRatioAssignment_105; }

		//// Gearbox ratio (-)								
		//
		//nGBRatio
		public RuleCall getGBRatioNGBRatioParserRuleCall_105_0() { return cGBRatioNGBRatioParserRuleCall_105_0; }

		//GBRevers= // Gearbox reversal {T: if rotor and generator rotate in opposite directions} (flag)
		//
		//bGBRevers
		public Assignment getGBReversAssignment_106() { return cGBReversAssignment_106; }

		//// Gearbox reversal {T: if rotor and generator rotate in opposite directions} (flag)
		//
		//bGBRevers
		public RuleCall getGBReversBGBReversParserRuleCall_106_0() { return cGBReversBGBReversParserRuleCall_106_0; }

		//HSSBrTqF= // Fully deployed HSS-brake torque (N-m)
		//
		//nHSSBrTqF
		public Assignment getHSSBrTqFAssignment_107() { return cHSSBrTqFAssignment_107; }

		//// Fully deployed HSS-brake torque (N-m)
		//
		//nHSSBrTqF
		public RuleCall getHSSBrTqFNHSSBrTqFParserRuleCall_107_0() { return cHSSBrTqFNHSSBrTqFParserRuleCall_107_0; }

		//HSSBrDT= // Time for HSS-brake to reach full deployment once initiated (sec) [used only when HSSBrMode=1]
		//
		//nHSSBrDT
		public Assignment getHSSBrDTAssignment_108() { return cHSSBrDTAssignment_108; }

		//// Time for HSS-brake to reach full deployment once initiated (sec) [used only when HSSBrMode=1]
		//
		//nHSSBrDT
		public RuleCall getHSSBrDTNHSSBrDTParserRuleCall_108_0() { return cHSSBrDTNHSSBrDTParserRuleCall_108_0; }

		//DynBrkFi= // File containing a mech-gen-torque vs HSS-speed curve for a dynamic brake [CURRENTLY IGNORED] (quoted string)
		//
		//fDynBrkFi
		public Assignment getDynBrkFiAssignment_109() { return cDynBrkFiAssignment_109; }

		//// File containing a mech-gen-torque vs HSS-speed curve for a dynamic brake [CURRENTLY IGNORED] (quoted string)
		//
		//fDynBrkFi
		public RuleCall getDynBrkFiFDynBrkFiParserRuleCall_109_0() { return cDynBrkFiFDynBrkFiParserRuleCall_109_0; }

		//DTTorSpr= // Drivetrain torsional spring (N-m/rad)
		//
		//nDTTorSpr
		public Assignment getDTTorSprAssignment_110() { return cDTTorSprAssignment_110; }

		//// Drivetrain torsional spring (N-m/rad)
		//
		//nDTTorSpr
		public RuleCall getDTTorSprNDTTorSprParserRuleCall_110_0() { return cDTTorSprNDTTorSprParserRuleCall_110_0; }

		//DTTorDmp= // Drivetrain torsional damper (N-m/s)
		//
		//nDTTorDmp
		public Assignment getDTTorDmpAssignment_111() { return cDTTorDmpAssignment_111; }

		//// Drivetrain torsional damper (N-m/s)
		//
		//nDTTorDmp
		public RuleCall getDTTorDmpNDTTorDmpParserRuleCall_111_0() { return cDTTorDmpNDTTorDmpParserRuleCall_111_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_112() { return cSectionsAssignment_112; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_112_0() { return cSectionsSectionParserRuleCall_112_0; }

		//SIG_SlPc= // Rated generator slip percentage (%) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_SlPc
		public Assignment getSIG_SlPcAssignment_113() { return cSIG_SlPcAssignment_113; }

		//// Rated generator slip percentage (%) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_SlPc
		public RuleCall getSIG_SlPcNSIG_SlPcParserRuleCall_113_0() { return cSIG_SlPcNSIG_SlPcParserRuleCall_113_0; }

		//SIG_SySp= // Synchronous (zero-torque) generator speed (rpm) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_SySp
		public Assignment getSIG_SySpAssignment_114() { return cSIG_SySpAssignment_114; }

		//// Synchronous (zero-torque) generator speed (rpm) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_SySp
		public RuleCall getSIG_SySpNSIG_SySpParserRuleCall_114_0() { return cSIG_SySpNSIG_SySpParserRuleCall_114_0; }

		//SIG_RtTq= // Rated torque (N-m) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_RtTq
		public Assignment getSIG_RtTqAssignment_115() { return cSIG_RtTqAssignment_115; }

		//// Rated torque (N-m) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_RtTq
		public RuleCall getSIG_RtTqNSIG_RtTqParserRuleCall_115_0() { return cSIG_RtTqNSIG_RtTqParserRuleCall_115_0; }

		//SIG_PORt= // Pull-out ratio (Tpullout/Trated) (-) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_PORt
		public Assignment getSIG_PORtAssignment_116() { return cSIG_PORtAssignment_116; }

		//// Pull-out ratio (Tpullout/Trated) (-) [used only when VSContrl=0 and GenModel=1]
		//
		//nSIG_PORt
		public RuleCall getSIG_PORtNSIG_PORtParserRuleCall_116_0() { return cSIG_PORtNSIG_PORtParserRuleCall_116_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_117() { return cSectionsAssignment_117; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_117_0() { return cSectionsSectionParserRuleCall_117_0; }

		//TEC_Freq= // Line frequency [50 or 60] (Hz) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Freq
		public Assignment getTEC_FreqAssignment_118() { return cTEC_FreqAssignment_118; }

		//// Line frequency [50 or 60] (Hz) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Freq
		public RuleCall getTEC_FreqNTEC_FreqParserRuleCall_118_0() { return cTEC_FreqNTEC_FreqParserRuleCall_118_0; }

		//TEC_Npol= // Number of poles [even integer > 0] (-) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Npol
		public Assignment getTEC_NpolAssignment_119() { return cTEC_NpolAssignment_119; }

		//// Number of poles [even integer > 0] (-) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Npol
		public RuleCall getTEC_NpolNTEC_NpolParserRuleCall_119_0() { return cTEC_NpolNTEC_NpolParserRuleCall_119_0; }

		//TEC_Sres= // Stator resistance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Sres
		public Assignment getTEC_SresAssignment_120() { return cTEC_SresAssignment_120; }

		//// Stator resistance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Sres
		public RuleCall getTEC_SresNTEC_SresParserRuleCall_120_0() { return cTEC_SresNTEC_SresParserRuleCall_120_0; }

		//TEC_Rres= // Rotor resistance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Rres
		public Assignment getTEC_RresAssignment_121() { return cTEC_RresAssignment_121; }

		//// Rotor resistance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_Rres
		public RuleCall getTEC_RresNTEC_RresParserRuleCall_121_0() { return cTEC_RresNTEC_RresParserRuleCall_121_0; }

		//TEC_VLL= // Line-to-line RMS voltage (volts) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_VLL
		public Assignment getTEC_VLLAssignment_122() { return cTEC_VLLAssignment_122; }

		//// Line-to-line RMS voltage (volts) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_VLL
		public RuleCall getTEC_VLLNTEC_VLLParserRuleCall_122_0() { return cTEC_VLLNTEC_VLLParserRuleCall_122_0; }

		//TEC_SLR= // Stator leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_SLR
		public Assignment getTEC_SLRAssignment_123() { return cTEC_SLRAssignment_123; }

		//// Stator leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_SLR
		public RuleCall getTEC_SLRNTEC_SLRParserRuleCall_123_0() { return cTEC_SLRNTEC_SLRParserRuleCall_123_0; }

		//TEC_RLR= // Rotor leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_RLR
		public Assignment getTEC_RLRAssignment_124() { return cTEC_RLRAssignment_124; }

		//// Rotor leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
		//
		//nTEC_RLR
		public RuleCall getTEC_RLRNTEC_RLRParserRuleCall_124_0() { return cTEC_RLRNTEC_RLRParserRuleCall_124_0; }

		//TEC_MR= // Magnetizing reactance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_MR
		public Assignment getTEC_MRAssignment_125() { return cTEC_MRAssignment_125; }

		//// Magnetizing reactance (ohms) [used only when VSContrl=0 and GenModel=2]
		//
		//nTEC_MR
		public RuleCall getTEC_MRNTEC_MRParserRuleCall_125_0() { return cTEC_MRNTEC_MRParserRuleCall_125_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_126() { return cSectionsAssignment_126; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_126_0() { return cSectionsSectionParserRuleCall_126_0; }

		//PtfmModel= // Platform model {0: none, 1: onshore, 2: fixed bottom offshore, 3: floating offshore}	(switch)
		//
		//iPtfmModel
		public Assignment getPtfmModelAssignment_127() { return cPtfmModelAssignment_127; }

		//// Platform model {0: none, 1: onshore, 2: fixed bottom offshore, 3: floating offshore}	(switch)
		//
		//iPtfmModel
		public RuleCall getPtfmModelIPtfmModelParserRuleCall_127_0() { return cPtfmModelIPtfmModelParserRuleCall_127_0; }

		//PtfmFile= // Name of file containing platform properties [unused when PtfmModel=0]
		//
		//fPtfmFile
		public Assignment getPtfmFileAssignment_128() { return cPtfmFileAssignment_128; }

		//// Name of file containing platform properties [unused when PtfmModel=0]
		//
		//fPtfmFile
		public RuleCall getPtfmFileFPtfmFileParserRuleCall_128_0() { return cPtfmFileFPtfmFileParserRuleCall_128_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_129() { return cSectionsAssignment_129; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_129_0() { return cSectionsSectionParserRuleCall_129_0; }

		//TwrNodes= // Number of tower nodes used for analysis (-)
		//
		//iTwrNodes
		public Assignment getTwrNodesAssignment_130() { return cTwrNodesAssignment_130; }

		//// Number of tower nodes used for analysis (-)
		//
		//iTwrNodes
		public RuleCall getTwrNodesITwrNodesParserRuleCall_130_0() { return cTwrNodesITwrNodesParserRuleCall_130_0; }

		//TwrFile= // Name of file containing tower properties	(quoted string)
		//
		//fTwrFile
		public Assignment getTwrFileAssignment_131() { return cTwrFileAssignment_131; }

		//// Name of file containing tower properties	(quoted string)
		//
		//fTwrFile
		public RuleCall getTwrFileFTwrFileParserRuleCall_131_0() { return cTwrFileFTwrFileParserRuleCall_131_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_132() { return cSectionsAssignment_132; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_132_0() { return cSectionsSectionParserRuleCall_132_0; }

		//YawSpr= // Nacelle-yaw spring constant (N-m/rad)								
		//
		//nYawSpr
		public Assignment getYawSprAssignment_133() { return cYawSprAssignment_133; }

		//// Nacelle-yaw spring constant (N-m/rad)								
		//
		//nYawSpr
		public RuleCall getYawSprNYawSprParserRuleCall_133_0() { return cYawSprNYawSprParserRuleCall_133_0; }

		//YawDamp= // Nacelle-yaw damping constant (N-m/rad/s)								
		//
		//nYawDamp
		public Assignment getYawDampAssignment_134() { return cYawDampAssignment_134; }

		//// Nacelle-yaw damping constant (N-m/rad/s)								
		//
		//nYawDamp
		public RuleCall getYawDampNYawDampParserRuleCall_134_0() { return cYawDampNYawDampParserRuleCall_134_0; }

		//YawNeut= // Neutral yaw position--yaw spring force is zero at this yaw (degrees)
		//
		//nYawNeut
		public Assignment getYawNeutAssignment_135() { return cYawNeutAssignment_135; }

		//// Neutral yaw position--yaw spring force is zero at this yaw (degrees)
		//
		//nYawNeut
		public RuleCall getYawNeutNYawNeutParserRuleCall_135_0() { return cYawNeutNYawNeutParserRuleCall_135_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_136() { return cSectionsAssignment_136; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_136_0() { return cSectionsSectionParserRuleCall_136_0; }

		//Furling= // Read in additional model properties for Furling turbine (flag)								
		//
		//bFurling
		public Assignment getFurlingAssignment_137() { return cFurlingAssignment_137; }

		//// Read in additional model properties for Furling turbine (flag)								
		//
		//bFurling
		public RuleCall getFurlingBFurlingParserRuleCall_137_0() { return cFurlingBFurlingParserRuleCall_137_0; }

		//FurlFile= // Name of file containing furling properties (quoted string) [unused when Furling=False]
		//
		//fFurlFile
		public Assignment getFurlFileAssignment_138() { return cFurlFileAssignment_138; }

		//// Name of file containing furling properties (quoted string) [unused when Furling=False]
		//
		//fFurlFile
		public RuleCall getFurlFileFFurlFileParserRuleCall_138_0() { return cFurlFileFFurlFileParserRuleCall_138_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_139() { return cSectionsAssignment_139; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_139_0() { return cSectionsSectionParserRuleCall_139_0; }

		//TeetMod= // Rotor-teeter spring/damper model {0: none, 1: standard, 2: user-def routine UserTeet} [unused for 3 blades]								(switch)
		//
		//iTeetMod
		public Assignment getTeetModAssignment_140() { return cTeetModAssignment_140; }

		//// Rotor-teeter spring/damper model {0: none, 1: standard, 2: user-def routine UserTeet} [unused for 3 blades]								(switch)
		//
		//iTeetMod
		public RuleCall getTeetModITeetModParserRuleCall_140_0() { return cTeetModITeetModParserRuleCall_140_0; }

		//TeetDmpP= // Rotor-teeter damper position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetDmpP
		public Assignment getTeetDmpPAssignment_141() { return cTeetDmpPAssignment_141; }

		//// Rotor-teeter damper position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetDmpP
		public RuleCall getTeetDmpPNTeetDmpPParserRuleCall_141_0() { return cTeetDmpPNTeetDmpPParserRuleCall_141_0; }

		//TeetDmp= // Rotor-teeter damping constant (N-m/rad/s) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetDmp
		public Assignment getTeetDmpAssignment_142() { return cTeetDmpAssignment_142; }

		//// Rotor-teeter damping constant (N-m/rad/s) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetDmp
		public RuleCall getTeetDmpNTeetDmpParserRuleCall_142_0() { return cTeetDmpNTeetDmpParserRuleCall_142_0; }

		//TeetCDmp= // Rotor-teeter rate-independent Coulomb-damping moment (N-m) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetCDmp
		public Assignment getTeetCDmpAssignment_143() { return cTeetCDmpAssignment_143; }

		//// Rotor-teeter rate-independent Coulomb-damping moment (N-m) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetCDmp
		public RuleCall getTeetCDmpNTeetCDmpParserRuleCall_143_0() { return cTeetCDmpNTeetCDmpParserRuleCall_143_0; }

		//TeetSStP= // Rotor-teeter soft-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetSStP
		public Assignment getTeetSStPAssignment_144() { return cTeetSStPAssignment_144; }

		//// Rotor-teeter soft-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetSStP
		public RuleCall getTeetSStPNTeetSStPParserRuleCall_144_0() { return cTeetSStPNTeetSStPParserRuleCall_144_0; }

		//TeetHStP= // Rotor-teeter hard-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetHStP
		public Assignment getTeetHStPAssignment_145() { return cTeetHStPAssignment_145; }

		//// Rotor-teeter hard-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetHStP
		public RuleCall getTeetHStPNTeetHStPParserRuleCall_145_0() { return cTeetHStPNTeetHStPParserRuleCall_145_0; }

		//TeetSSSp= // Rotor-teeter soft-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetSSSp
		public Assignment getTeetSSSpAssignment_146() { return cTeetSSSpAssignment_146; }

		//// Rotor-teeter soft-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]								
		//
		//nTeetSSSp
		public RuleCall getTeetSSSpNTeetSSSpParserRuleCall_146_0() { return cTeetSSSpNTeetSSSpParserRuleCall_146_0; }

		//TeetHSSp= // Rotor-teeter hard-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]
		//
		//nTeetHSSp
		public Assignment getTeetHSSpAssignment_147() { return cTeetHSSpAssignment_147; }

		//// Rotor-teeter hard-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]
		//
		//nTeetHSSp
		public RuleCall getTeetHSSpNTeetHSSpParserRuleCall_147_0() { return cTeetHSSpNTeetHSSpParserRuleCall_147_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_148() { return cSectionsAssignment_148; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_148_0() { return cSectionsSectionParserRuleCall_148_0; }

		//TBDrConN= // Tip-brake drag constant during normal operation, Cd*Area	(m^2)
		//
		//nTBDrConN
		public Assignment getTBDrConNAssignment_149() { return cTBDrConNAssignment_149; }

		//// Tip-brake drag constant during normal operation, Cd*Area	(m^2)
		//
		//nTBDrConN
		public RuleCall getTBDrConNNTBDrConNParserRuleCall_149_0() { return cTBDrConNNTBDrConNParserRuleCall_149_0; }

		//TBDrConD= // Tip-brake drag constant during fully-deployed operation, Cd*Area (m^2)
		//
		//nTBDrConD
		public Assignment getTBDrConDAssignment_150() { return cTBDrConDAssignment_150; }

		//// Tip-brake drag constant during fully-deployed operation, Cd*Area (m^2)
		//
		//nTBDrConD
		public RuleCall getTBDrConDNTBDrConDParserRuleCall_150_0() { return cTBDrConDNTBDrConDParserRuleCall_150_0; }

		//TpBrDT= // Time for Tip-BRAKE to reach full deployment once released (sec)
		//
		//nTpBrDT
		public Assignment getTpBrDTAssignment_151() { return cTpBrDTAssignment_151; }

		//// Time for Tip-BRAKE to reach full deployment once released (sec)
		//
		//nTpBrDT
		public RuleCall getTpBrDTNTpBrDTParserRuleCall_151_0() { return cTpBrDTNTpBrDTParserRuleCall_151_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_152() { return cSectionsAssignment_152; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_152_0() { return cSectionsSectionParserRuleCall_152_0; }

		//BldFile_1_= // Name of file containing properties for blade 1 (quoted string)
		//
		//fBldFile_1_
		public Assignment getBldFile_1_Assignment_153() { return cBldFile_1_Assignment_153; }

		//// Name of file containing properties for blade 1 (quoted string)
		//
		//fBldFile_1_
		public RuleCall getBldFile_1_FBldFile_1_ParserRuleCall_153_0() { return cBldFile_1_FBldFile_1_ParserRuleCall_153_0; }

		//BldFile_2_= // Name of file containing properties for blade 2 (quoted string)
		//
		//fBldFile_2_
		public Assignment getBldFile_2_Assignment_154() { return cBldFile_2_Assignment_154; }

		//// Name of file containing properties for blade 2 (quoted string)
		//
		//fBldFile_2_
		public RuleCall getBldFile_2_FBldFile_2_ParserRuleCall_154_0() { return cBldFile_2_FBldFile_2_ParserRuleCall_154_0; }

		//BldFile_3_= // Name of file containing properties for blade 3 [unused for 2 blades]	
		//
		//fBldFile_3_
		public Assignment getBldFile_3_Assignment_155() { return cBldFile_3_Assignment_155; }

		//// Name of file containing properties for blade 3 [unused for 2 blades]	
		//
		//fBldFile_3_
		public RuleCall getBldFile_3_FBldFile_3_ParserRuleCall_155_0() { return cBldFile_3_FBldFile_3_ParserRuleCall_155_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_156() { return cSectionsAssignment_156; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_156_0() { return cSectionsSectionParserRuleCall_156_0; }

		//ADFile= // Name of file containing AeroDyn input parameters	(quoted string)
		//
		//fADFile
		public Assignment getADFileAssignment_157() { return cADFileAssignment_157; }

		//// Name of file containing AeroDyn input parameters	(quoted string)
		//
		//fADFile
		public RuleCall getADFileFADFileParserRuleCall_157_0() { return cADFileFADFileParserRuleCall_157_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_158() { return cSectionsAssignment_158; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_158_0() { return cSectionsSectionParserRuleCall_158_0; }

		//NoiseFile= // Name of file containing aerodynamic noise input parameters [used only when CompNoise=True] (quoted string)
		//
		//fNoiseFile
		public Assignment getNoiseFileAssignment_159() { return cNoiseFileAssignment_159; }

		//// Name of file containing aerodynamic noise input parameters [used only when CompNoise=True] (quoted string)
		//
		//fNoiseFile
		public RuleCall getNoiseFileFNoiseFileParserRuleCall_159_0() { return cNoiseFileFNoiseFileParserRuleCall_159_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_160() { return cSectionsAssignment_160; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_160_0() { return cSectionsSectionParserRuleCall_160_0; }

		//ADAMSFile= // Name of file containing ADAMS-specific input parameters (quoted string) [unused when ADAMSPrep=1]
		//
		//fADAMSFile
		public Assignment getADAMSFileAssignment_161() { return cADAMSFileAssignment_161; }

		//// Name of file containing ADAMS-specific input parameters (quoted string) [unused when ADAMSPrep=1]
		//
		//fADAMSFile
		public RuleCall getADAMSFileFADAMSFileParserRuleCall_161_0() { return cADAMSFileFADAMSFileParserRuleCall_161_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_162() { return cSectionsAssignment_162; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_162_0() { return cSectionsSectionParserRuleCall_162_0; }

		//LinFile= // Name of file containing FAST linearazation parameters (quoted string) [unused when AnalMode=1]
		//
		//fLinFile
		public Assignment getLinFileAssignment_163() { return cLinFileAssignment_163; }

		//// Name of file containing FAST linearazation parameters (quoted string) [unused when AnalMode=1]
		//
		//fLinFile
		public RuleCall getLinFileFLinFileParserRuleCall_163_0() { return cLinFileFLinFileParserRuleCall_163_0; }

		//sections+=Section
		public Assignment getSectionsAssignment_164() { return cSectionsAssignment_164; }

		//Section
		public RuleCall getSectionsSectionParserRuleCall_164_0() { return cSectionsSectionParserRuleCall_164_0; }

		//SumPrint= // Print summary data to "<RootName>.fsm" (flag)
		//
		//bSumPrint
		public Assignment getSumPrintAssignment_165() { return cSumPrintAssignment_165; }

		//// Print summary data to "<RootName>.fsm" (flag)
		//
		//bSumPrint
		public RuleCall getSumPrintBSumPrintParserRuleCall_165_0() { return cSumPrintBSumPrintParserRuleCall_165_0; }

		//OutFileFmt=bOutFileFmt?
		public Assignment getOutFileFmtAssignment_166() { return cOutFileFmtAssignment_166; }

		//bOutFileFmt
		public RuleCall getOutFileFmtBOutFileFmtParserRuleCall_166_0() { return cOutFileFmtBOutFileFmtParserRuleCall_166_0; }

		//TabDelim= // Generate A tab-delimited tabular Output file. (flag)
		//
		//bTabDelim
		public Assignment getTabDelimAssignment_167() { return cTabDelimAssignment_167; }

		//// Generate A tab-delimited tabular Output file. (flag)
		//
		//bTabDelim
		public RuleCall getTabDelimBTabDelimParserRuleCall_167_0() { return cTabDelimBTabDelimParserRuleCall_167_0; }

		//OutFmt= // Format used for tabular output except time.  Resulting field should be 10 characters. [not checked for validity!]								(quoted string)
		//
		//sOutFmt
		public Assignment getOutFmtAssignment_168() { return cOutFmtAssignment_168; }

		//// Format used for tabular output except time.  Resulting field should be 10 characters. [not checked for validity!]								(quoted string)
		//
		//sOutFmt
		public RuleCall getOutFmtSOutFmtParserRuleCall_168_0() { return cOutFmtSOutFmtParserRuleCall_168_0; }

		//TStart= // Time to begin tabular Output (s)
		//
		//nTStart
		public Assignment getTStartAssignment_169() { return cTStartAssignment_169; }

		//// Time to begin tabular Output (s)
		//
		//nTStart
		public RuleCall getTStartNTStartParserRuleCall_169_0() { return cTStartNTStartParserRuleCall_169_0; }

		//DecFact= // Decimation factor for tabular output {1: output every time step} (-)								
		//
		//iDecFact
		public Assignment getDecFactAssignment_170() { return cDecFactAssignment_170; }

		//// Decimation factor for tabular output {1: output every time step} (-)								
		//
		//iDecFact
		public RuleCall getDecFactIDecFactParserRuleCall_170_0() { return cDecFactIDecFactParserRuleCall_170_0; }

		//SttsTime= // Amount of time between screen status messages (sec)								
		//
		//nSttsTime
		public Assignment getSttsTimeAssignment_171() { return cSttsTimeAssignment_171; }

		//// Amount of time between screen status messages (sec)								
		//
		//nSttsTime
		public RuleCall getSttsTimeNSttsTimeParserRuleCall_171_0() { return cSttsTimeNSttsTimeParserRuleCall_171_0; }

		//NcIMUxn= // Downwind distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUxn
		public Assignment getNcIMUxnAssignment_172() { return cNcIMUxnAssignment_172; }

		//// Downwind distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUxn
		public RuleCall getNcIMUxnNNcIMUxnParserRuleCall_172_0() { return cNcIMUxnNNcIMUxnParserRuleCall_172_0; }

		//NcIMUyn= // Lateral  distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUyn
		public Assignment getNcIMUynAssignment_173() { return cNcIMUynAssignment_173; }

		//// Lateral  distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUyn
		public RuleCall getNcIMUynNNcIMUynParserRuleCall_173_0() { return cNcIMUynNNcIMUynParserRuleCall_173_0; }

		//NcIMUzn= // Vertical distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUzn
		public Assignment getNcIMUznAssignment_174() { return cNcIMUznAssignment_174; }

		//// Vertical distance from the tower-top to the nacelle IMU (meters)								
		//
		//nNcIMUzn
		public RuleCall getNcIMUznNNcIMUznParserRuleCall_174_0() { return cNcIMUznNNcIMUznParserRuleCall_174_0; }

		//ShftGagL= // Distance from rotor apex [3 blades] or teeter pin [2 blades] to shaft strain gages [positive for upwind rotors] (meters)								
		//
		//nShftGagL
		public Assignment getShftGagLAssignment_175() { return cShftGagLAssignment_175; }

		//// Distance from rotor apex [3 blades] or teeter pin [2 blades] to shaft strain gages [positive for upwind rotors] (meters)								
		//
		//nShftGagL
		public RuleCall getShftGagLNShftGagLParserRuleCall_175_0() { return cShftGagLNShftGagLParserRuleCall_175_0; }

		//NTwGages= // Number of tower nodes that have strain gages for output [0 to 5]								(-)
		//
		//iNTwGages
		public Assignment getNTwGagesAssignment_176() { return cNTwGagesAssignment_176; }

		//// Number of tower nodes that have strain gages for output [0 to 5]								(-)
		//
		//iNTwGages
		public RuleCall getNTwGagesINTwGagesParserRuleCall_176_0() { return cNTwGagesINTwGagesParserRuleCall_176_0; }

		//TwrGagNd= // List of tower nodes that have strain gages [1 to TwrNodes] [unused if NTwGages=0]								(-)
		//
		//aTwrGagNd
		public Assignment getTwrGagNdAssignment_177() { return cTwrGagNdAssignment_177; }

		//// List of tower nodes that have strain gages [1 to TwrNodes] [unused if NTwGages=0]								(-)
		//
		//aTwrGagNd
		public RuleCall getTwrGagNdATwrGagNdParserRuleCall_177_0() { return cTwrGagNdATwrGagNdParserRuleCall_177_0; }

		//NBlGages= // Number of blade nodes that have strain gages for output [0 to 5]								(-)
		//
		//iNBlGages
		public Assignment getNBlGagesAssignment_178() { return cNBlGagesAssignment_178; }

		//// Number of blade nodes that have strain gages for output [0 to 5]								(-)
		//
		//iNBlGages
		public RuleCall getNBlGagesINBlGagesParserRuleCall_178_0() { return cNBlGagesINBlGagesParserRuleCall_178_0; }

		//BldGagNd= // List of blade nodes that have strain gages [1 to BldNodes] [unused if NBlGages=0]								(-)
		//
		//aBldGagNd
		public Assignment getBldGagNdAssignment_179() { return cBldGagNdAssignment_179; }

		//// List of blade nodes that have strain gages [1 to BldNodes] [unused if NBlGages=0]								(-)
		//
		//aBldGagNd
		public RuleCall getBldGagNdABldGagNdParserRuleCall_179_0() { return cBldGagNdABldGagNdParserRuleCall_179_0; }

		//OutList= // The next line(s) contains a list of output parameters.  See OutList.txt for a listing of available output channels.
		//
		//vOutList
		public Assignment getOutListAssignment_180() { return cOutListAssignment_180; }

		//// The next line(s) contains a list of output parameters.  See OutList.txt for a listing of available output channels.
		//
		//vOutList
		public RuleCall getOutListVOutListParserRuleCall_180_0() { return cOutListVOutListParserRuleCall_180_0; }

		//(WS | NEWLINE | SL_COMMENT)*
		public Alternatives getAlternatives_181() { return cAlternatives_181; }

		//WS
		public RuleCall getWSTerminalRuleCall_181_0() { return cWSTerminalRuleCall_181_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_181_1() { return cNEWLINETerminalRuleCall_181_1; }

		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_181_2() { return cSL_COMMENTTerminalRuleCall_181_2; }

		//END
		public RuleCall getENDTerminalRuleCall_182() { return cENDTerminalRuleCall_182; }

		//(WS | NEWLINE | SL_COMMENT)*
		public Alternatives getAlternatives_183() { return cAlternatives_183; }

		//WS
		public RuleCall getWSTerminalRuleCall_183_0() { return cWSTerminalRuleCall_183_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_183_1() { return cNEWLINETerminalRuleCall_183_1; }

		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_183_2() { return cSL_COMMENTTerminalRuleCall_183_2; }
	}

	public class TNUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tNUMBER");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNUMBERTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//tNUMBER returns ecore::EFloat:
		//
		//	INT | NUMBER;
		public ParserRule getRule() { return rule; }

		//INT | NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//NUMBER
		public RuleCall getNUMBERTerminalRuleCall_1() { return cNUMBERTerminalRuleCall_1; }
	}

	public class TBOOLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tBOOL");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTRUEKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cTrueKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cTrueKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFALSEKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFalseKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cFalseKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//tBOOL returns ecore::EBoolean:
		//
		//	"TRUE" | "True" | "true" | "FALSE" | "False" | "false";
		public ParserRule getRule() { return rule; }

		//"TRUE" | "True" | "true" | "FALSE" | "False" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"TRUE"
		public Keyword getTRUEKeyword_0() { return cTRUEKeyword_0; }

		//"True"
		public Keyword getTrueKeyword_1() { return cTrueKeyword_1; }

		//"true"
		public Keyword getTrueKeyword_2() { return cTrueKeyword_2; }

		//"FALSE"
		public Keyword getFALSEKeyword_3() { return cFALSEKeyword_3; }

		//"False"
		public Keyword getFalseKeyword_4() { return cFalseKeyword_4; }

		//"false"
		public Keyword getFalseKeyword_5() { return cFalseKeyword_5; }
	}

	public class TARRAY_INTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tARRAY_INT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		////(('T'|'t')('R'|'r')('U'|'u')('E'|'e')) | //(('F'|'f')('A'|'a')('L'|'l')('S'|'s')('E'|'e'));
		//
		////from online help: The QualifiedName is a little special. It does not contain any assignments. 
		//
		//// Therefore, it serves as a data type rule, which returns a String. So the feature name of a 
		//
		//// Package is still of type String. 
		//
		////FILE: ('.'?'.'?)('/'? STRING)*;
		//
		////FILE returns ecore::EString:
		//
		////	'"' ((('.'|'..')? '/')? (NAME '/')* NAME'.'NAME)? '"';
		//
		//tARRAY_INT returns ecore::EString:
		//
		//	INT ("," INT)*;
		public ParserRule getRule() { return rule; }

		//INT ("," INT)*
		public Group getGroup() { return cGroup; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//("," INT)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }
	}

	public class TARRAY_STRElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tARRAY_STR");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cNEWLINETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//// OK tARRAY_STR returns ecore::EString hidden(SL_COMMENT): (WS? '"' WS? OUT_CH WS? (',' WS? OUT_CH WS?)* '"' WS? NEWLINE )+;
		//
		//tARRAY_STR returns ecore::EString hidden(SL_COMMENT):
		//
		//	(WS? STRING WS? NEWLINE)*;
		public ParserRule getRule() { return rule; }

		//(WS? STRING WS? NEWLINE)*
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }

		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_3() { return cNEWLINETerminalRuleCall_3; }
	}

	public class HeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Header");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRowsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRowsSL_COMMENTTerminalRuleCall_0_0 = (RuleCall)cRowsAssignment_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Header hidden():
		//
		//	(rows+=SL_COMMENT NEWLINE)+;
		public ParserRule getRule() { return rule; }

		//(rows+=SL_COMMENT NEWLINE)+
		public Group getGroup() { return cGroup; }

		//rows+=SL_COMMENT
		public Assignment getRowsAssignment_0() { return cRowsAssignment_0; }

		//SL_COMMENT
		public RuleCall getRowsSL_COMMENTTerminalRuleCall_0_0() { return cRowsSL_COMMENTTerminalRuleCall_0_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_1() { return cNEWLINETerminalRuleCall_1; }
	}

	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSL_COMMENTTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Section hidden():
		//
		//	name=SL_COMMENT NEWLINE;
		public ParserRule getRule() { return rule; }

		//name=SL_COMMENT NEWLINE
		public Group getGroup() { return cGroup; }

		//name=SL_COMMENT
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//SL_COMMENT
		public RuleCall getNameSL_COMMENTTerminalRuleCall_0_0() { return cNameSL_COMMENTTerminalRuleCall_0_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_1() { return cNEWLINETerminalRuleCall_1; }
	}

	public class BEchoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bEcho");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameEchoKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bEcho hidden():
		//
		//	WS? value=tBOOL WS name="Echo" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="Echo" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="Echo"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"Echo"
		public Keyword getNameEchoKeyword_3_0() { return cNameEchoKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IADAMSPrepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iADAMSPrep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameADAMSPrepKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iADAMSPrep hidden():
		//
		//	WS? value=INT WS name="ADAMSPrep" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="ADAMSPrep" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="ADAMSPrep"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"ADAMSPrep"
		public Keyword getNameADAMSPrepKeyword_3_0() { return cNameADAMSPrepKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IAnalModeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iAnalMode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameAnalModeKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iAnalMode hidden():
		//
		//	WS? value=INT WS name="AnalMode" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="AnalMode" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="AnalMode"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"AnalMode"
		public Keyword getNameAnalModeKeyword_3_0() { return cNameAnalModeKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class INumBlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iNumBl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNumBlKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iNumBl hidden():
		//
		//	WS? value=INT WS name="NumBl" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="NumBl" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NumBl"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NumBl"
		public Keyword getNameNumBlKeyword_3_0() { return cNameNumBlKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTMaxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTMax");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTMaxKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTMax hidden():
		//
		//	WS? value=tNUMBER WS name="TMax" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TMax" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TMax"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TMax"
		public Keyword getNameTMaxKeyword_3_0() { return cNameTMaxKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NDTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nDT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameDTKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nDT hidden():
		//
		//	WS? value=tNUMBER WS name="DT" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="DT" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="DT"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"DT"
		public Keyword getNameDTKeyword_3_0() { return cNameDTKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IYCModeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iYCMode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameYCModeKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iYCMode hidden():
		//
		//	WS? value=INT WS name="YCMode" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="YCMode" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="YCMode"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"YCMode"
		public Keyword getNameYCModeKeyword_3_0() { return cNameYCModeKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTYCOnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTYCOn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTYCOnKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTYCOn hidden():
		//
		//	WS? value=tNUMBER WS name="TYCOn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TYCOn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TYCOn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TYCOn"
		public Keyword getNameTYCOnKeyword_3_0() { return cNameTYCOnKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IPCModeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iPCMode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNamePCModeKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iPCMode hidden():
		//
		//	WS? value=INT WS name="PCMode" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="PCMode" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="PCMode"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"PCMode"
		public Keyword getNamePCModeKeyword_3_0() { return cNamePCModeKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTPCOnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTPCOn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTPCOnKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTPCOn hidden():
		//
		//	WS? value=tNUMBER WS name="TPCOn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TPCOn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TPCOn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TPCOn"
		public Keyword getNameTPCOnKeyword_3_0() { return cNameTPCOnKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IVSContrlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iVSContrl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameVSContrlKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iVSContrl hidden():
		//
		//	WS? value=INT WS name="VSContrl" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="VSContrl" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="VSContrl"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"VSContrl"
		public Keyword getNameVSContrlKeyword_3_0() { return cNameVSContrlKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NVS_RtGnSpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nVS_RtGnSp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameVS_RtGnSpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nVS_RtGnSp hidden():
		//
		//	WS? value=tNUMBER WS name="VS_RtGnSp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="VS_RtGnSp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="VS_RtGnSp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"VS_RtGnSp"
		public Keyword getNameVS_RtGnSpKeyword_3_0() { return cNameVS_RtGnSpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NVS_RtTqElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nVS_RtTq");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameVS_RtTqKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nVS_RtTq hidden():
		//
		//	WS? value=tNUMBER WS name="VS_RtTq" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="VS_RtTq" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="VS_RtTq"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"VS_RtTq"
		public Keyword getNameVS_RtTqKeyword_3_0() { return cNameVS_RtTqKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NVS_Rgn2KElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nVS_Rgn2K");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameVS_Rgn2KKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nVS_Rgn2K hidden():
		//
		//	WS? value=tNUMBER WS name="VS_Rgn2K" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="VS_Rgn2K" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="VS_Rgn2K"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"VS_Rgn2K"
		public Keyword getNameVS_Rgn2KKeyword_3_0() { return cNameVS_Rgn2KKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NVS_SlPcElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nVS_SlPc");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameVS_SlPcKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nVS_SlPc hidden():
		//
		//	WS? value=tNUMBER WS name="VS_SlPc" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="VS_SlPc" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="VS_SlPc"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"VS_SlPc"
		public Keyword getNameVS_SlPcKeyword_3_0() { return cNameVS_SlPcKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IGenModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iGenModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGenModelKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iGenModel hidden():
		//
		//	WS? value=INT WS name="GenModel" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="GenModel" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GenModel"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GenModel"
		public Keyword getNameGenModelKeyword_3_0() { return cNameGenModelKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BGenTiStrElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bGenTiStr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGenTiStrKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bGenTiStr hidden():
		//
		//	WS? value=tBOOL WS name="GenTiStr" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="GenTiStr" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GenTiStr"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GenTiStr"
		public Keyword getNameGenTiStrKeyword_3_0() { return cNameGenTiStrKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BGenTiStpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bGenTiStp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGenTiStpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bGenTiStp hidden():
		//
		//	WS? value=tBOOL WS name="GenTiStp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="GenTiStp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GenTiStp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GenTiStp"
		public Keyword getNameGenTiStpKeyword_3_0() { return cNameGenTiStpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NSpdGenOnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nSpdGenOn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSpdGenOnKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nSpdGenOn hidden():
		//
		//	WS? value=tNUMBER WS name="SpdGenOn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="SpdGenOn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="SpdGenOn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"SpdGenOn"
		public Keyword getNameSpdGenOnKeyword_3_0() { return cNameSpdGenOnKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTimGenOnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTimGenOn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTimGenOnKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTimGenOn hidden():
		//
		//	WS? value=tNUMBER WS name="TimGenOn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TimGenOn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TimGenOn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TimGenOn"
		public Keyword getNameTimGenOnKeyword_3_0() { return cNameTimGenOnKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTimGenOfElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTimGenOf");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTimGenOfKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTimGenOf hidden():
		//
		//	WS? value=tNUMBER WS name="TimGenOf" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TimGenOf" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TimGenOf"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TimGenOf"
		public Keyword getNameTimGenOfKeyword_3_0() { return cNameTimGenOfKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IHSSBrModeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iHSSBrMode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHSSBrModeKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iHSSBrMode hidden():
		//
		//	WS? value=INT WS name="HSSBrMode" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="HSSBrMode" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="HSSBrMode"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"HSSBrMode"
		public Keyword getNameHSSBrModeKeyword_3_0() { return cNameHSSBrModeKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTHSSBrDpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTHSSBrDp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTHSSBrDpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTHSSBrDp hidden():
		//
		//	WS? value=tNUMBER WS name="THSSBrDp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="THSSBrDp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="THSSBrDp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"THSSBrDp"
		public Keyword getNameTHSSBrDpKeyword_3_0() { return cNameTHSSBrDpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTiDynBrkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTiDynBrk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTiDynBrkKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTiDynBrk hidden():
		//
		//	WS? value=tNUMBER WS name="TiDynBrk" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TiDynBrk" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TiDynBrk"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TiDynBrk"
		public Keyword getNameTiDynBrkKeyword_3_0() { return cNameTiDynBrkKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTTpBrDp_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTTpBrDp_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTTpBrDp1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTTpBrDp_1_ hidden():
		//
		//	WS? value=tNUMBER WS name="TTpBrDp(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TTpBrDp(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TTpBrDp(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TTpBrDp(1)"
		public Keyword getNameTTpBrDp1Keyword_3_0() { return cNameTTpBrDp1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTTpBrDp_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTTpBrDp_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTTpBrDp2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTTpBrDp_2_ hidden():
		//
		//	WS? value=tNUMBER WS name="TTpBrDp(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TTpBrDp(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TTpBrDp(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TTpBrDp(2)"
		public Keyword getNameTTpBrDp2Keyword_3_0() { return cNameTTpBrDp2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTTpBrDp_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTTpBrDp_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTTpBrDp3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTTpBrDp_3_ hidden():
		//
		//	WS? value=tNUMBER WS name="TTpBrDp(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TTpBrDp(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TTpBrDp(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TTpBrDp(3)"
		public Keyword getNameTTpBrDp3Keyword_3_0() { return cNameTTpBrDp3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTBDepISp_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTBDepISp_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTBDepISp1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTBDepISp_1_ hidden():
		//
		//	WS? value=tNUMBER WS name="TBDepISp(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TBDepISp(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TBDepISp(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TBDepISp(1)"
		public Keyword getNameTBDepISp1Keyword_3_0() { return cNameTBDepISp1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTBDepISp_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTBDepISp_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTBDepISp2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTBDepISp_2_ hidden():
		//
		//	WS? value=tNUMBER WS name="TBDepISp(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TBDepISp(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TBDepISp(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TBDepISp(2)"
		public Keyword getNameTBDepISp2Keyword_3_0() { return cNameTBDepISp2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTBDepISp_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTBDepISp_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTBDepISp3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTBDepISp_3_ hidden():
		//
		//	WS? value=tNUMBER WS name="TBDepISp(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TBDepISp(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TBDepISp(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TBDepISp(3)"
		public Keyword getNameTBDepISp3Keyword_3_0() { return cNameTBDepISp3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTYawManSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTYawManS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTYawManSKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTYawManS hidden():
		//
		//	WS? value=tNUMBER WS name="TYawManS" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TYawManS" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TYawManS"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TYawManS"
		public Keyword getNameTYawManSKeyword_3_0() { return cNameTYawManSKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTYawManEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTYawManE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTYawManEKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTYawManE hidden():
		//
		//	WS? value=tNUMBER WS name="TYawManE" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TYawManE" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TYawManE"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TYawManE"
		public Keyword getNameTYawManEKeyword_3_0() { return cNameTYawManEKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNacYawFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNacYawF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNacYawFKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNacYawF hidden():
		//
		//	WS? value=tNUMBER WS name="NacYawF" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NacYawF" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NacYawF"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NacYawF"
		public Keyword getNameNacYawFKeyword_3_0() { return cNameNacYawFKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTPitManS_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTPitManS_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTPitManS1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTPitManS_1_ hidden():
		//
		//	WS? value=tNUMBER WS name="TPitManS(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TPitManS(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TPitManS(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TPitManS(1)"
		public Keyword getNameTPitManS1Keyword_3_0() { return cNameTPitManS1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTPitManS_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTPitManS_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTPitManS2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTPitManS_2_ hidden():
		//
		//	WS? value=tNUMBER WS name="TPitManS(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TPitManS(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TPitManS(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TPitManS(2)"
		public Keyword getNameTPitManS2Keyword_3_0() { return cNameTPitManS2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTPitManS_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTPitManS_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTPitManS3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTPitManS_3_ hidden():
		//
		//	WS? value=tNUMBER WS name="TPitManS(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TPitManS(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TPitManS(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TPitManS(3)"
		public Keyword getNameTPitManS3Keyword_3_0() { return cNameTPitManS3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTPitManE_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTPitManE_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTPitManE1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTPitManE_1_ hidden():
		//
		//	WS? value=tNUMBER WS name="TPitManE(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TPitManE(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TPitManE(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TPitManE(1)"
		public Keyword getNameTPitManE1Keyword_3_0() { return cNameTPitManE1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTPitManE_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTPitManE_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTPitManE2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTPitManE_2_ hidden():
		//
		//	WS? value=tNUMBER WS name="TPitManE(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TPitManE(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TPitManE(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TPitManE(2)"
		public Keyword getNameTPitManE2Keyword_3_0() { return cNameTPitManE2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTPitManE_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTPitManE_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTPitManE3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTPitManE_3_ hidden():
		//
		//	WS? value=tNUMBER WS name="TPitManE(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TPitManE(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TPitManE(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TPitManE(3)"
		public Keyword getNameTPitManE3Keyword_3_0() { return cNameTPitManE3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NBlPitch_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nBlPitch_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBlPitch1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nBlPitch_1_ hidden():
		//
		//	WS? value=tNUMBER WS name="BlPitch(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="BlPitch(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BlPitch(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BlPitch(1)"
		public Keyword getNameBlPitch1Keyword_3_0() { return cNameBlPitch1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NBlPitch_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nBlPitch_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBlPitch2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nBlPitch_2_ hidden():
		//
		//	WS? value=tNUMBER WS name="BlPitch(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="BlPitch(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BlPitch(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BlPitch(2)"
		public Keyword getNameBlPitch2Keyword_3_0() { return cNameBlPitch2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NBlPitch_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nBlPitch_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBlPitch3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nBlPitch_3_ hidden():
		//
		//	WS? value=tNUMBER WS name="BlPitch(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="BlPitch(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BlPitch(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BlPitch(3)"
		public Keyword getNameBlPitch3Keyword_3_0() { return cNameBlPitch3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NBlPitchF_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nBlPitchF_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBlPitchF1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nBlPitchF_1_ hidden():
		//
		//	WS? value=tNUMBER WS name="BlPitchF(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="BlPitchF(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BlPitchF(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BlPitchF(1)"
		public Keyword getNameBlPitchF1Keyword_3_0() { return cNameBlPitchF1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NBlPitchF_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nBlPitchF_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBlPitchF2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nBlPitchF_2_ hidden():
		//
		//	WS? value=tNUMBER WS name="BlPitchF(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="BlPitchF(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BlPitchF(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BlPitchF(2)"
		public Keyword getNameBlPitchF2Keyword_3_0() { return cNameBlPitchF2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NBlPitchF_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nBlPitchF_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBlPitchF3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nBlPitchF_3_ hidden():
		//
		//	WS? value=tNUMBER WS name="BlPitchF(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="BlPitchF(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BlPitchF(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BlPitchF(3)"
		public Keyword getNameBlPitchF3Keyword_3_0() { return cNameBlPitchF3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NGravityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nGravity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGravityKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nGravity hidden():
		//
		//	WS? value=tNUMBER WS name="Gravity" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="Gravity" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="Gravity"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"Gravity"
		public Keyword getNameGravityKeyword_3_0() { return cNameGravityKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BFlapDOF1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bFlapDOF1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameFlapDOF1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bFlapDOF1 hidden():
		//
		//	WS? value=tBOOL WS name="FlapDOF1" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="FlapDOF1" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="FlapDOF1"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"FlapDOF1"
		public Keyword getNameFlapDOF1Keyword_3_0() { return cNameFlapDOF1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BFlapDOF2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bFlapDOF2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameFlapDOF2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bFlapDOF2 hidden():
		//
		//	WS? value=tBOOL WS name="FlapDOF2" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="FlapDOF2" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="FlapDOF2"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"FlapDOF2"
		public Keyword getNameFlapDOF2Keyword_3_0() { return cNameFlapDOF2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BEdgeDOFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bEdgeDOF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameEdgeDOFKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bEdgeDOF hidden():
		//
		//	WS? value=tBOOL WS name="EdgeDOF" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="EdgeDOF" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="EdgeDOF"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"EdgeDOF"
		public Keyword getNameEdgeDOFKeyword_3_0() { return cNameEdgeDOFKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BTeetDOFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bTeetDOF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetDOFKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bTeetDOF hidden():
		//
		//	WS? value=tBOOL WS name="TeetDOF" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="TeetDOF" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetDOF"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetDOF"
		public Keyword getNameTeetDOFKeyword_3_0() { return cNameTeetDOFKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BDrTrDOFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bDrTrDOF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameDrTrDOFKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bDrTrDOF hidden():
		//
		//	WS? value=tBOOL WS name="DrTrDOF" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="DrTrDOF" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="DrTrDOF"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"DrTrDOF"
		public Keyword getNameDrTrDOFKeyword_3_0() { return cNameDrTrDOFKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BGenDOFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bGenDOF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGenDOFKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bGenDOF hidden():
		//
		//	WS? value=tBOOL WS name="GenDOF" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="GenDOF" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GenDOF"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GenDOF"
		public Keyword getNameGenDOFKeyword_3_0() { return cNameGenDOFKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BYawDOFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bYawDOF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameYawDOFKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bYawDOF hidden():
		//
		//	WS? value=tBOOL WS name="YawDOF" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="YawDOF" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="YawDOF"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"YawDOF"
		public Keyword getNameYawDOFKeyword_3_0() { return cNameYawDOFKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BTwFADOF1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bTwFADOF1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwFADOF1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bTwFADOF1 hidden():
		//
		//	WS? value=tBOOL WS name="TwFADOF1" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="TwFADOF1" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TwFADOF1"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TwFADOF1"
		public Keyword getNameTwFADOF1Keyword_3_0() { return cNameTwFADOF1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BTwFADOF2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bTwFADOF2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwFADOF2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bTwFADOF2 hidden():
		//
		//	WS? value=tBOOL WS name="TwFADOF2" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="TwFADOF2" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TwFADOF2"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TwFADOF2"
		public Keyword getNameTwFADOF2Keyword_3_0() { return cNameTwFADOF2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BTwSSDOF1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bTwSSDOF1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwSSDOF1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bTwSSDOF1 hidden():
		//
		//	WS? value=tBOOL WS name="TwSSDOF1" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="TwSSDOF1" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TwSSDOF1"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TwSSDOF1"
		public Keyword getNameTwSSDOF1Keyword_3_0() { return cNameTwSSDOF1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BTwSSDOF2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bTwSSDOF2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwSSDOF2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bTwSSDOF2 hidden():
		//
		//	WS? value=tBOOL WS name="TwSSDOF2" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="TwSSDOF2" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TwSSDOF2"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TwSSDOF2"
		public Keyword getNameTwSSDOF2Keyword_3_0() { return cNameTwSSDOF2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BCompAeroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bCompAero");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameCompAeroKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bCompAero hidden():
		//
		//	WS? value=tBOOL WS name="CompAero" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="CompAero" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="CompAero"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"CompAero"
		public Keyword getNameCompAeroKeyword_3_0() { return cNameCompAeroKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BCompNoiseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bCompNoise");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameCompNoiseKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bCompNoise hidden():
		//
		//	WS? value=tBOOL WS name="CompNoise" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="CompNoise" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="CompNoise"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"CompNoise"
		public Keyword getNameCompNoiseKeyword_3_0() { return cNameCompNoiseKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NOoPDeflElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nOoPDefl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameOoPDeflKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nOoPDefl hidden():
		//
		//	WS? value=tNUMBER WS name="OoPDefl" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="OoPDefl" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="OoPDefl"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"OoPDefl"
		public Keyword getNameOoPDeflKeyword_3_0() { return cNameOoPDeflKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NIPDeflElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nIPDefl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameIPDeflKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nIPDefl hidden():
		//
		//	WS? value=tNUMBER WS name="IPDefl" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="IPDefl" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="IPDefl"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"IPDefl"
		public Keyword getNameIPDeflKeyword_3_0() { return cNameIPDeflKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTeetDeflElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTeetDefl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetDeflKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTeetDefl hidden():
		//
		//	WS? value=tNUMBER WS name="TeetDefl" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TeetDefl" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetDefl"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetDefl"
		public Keyword getNameTeetDeflKeyword_3_0() { return cNameTeetDeflKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NAzimuthElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nAzimuth");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameAzimuthKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nAzimuth hidden():
		//
		//	WS? value=tNUMBER WS name="Azimuth" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="Azimuth" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="Azimuth"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"Azimuth"
		public Keyword getNameAzimuthKeyword_3_0() { return cNameAzimuthKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NRotSpeedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nRotSpeed");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameRotSpeedKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nRotSpeed hidden():
		//
		//	WS? value=tNUMBER WS name="RotSpeed" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="RotSpeed" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="RotSpeed"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"RotSpeed"
		public Keyword getNameRotSpeedKeyword_3_0() { return cNameRotSpeedKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNacYawElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNacYaw");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNacYawKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNacYaw hidden():
		//
		//	WS? value=tNUMBER WS name="NacYaw" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NacYaw" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NacYaw"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NacYaw"
		public Keyword getNameNacYawKeyword_3_0() { return cNameNacYawKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTTDspFAElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTTDspFA");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTTDspFAKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTTDspFA hidden():
		//
		//	WS? value=tNUMBER WS name="TTDspFA" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TTDspFA" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TTDspFA"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TTDspFA"
		public Keyword getNameTTDspFAKeyword_3_0() { return cNameTTDspFAKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTTDspSSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTTDspSS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTTDspSSKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTTDspSS hidden():
		//
		//	WS? value=tNUMBER WS name="TTDspSS" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TTDspSS" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TTDspSS"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TTDspSS"
		public Keyword getNameTTDspSSKeyword_3_0() { return cNameTTDspSSKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTipRadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTipRad");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTipRadKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTipRad hidden():
		//
		//	WS? value=tNUMBER WS name="TipRad" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TipRad" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TipRad"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TipRad"
		public Keyword getNameTipRadKeyword_3_0() { return cNameTipRadKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NHubRadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nHubRad");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHubRadKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nHubRad hidden():
		//
		//	WS? value=tNUMBER WS name="HubRad" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="HubRad" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="HubRad"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"HubRad"
		public Keyword getNameHubRadKeyword_3_0() { return cNameHubRadKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NPSpnElNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nPSpnElN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNamePSpnElNKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nPSpnElN hidden():
		//
		//	WS? value=INT WS name="PSpnElN" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="PSpnElN" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="PSpnElN"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"PSpnElN"
		public Keyword getNamePSpnElNKeyword_3_0() { return cNamePSpnElNKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NUndSlingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nUndSling");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameUndSlingKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nUndSling hidden():
		//
		//	WS? value=tNUMBER WS name="UndSling" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="UndSling" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="UndSling"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"UndSling"
		public Keyword getNameUndSlingKeyword_3_0() { return cNameUndSlingKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NHubCMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nHubCM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHubCMKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nHubCM hidden():
		//
		//	WS? value=tNUMBER WS name="HubCM" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="HubCM" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="HubCM"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"HubCM"
		public Keyword getNameHubCMKeyword_3_0() { return cNameHubCMKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NOverHangElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nOverHang");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameOverHangKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nOverHang hidden():
		//
		//	WS? value=tNUMBER WS name="OverHang" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="OverHang" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="OverHang"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"OverHang"
		public Keyword getNameOverHangKeyword_3_0() { return cNameOverHangKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNacCMxnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNacCMxn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNacCMxnKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNacCMxn hidden():
		//
		//	WS? value=tNUMBER WS name="NacCMxn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NacCMxn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NacCMxn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NacCMxn"
		public Keyword getNameNacCMxnKeyword_3_0() { return cNameNacCMxnKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNacCMynElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNacCMyn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNacCMynKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNacCMyn hidden():
		//
		//	WS? value=tNUMBER WS name="NacCMyn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NacCMyn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NacCMyn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NacCMyn"
		public Keyword getNameNacCMynKeyword_3_0() { return cNameNacCMynKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNacCMznElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNacCMzn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNacCMznKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNacCMzn hidden():
		//
		//	WS? value=tNUMBER WS name="NacCMzn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NacCMzn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NacCMzn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NacCMzn"
		public Keyword getNameNacCMznKeyword_3_0() { return cNameNacCMznKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTowerHtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTowerHt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTowerHtKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTowerHt hidden():
		//
		//	WS? value=tNUMBER WS name="TowerHt" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TowerHt" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TowerHt"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TowerHt"
		public Keyword getNameTowerHtKeyword_3_0() { return cNameTowerHtKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTwr2ShftElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTwr2Shft");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwr2ShftKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTwr2Shft hidden():
		//
		//	WS? value=tNUMBER WS name="Twr2Shft" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="Twr2Shft" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="Twr2Shft"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"Twr2Shft"
		public Keyword getNameTwr2ShftKeyword_3_0() { return cNameTwr2ShftKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTwrRBHtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTwrRBHt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwrRBHtKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTwrRBHt hidden():
		//
		//	WS? value=tNUMBER WS name="TwrRBHt" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TwrRBHt" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TwrRBHt"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TwrRBHt"
		public Keyword getNameTwrRBHtKeyword_3_0() { return cNameTwrRBHtKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NShftTiltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nShftTilt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameShftTiltKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nShftTilt hidden():
		//
		//	WS? value=tNUMBER WS name="ShftTilt" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="ShftTilt" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="ShftTilt"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"ShftTilt"
		public Keyword getNameShftTiltKeyword_3_0() { return cNameShftTiltKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NDelta3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nDelta3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameDelta3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nDelta3 hidden():
		//
		//	WS? value=tNUMBER WS name="Delta3" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="Delta3" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="Delta3"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"Delta3"
		public Keyword getNameDelta3Keyword_3_0() { return cNameDelta3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NPreCone_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nPreCone_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNamePreCone1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nPreCone_1_ hidden():
		//
		//	WS? value=tNUMBER WS name="PreCone(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="PreCone(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="PreCone(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"PreCone(1)"
		public Keyword getNamePreCone1Keyword_3_0() { return cNamePreCone1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NPreCone_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nPreCone_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNamePreCone2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nPreCone_2_ hidden():
		//
		//	WS? value=tNUMBER WS name="PreCone(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="PreCone(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="PreCone(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"PreCone(2)"
		public Keyword getNamePreCone2Keyword_3_0() { return cNamePreCone2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NPreCone_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nPreCone_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNamePreCone3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nPreCone_3_ hidden():
		//
		//	WS? value=tNUMBER WS name="PreCone(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="PreCone(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="PreCone(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"PreCone(3)"
		public Keyword getNamePreCone3Keyword_3_0() { return cNamePreCone3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NAzimB1UpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nAzimB1Up");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameAzimB1UpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nAzimB1Up hidden():
		//
		//	WS? value=tNUMBER WS name="AzimB1Up" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="AzimB1Up" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="AzimB1Up"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"AzimB1Up"
		public Keyword getNameAzimB1UpKeyword_3_0() { return cNameAzimB1UpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NYawBrMassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nYawBrMass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameYawBrMassKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nYawBrMass hidden():
		//
		//	WS? value=tNUMBER WS name="YawBrMass" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="YawBrMass" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="YawBrMass"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"YawBrMass"
		public Keyword getNameYawBrMassKeyword_3_0() { return cNameYawBrMassKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNacMassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNacMass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNacMassKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNacMass hidden():
		//
		//	WS? value=tNUMBER WS name="NacMass" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NacMass" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NacMass"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NacMass"
		public Keyword getNameNacMassKeyword_3_0() { return cNameNacMassKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NHubMassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nHubMass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHubMassKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nHubMass hidden():
		//
		//	WS? value=tNUMBER WS name="HubMass" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="HubMass" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="HubMass"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"HubMass"
		public Keyword getNameHubMassKeyword_3_0() { return cNameHubMassKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTipMass_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTipMass_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTipMass1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTipMass_1_ hidden():
		//
		//	WS? value=tNUMBER WS name="TipMass(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TipMass(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TipMass(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TipMass(1)"
		public Keyword getNameTipMass1Keyword_3_0() { return cNameTipMass1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTipMass_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTipMass_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTipMass2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTipMass_2_ hidden():
		//
		//	WS? value=tNUMBER WS name="TipMass(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TipMass(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TipMass(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TipMass(2)"
		public Keyword getNameTipMass2Keyword_3_0() { return cNameTipMass2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTipMass_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTipMass_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTipMass3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTipMass_3_ hidden():
		//
		//	WS? value=tNUMBER WS name="TipMass(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TipMass(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TipMass(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TipMass(3)"
		public Keyword getNameTipMass3Keyword_3_0() { return cNameTipMass3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNacYInerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNacYIner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNacYInerKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNacYIner hidden():
		//
		//	WS? value=tNUMBER WS name="NacYIner" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NacYIner" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NacYIner"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NacYIner"
		public Keyword getNameNacYInerKeyword_3_0() { return cNameNacYInerKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NGenInerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nGenIner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGenInerKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nGenIner hidden():
		//
		//	WS? value=tNUMBER WS name="GenIner" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="GenIner" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GenIner"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GenIner"
		public Keyword getNameGenInerKeyword_3_0() { return cNameGenInerKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NHubInerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nHubIner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHubInerKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nHubIner hidden():
		//
		//	WS? value=tNUMBER WS name="HubIner" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="HubIner" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="HubIner"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"HubIner"
		public Keyword getNameHubInerKeyword_3_0() { return cNameHubInerKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NGBoxEffElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nGBoxEff");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGBoxEffKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nGBoxEff hidden():
		//
		//	WS? value=tNUMBER WS name="GBoxEff" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="GBoxEff" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GBoxEff"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GBoxEff"
		public Keyword getNameGBoxEffKeyword_3_0() { return cNameGBoxEffKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NGenEffElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nGenEff");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGenEffKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nGenEff hidden():
		//
		//	WS? value=tNUMBER WS name="GenEff" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="GenEff" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GenEff"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GenEff"
		public Keyword getNameGenEffKeyword_3_0() { return cNameGenEffKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NGBRatioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nGBRatio");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGBRatioKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nGBRatio hidden():
		//
		//	WS? value=tNUMBER WS name="GBRatio" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="GBRatio" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GBRatio"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GBRatio"
		public Keyword getNameGBRatioKeyword_3_0() { return cNameGBRatioKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BGBReversElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bGBRevers");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameGBReversKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bGBRevers hidden():
		//
		//	WS? value=tBOOL WS name="GBRevers" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="GBRevers" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="GBRevers"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"GBRevers"
		public Keyword getNameGBReversKeyword_3_0() { return cNameGBReversKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NHSSBrTqFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nHSSBrTqF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHSSBrTqFKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nHSSBrTqF hidden():
		//
		//	WS? value=tNUMBER WS name="HSSBrTqF" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="HSSBrTqF" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="HSSBrTqF"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"HSSBrTqF"
		public Keyword getNameHSSBrTqFKeyword_3_0() { return cNameHSSBrTqFKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NHSSBrDTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nHSSBrDT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHSSBrDTKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nHSSBrDT hidden():
		//
		//	WS? value=tNUMBER WS name="HSSBrDT" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="HSSBrDT" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="HSSBrDT"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"HSSBrDT"
		public Keyword getNameHSSBrDTKeyword_3_0() { return cNameHSSBrDTKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FDynBrkFiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fDynBrkFi");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameDynBrkFiKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fDynBrkFi hidden():
		//
		//	WS? value=STRING WS name="DynBrkFi" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="DynBrkFi" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="DynBrkFi"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"DynBrkFi"
		public Keyword getNameDynBrkFiKeyword_3_0() { return cNameDynBrkFiKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NDTTorSprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nDTTorSpr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameDTTorSprKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nDTTorSpr hidden():
		//
		//	WS? value=tNUMBER WS name="DTTorSpr" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="DTTorSpr" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="DTTorSpr"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"DTTorSpr"
		public Keyword getNameDTTorSprKeyword_3_0() { return cNameDTTorSprKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NDTTorDmpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nDTTorDmp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameDTTorDmpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nDTTorDmp hidden():
		//
		//	WS? value=tNUMBER WS name="DTTorDmp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="DTTorDmp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="DTTorDmp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"DTTorDmp"
		public Keyword getNameDTTorDmpKeyword_3_0() { return cNameDTTorDmpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NSIG_SlPcElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nSIG_SlPc");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSIG_SlPcKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nSIG_SlPc hidden():
		//
		//	WS? value=tNUMBER WS name="SIG_SlPc" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="SIG_SlPc" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="SIG_SlPc"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"SIG_SlPc"
		public Keyword getNameSIG_SlPcKeyword_3_0() { return cNameSIG_SlPcKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NSIG_SySpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nSIG_SySp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSIG_SySpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nSIG_SySp hidden():
		//
		//	WS? value=tNUMBER WS name="SIG_SySp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="SIG_SySp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="SIG_SySp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"SIG_SySp"
		public Keyword getNameSIG_SySpKeyword_3_0() { return cNameSIG_SySpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NSIG_RtTqElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nSIG_RtTq");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSIG_RtTqKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nSIG_RtTq hidden():
		//
		//	WS? value=tNUMBER WS name="SIG_RtTq" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="SIG_RtTq" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="SIG_RtTq"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"SIG_RtTq"
		public Keyword getNameSIG_RtTqKeyword_3_0() { return cNameSIG_RtTqKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NSIG_PORtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nSIG_PORt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSIG_PORtKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nSIG_PORt hidden():
		//
		//	WS? value=tNUMBER WS name="SIG_PORt" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="SIG_PORt" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="SIG_PORt"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"SIG_PORt"
		public Keyword getNameSIG_PORtKeyword_3_0() { return cNameSIG_PORtKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTEC_FreqElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTEC_Freq");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTEC_FreqKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTEC_Freq hidden():
		//
		//	WS? value=tNUMBER WS name="TEC_Freq" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TEC_Freq" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TEC_Freq"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TEC_Freq"
		public Keyword getNameTEC_FreqKeyword_3_0() { return cNameTEC_FreqKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTEC_NpolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTEC_Npol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTEC_NPolKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTEC_Npol hidden():
		//
		//	WS? value=tNUMBER WS name="TEC_NPol" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TEC_NPol" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TEC_NPol"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TEC_NPol"
		public Keyword getNameTEC_NPolKeyword_3_0() { return cNameTEC_NPolKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTEC_SresElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTEC_Sres");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTEC_SResKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTEC_Sres hidden():
		//
		//	WS? value=tNUMBER WS name="TEC_SRes" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TEC_SRes" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TEC_SRes"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TEC_SRes"
		public Keyword getNameTEC_SResKeyword_3_0() { return cNameTEC_SResKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTEC_RresElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTEC_Rres");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTEC_RResKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTEC_Rres hidden():
		//
		//	WS? value=tNUMBER WS name="TEC_RRes" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TEC_RRes" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TEC_RRes"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TEC_RRes"
		public Keyword getNameTEC_RResKeyword_3_0() { return cNameTEC_RResKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTEC_VLLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTEC_VLL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTEC_VLLKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTEC_VLL hidden():
		//
		//	WS? value=tNUMBER WS name="TEC_VLL" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TEC_VLL" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TEC_VLL"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TEC_VLL"
		public Keyword getNameTEC_VLLKeyword_3_0() { return cNameTEC_VLLKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTEC_SLRElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTEC_SLR");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTEC_SLRKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTEC_SLR hidden():
		//
		//	WS? value=tNUMBER WS name="TEC_SLR" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TEC_SLR" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TEC_SLR"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TEC_SLR"
		public Keyword getNameTEC_SLRKeyword_3_0() { return cNameTEC_SLRKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTEC_RLRElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTEC_RLR");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTEC_RLRKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTEC_RLR hidden():
		//
		//	WS? value=tNUMBER WS name="TEC_RLR" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TEC_RLR" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TEC_RLR"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TEC_RLR"
		public Keyword getNameTEC_RLRKeyword_3_0() { return cNameTEC_RLRKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTEC_MRElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTEC_MR");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTEC_MRKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTEC_MR hidden():
		//
		//	WS? value=tNUMBER WS name="TEC_MR" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TEC_MR" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TEC_MR"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TEC_MR"
		public Keyword getNameTEC_MRKeyword_3_0() { return cNameTEC_MRKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IPtfmModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iPtfmModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNamePtfmModelKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iPtfmModel hidden():
		//
		//	WS? value=INT WS name="PtfmModel" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="PtfmModel" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="PtfmModel"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"PtfmModel"
		public Keyword getNamePtfmModelKeyword_3_0() { return cNamePtfmModelKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FPtfmFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fPtfmFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNamePtfmFileKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fPtfmFile hidden():
		//
		//	WS? value=STRING WS name="PtfmFile" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="PtfmFile" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="PtfmFile"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"PtfmFile"
		public Keyword getNamePtfmFileKeyword_3_0() { return cNamePtfmFileKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class ITwrNodesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iTwrNodes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwrNodesKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iTwrNodes hidden():
		//
		//	WS? value=INT WS name="TwrNodes" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="TwrNodes" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TwrNodes"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TwrNodes"
		public Keyword getNameTwrNodesKeyword_3_0() { return cNameTwrNodesKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FTwrFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fTwrFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwrFileKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fTwrFile hidden():
		//
		//	WS? value=STRING WS name="TwrFile" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="TwrFile" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TwrFile"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TwrFile"
		public Keyword getNameTwrFileKeyword_3_0() { return cNameTwrFileKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NYawSprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nYawSpr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameYawSprKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nYawSpr hidden():
		//
		//	WS? value=tNUMBER WS name="YawSpr" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="YawSpr" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="YawSpr"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"YawSpr"
		public Keyword getNameYawSprKeyword_3_0() { return cNameYawSprKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NYawDampElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nYawDamp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameYawDampKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nYawDamp hidden():
		//
		//	WS? value=tNUMBER WS name="YawDamp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="YawDamp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="YawDamp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"YawDamp"
		public Keyword getNameYawDampKeyword_3_0() { return cNameYawDampKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NYawNeutElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nYawNeut");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameYawNeutKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nYawNeut hidden():
		//
		//	WS? value=tNUMBER WS name="YawNeut" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="YawNeut" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="YawNeut"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"YawNeut"
		public Keyword getNameYawNeutKeyword_3_0() { return cNameYawNeutKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BFurlingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bFurling");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameFurlingKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bFurling hidden():
		//
		//	WS? value=tBOOL WS name="Furling" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="Furling" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="Furling"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"Furling"
		public Keyword getNameFurlingKeyword_3_0() { return cNameFurlingKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FFurlFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fFurlFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameFurlFileKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fFurlFile hidden():
		//
		//	WS? value=STRING WS name="FurlFile" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="FurlFile" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="FurlFile"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"FurlFile"
		public Keyword getNameFurlFileKeyword_3_0() { return cNameFurlFileKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class ITeetModElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iTeetMod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetModKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iTeetMod hidden():
		//
		//	WS? value=INT WS name="TeetMod" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="TeetMod" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetMod"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetMod"
		public Keyword getNameTeetModKeyword_3_0() { return cNameTeetModKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTeetDmpPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTeetDmpP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetDmpPKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTeetDmpP hidden():
		//
		//	WS? value=tNUMBER WS name="TeetDmpP" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TeetDmpP" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetDmpP"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetDmpP"
		public Keyword getNameTeetDmpPKeyword_3_0() { return cNameTeetDmpPKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTeetDmpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTeetDmp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetDmpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTeetDmp hidden():
		//
		//	WS? value=tNUMBER WS name="TeetDmp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TeetDmp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetDmp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetDmp"
		public Keyword getNameTeetDmpKeyword_3_0() { return cNameTeetDmpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTeetCDmpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTeetCDmp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetCDmpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTeetCDmp hidden():
		//
		//	WS? value=tNUMBER WS name="TeetCDmp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TeetCDmp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetCDmp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetCDmp"
		public Keyword getNameTeetCDmpKeyword_3_0() { return cNameTeetCDmpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTeetSStPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTeetSStP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetSStPKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTeetSStP hidden():
		//
		//	WS? value=tNUMBER WS name="TeetSStP" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TeetSStP" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetSStP"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetSStP"
		public Keyword getNameTeetSStPKeyword_3_0() { return cNameTeetSStPKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTeetHStPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTeetHStP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetHStPKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTeetHStP hidden():
		//
		//	WS? value=tNUMBER WS name="TeetHStP" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TeetHStP" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetHStP"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetHStP"
		public Keyword getNameTeetHStPKeyword_3_0() { return cNameTeetHStPKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTeetSSSpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTeetSSSp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetSSSpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTeetSSSp hidden():
		//
		//	WS? value=tNUMBER WS name="TeetSSSp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TeetSSSp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetSSSp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetSSSp"
		public Keyword getNameTeetSSSpKeyword_3_0() { return cNameTeetSSSpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTeetHSSpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTeetHSSp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTeetHSSpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTeetHSSp hidden():
		//
		//	WS? value=tNUMBER WS name="TeetHSSp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TeetHSSp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TeetHSSp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TeetHSSp"
		public Keyword getNameTeetHSSpKeyword_3_0() { return cNameTeetHSSpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTBDrConNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTBDrConN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTBDrConNKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTBDrConN hidden():
		//
		//	WS? value=tNUMBER WS name="TBDrConN" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TBDrConN" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TBDrConN"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TBDrConN"
		public Keyword getNameTBDrConNKeyword_3_0() { return cNameTBDrConNKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTBDrConDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTBDrConD");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTBDrConDKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTBDrConD hidden():
		//
		//	WS? value=tNUMBER WS name="TBDrConD" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TBDrConD" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TBDrConD"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TBDrConD"
		public Keyword getNameTBDrConDKeyword_3_0() { return cNameTBDrConDKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTpBrDTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTpBrDT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTpBrDTKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTpBrDT hidden():
		//
		//	WS? value=tNUMBER WS name="TpBrDT" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TpBrDT" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TpBrDT"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TpBrDT"
		public Keyword getNameTpBrDTKeyword_3_0() { return cNameTpBrDTKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FBldFile_1_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fBldFile_1_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBldFile1Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fBldFile_1_ hidden():
		//
		//	WS? value=STRING WS name="BldFile(1)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="BldFile(1)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BldFile(1)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BldFile(1)"
		public Keyword getNameBldFile1Keyword_3_0() { return cNameBldFile1Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FBldFile_2_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fBldFile_2_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBldFile2Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fBldFile_2_ hidden():
		//
		//	WS? value=STRING WS name="BldFile(2)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="BldFile(2)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BldFile(2)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BldFile(2)"
		public Keyword getNameBldFile2Keyword_3_0() { return cNameBldFile2Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FBldFile_3_Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fBldFile_3_");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBldFile3Keyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fBldFile_3_ hidden():
		//
		//	WS? value=STRING WS name="BldFile(3)" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="BldFile(3)" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BldFile(3)"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BldFile(3)"
		public Keyword getNameBldFile3Keyword_3_0() { return cNameBldFile3Keyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FADFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fADFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameADFileKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fADFile hidden():
		//
		//	WS? value=STRING WS name="ADFile" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="ADFile" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="ADFile"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"ADFile"
		public Keyword getNameADFileKeyword_3_0() { return cNameADFileKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FNoiseFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fNoiseFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNoiseFileKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fNoiseFile hidden():
		//
		//	WS? value=STRING WS name="NoiseFile" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="NoiseFile" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NoiseFile"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NoiseFile"
		public Keyword getNameNoiseFileKeyword_3_0() { return cNameNoiseFileKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FADAMSFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fADAMSFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameADAMSFileKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fADAMSFile hidden():
		//
		//	WS? value=STRING WS name="ADAMSFile" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="ADAMSFile" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="ADAMSFile"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"ADAMSFile"
		public Keyword getNameADAMSFileKeyword_3_0() { return cNameADAMSFileKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class FLinFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fLinFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameLinFileKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//fLinFile hidden():
		//
		//	WS? value=STRING WS name="LinFile" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="LinFile" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="LinFile"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"LinFile"
		public Keyword getNameLinFileKeyword_3_0() { return cNameLinFileKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BSumPrintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bSumPrint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSumPrintKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bSumPrint hidden():
		//
		//	WS? value=tBOOL WS name="SumPrint" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="SumPrint" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="SumPrint"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"SumPrint"
		public Keyword getNameSumPrintKeyword_3_0() { return cNameSumPrintKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BOutFileFmtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bOutFileFmt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameOutFileFmtKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//// from FAST 7.00.00
		//
		//bOutFileFmt hidden():
		//
		//	WS? value=tNUMBER WS name="OutFileFmt" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="OutFileFmt" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="OutFileFmt"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"OutFileFmt"
		public Keyword getNameOutFileFmtKeyword_3_0() { return cNameOutFileFmtKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BTabDelimElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bTabDelim");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTabDelimKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bTabDelim hidden():
		//
		//	WS? value=tBOOL WS name="TabDelim" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="TabDelim" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TabDelim"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TabDelim"
		public Keyword getNameTabDelimKeyword_3_0() { return cNameTabDelimKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class SOutFmtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "sOutFmt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueFORMATTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameOutFmtKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//sOutFmt hidden():
		//
		//	WS? value=FORMAT WS name="OutFmt" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=FORMAT WS name="OutFmt" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=FORMAT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//FORMAT
		public RuleCall getValueFORMATTerminalRuleCall_1_0() { return cValueFORMATTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="OutFmt"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"OutFmt"
		public Keyword getNameOutFmtKeyword_3_0() { return cNameOutFmtKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTStartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTStart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTStartKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTStart hidden():
		//
		//	WS? value=tNUMBER WS name="TStart" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="TStart" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TStart"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TStart"
		public Keyword getNameTStartKeyword_3_0() { return cNameTStartKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IDecFactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iDecFact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameDecFactKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iDecFact hidden():
		//
		//	WS? value=INT WS name="DecFact" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="DecFact" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="DecFact"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"DecFact"
		public Keyword getNameDecFactKeyword_3_0() { return cNameDecFactKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NSttsTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nSttsTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSttsTimeKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nSttsTime hidden():
		//
		//	WS? value=tNUMBER WS name="SttsTime" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="SttsTime" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="SttsTime"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"SttsTime"
		public Keyword getNameSttsTimeKeyword_3_0() { return cNameSttsTimeKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNcIMUxnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNcIMUxn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNcIMUxnKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNcIMUxn hidden():
		//
		//	WS? value=tNUMBER WS name="NcIMUxn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NcIMUxn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NcIMUxn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NcIMUxn"
		public Keyword getNameNcIMUxnKeyword_3_0() { return cNameNcIMUxnKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNcIMUynElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNcIMUyn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNcIMUynKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNcIMUyn hidden():
		//
		//	WS? value=tNUMBER WS name="NcIMUyn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NcIMUyn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NcIMUyn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NcIMUyn"
		public Keyword getNameNcIMUynKeyword_3_0() { return cNameNcIMUynKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NNcIMUznElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nNcIMUzn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNcIMUznKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nNcIMUzn hidden():
		//
		//	WS? value=tNUMBER WS name="NcIMUzn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="NcIMUzn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NcIMUzn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NcIMUzn"
		public Keyword getNameNcIMUznKeyword_3_0() { return cNameNcIMUznKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NShftGagLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nShftGagL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameShftGagLKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nShftGagL hidden():
		//
		//	WS? value=tNUMBER WS name="ShftGagL" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="ShftGagL" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="ShftGagL"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"ShftGagL"
		public Keyword getNameShftGagLKeyword_3_0() { return cNameShftGagLKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class INTwGagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iNTwGages");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNTwGagesKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iNTwGages hidden():
		//
		//	WS? value=INT WS name="NTwGages" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="NTwGages" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NTwGages"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NTwGages"
		public Keyword getNameNTwGagesKeyword_3_0() { return cNameNTwGagesKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class ATwrGagNdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "aTwrGagNd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTARRAY_INTParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTwrGagNdKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//aTwrGagNd hidden():
		//
		//	WS? value=tARRAY_INT WS name="TwrGagNd" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tARRAY_INT WS name="TwrGagNd" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tARRAY_INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tARRAY_INT
		public RuleCall getValueTARRAY_INTParserRuleCall_1_0() { return cValueTARRAY_INTParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TwrGagNd"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TwrGagNd"
		public Keyword getNameTwrGagNdKeyword_3_0() { return cNameTwrGagNdKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class INBlGagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iNBlGages");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNBlGagesKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iNBlGages hidden():
		//
		//	WS? value=INT WS name="NBlGages" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="NBlGages" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="NBlGages"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"NBlGages"
		public Keyword getNameNBlGagesKeyword_3_0() { return cNameNBlGagesKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class ABldGagNdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "aBldGagNd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTARRAY_INTParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBldGagNdKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//aBldGagNd hidden():
		//
		//	WS? value=tARRAY_INT WS name="BldGagNd" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tARRAY_INT WS name="BldGagNd" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tARRAY_INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tARRAY_INT
		public RuleCall getValueTARRAY_INTParserRuleCall_1_0() { return cValueTARRAY_INTParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="BldGagNd"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"BldGagNd"
		public Keyword getNameBldGagNdKeyword_3_0() { return cNameBldGagNdKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class VOutListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "vOutList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameOutListKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cSL_COMMENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cNEWLINETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueTARRAY_STRParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		
		//vOutList hidden():
		//
		//	WS? name="OutList" WS? SL_COMMENT? NEWLINE //('"' WS? value+=OUT_CH WS? (',' WS? value+=OUT_CH WS?)* '"' WS? SL_COMMENT? NEWLINE )+;
		//
		//	value=tARRAY_STR;
		public ParserRule getRule() { return rule; }

		//WS? name="OutList" WS? SL_COMMENT? NEWLINE //('"' WS? value+=OUT_CH WS? (',' WS? value+=OUT_CH WS?)* '"' WS? SL_COMMENT? NEWLINE )+;
		//
		//value=tARRAY_STR
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//name="OutList"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"OutList"
		public Keyword getNameOutListKeyword_1_0() { return cNameOutListKeyword_1_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_3() { return cSL_COMMENTTerminalRuleCall_3; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_4() { return cNEWLINETerminalRuleCall_4; }

		////('"' WS? value+=OUT_CH WS? (',' WS? value+=OUT_CH WS?)* '"' WS? SL_COMMENT? NEWLINE )+;
		//
		//value=tARRAY_STR
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }

		//tARRAY_STR
		public RuleCall getValueTARRAY_STRParserRuleCall_5_0() { return cValueTARRAY_STRParserRuleCall_5_0; }
	}
	
	
	private ModelFastfstElements pModelFastfst;
	private TNUMBERElements pTNUMBER;
	private TBOOLElements pTBOOL;
	private TARRAY_INTElements pTARRAY_INT;
	private TARRAY_STRElements pTARRAY_STR;
	private TerminalRule tEND;
	private TerminalRule tOUT_CH;
	private TerminalRule tINT;
	private TerminalRule tNUMBER;
	private TerminalRule tFORMAT;
	private TerminalRule tSTRING;
	private TerminalRule tNEWLINE;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tWS;
	private HeaderElements pHeader;
	private SectionElements pSection;
	private BEchoElements pBEcho;
	private IADAMSPrepElements pIADAMSPrep;
	private IAnalModeElements pIAnalMode;
	private INumBlElements pINumBl;
	private NTMaxElements pNTMax;
	private NDTElements pNDT;
	private IYCModeElements pIYCMode;
	private NTYCOnElements pNTYCOn;
	private IPCModeElements pIPCMode;
	private NTPCOnElements pNTPCOn;
	private IVSContrlElements pIVSContrl;
	private NVS_RtGnSpElements pNVS_RtGnSp;
	private NVS_RtTqElements pNVS_RtTq;
	private NVS_Rgn2KElements pNVS_Rgn2K;
	private NVS_SlPcElements pNVS_SlPc;
	private IGenModelElements pIGenModel;
	private BGenTiStrElements pBGenTiStr;
	private BGenTiStpElements pBGenTiStp;
	private NSpdGenOnElements pNSpdGenOn;
	private NTimGenOnElements pNTimGenOn;
	private NTimGenOfElements pNTimGenOf;
	private IHSSBrModeElements pIHSSBrMode;
	private NTHSSBrDpElements pNTHSSBrDp;
	private NTiDynBrkElements pNTiDynBrk;
	private NTTpBrDp_1_Elements pNTTpBrDp_1_;
	private NTTpBrDp_2_Elements pNTTpBrDp_2_;
	private NTTpBrDp_3_Elements pNTTpBrDp_3_;
	private NTBDepISp_1_Elements pNTBDepISp_1_;
	private NTBDepISp_2_Elements pNTBDepISp_2_;
	private NTBDepISp_3_Elements pNTBDepISp_3_;
	private NTYawManSElements pNTYawManS;
	private NTYawManEElements pNTYawManE;
	private NNacYawFElements pNNacYawF;
	private NTPitManS_1_Elements pNTPitManS_1_;
	private NTPitManS_2_Elements pNTPitManS_2_;
	private NTPitManS_3_Elements pNTPitManS_3_;
	private NTPitManE_1_Elements pNTPitManE_1_;
	private NTPitManE_2_Elements pNTPitManE_2_;
	private NTPitManE_3_Elements pNTPitManE_3_;
	private NBlPitch_1_Elements pNBlPitch_1_;
	private NBlPitch_2_Elements pNBlPitch_2_;
	private NBlPitch_3_Elements pNBlPitch_3_;
	private NBlPitchF_1_Elements pNBlPitchF_1_;
	private NBlPitchF_2_Elements pNBlPitchF_2_;
	private NBlPitchF_3_Elements pNBlPitchF_3_;
	private NGravityElements pNGravity;
	private BFlapDOF1Elements pBFlapDOF1;
	private BFlapDOF2Elements pBFlapDOF2;
	private BEdgeDOFElements pBEdgeDOF;
	private BTeetDOFElements pBTeetDOF;
	private BDrTrDOFElements pBDrTrDOF;
	private BGenDOFElements pBGenDOF;
	private BYawDOFElements pBYawDOF;
	private BTwFADOF1Elements pBTwFADOF1;
	private BTwFADOF2Elements pBTwFADOF2;
	private BTwSSDOF1Elements pBTwSSDOF1;
	private BTwSSDOF2Elements pBTwSSDOF2;
	private BCompAeroElements pBCompAero;
	private BCompNoiseElements pBCompNoise;
	private NOoPDeflElements pNOoPDefl;
	private NIPDeflElements pNIPDefl;
	private NTeetDeflElements pNTeetDefl;
	private NAzimuthElements pNAzimuth;
	private NRotSpeedElements pNRotSpeed;
	private NNacYawElements pNNacYaw;
	private NTTDspFAElements pNTTDspFA;
	private NTTDspSSElements pNTTDspSS;
	private NTipRadElements pNTipRad;
	private NHubRadElements pNHubRad;
	private NPSpnElNElements pNPSpnElN;
	private NUndSlingElements pNUndSling;
	private NHubCMElements pNHubCM;
	private NOverHangElements pNOverHang;
	private NNacCMxnElements pNNacCMxn;
	private NNacCMynElements pNNacCMyn;
	private NNacCMznElements pNNacCMzn;
	private NTowerHtElements pNTowerHt;
	private NTwr2ShftElements pNTwr2Shft;
	private NTwrRBHtElements pNTwrRBHt;
	private NShftTiltElements pNShftTilt;
	private NDelta3Elements pNDelta3;
	private NPreCone_1_Elements pNPreCone_1_;
	private NPreCone_2_Elements pNPreCone_2_;
	private NPreCone_3_Elements pNPreCone_3_;
	private NAzimB1UpElements pNAzimB1Up;
	private NYawBrMassElements pNYawBrMass;
	private NNacMassElements pNNacMass;
	private NHubMassElements pNHubMass;
	private NTipMass_1_Elements pNTipMass_1_;
	private NTipMass_2_Elements pNTipMass_2_;
	private NTipMass_3_Elements pNTipMass_3_;
	private NNacYInerElements pNNacYIner;
	private NGenInerElements pNGenIner;
	private NHubInerElements pNHubIner;
	private NGBoxEffElements pNGBoxEff;
	private NGenEffElements pNGenEff;
	private NGBRatioElements pNGBRatio;
	private BGBReversElements pBGBRevers;
	private NHSSBrTqFElements pNHSSBrTqF;
	private NHSSBrDTElements pNHSSBrDT;
	private FDynBrkFiElements pFDynBrkFi;
	private NDTTorSprElements pNDTTorSpr;
	private NDTTorDmpElements pNDTTorDmp;
	private NSIG_SlPcElements pNSIG_SlPc;
	private NSIG_SySpElements pNSIG_SySp;
	private NSIG_RtTqElements pNSIG_RtTq;
	private NSIG_PORtElements pNSIG_PORt;
	private NTEC_FreqElements pNTEC_Freq;
	private NTEC_NpolElements pNTEC_Npol;
	private NTEC_SresElements pNTEC_Sres;
	private NTEC_RresElements pNTEC_Rres;
	private NTEC_VLLElements pNTEC_VLL;
	private NTEC_SLRElements pNTEC_SLR;
	private NTEC_RLRElements pNTEC_RLR;
	private NTEC_MRElements pNTEC_MR;
	private IPtfmModelElements pIPtfmModel;
	private FPtfmFileElements pFPtfmFile;
	private ITwrNodesElements pITwrNodes;
	private FTwrFileElements pFTwrFile;
	private NYawSprElements pNYawSpr;
	private NYawDampElements pNYawDamp;
	private NYawNeutElements pNYawNeut;
	private BFurlingElements pBFurling;
	private FFurlFileElements pFFurlFile;
	private ITeetModElements pITeetMod;
	private NTeetDmpPElements pNTeetDmpP;
	private NTeetDmpElements pNTeetDmp;
	private NTeetCDmpElements pNTeetCDmp;
	private NTeetSStPElements pNTeetSStP;
	private NTeetHStPElements pNTeetHStP;
	private NTeetSSSpElements pNTeetSSSp;
	private NTeetHSSpElements pNTeetHSSp;
	private NTBDrConNElements pNTBDrConN;
	private NTBDrConDElements pNTBDrConD;
	private NTpBrDTElements pNTpBrDT;
	private FBldFile_1_Elements pFBldFile_1_;
	private FBldFile_2_Elements pFBldFile_2_;
	private FBldFile_3_Elements pFBldFile_3_;
	private FADFileElements pFADFile;
	private FNoiseFileElements pFNoiseFile;
	private FADAMSFileElements pFADAMSFile;
	private FLinFileElements pFLinFile;
	private BSumPrintElements pBSumPrint;
	private BOutFileFmtElements pBOutFileFmt;
	private BTabDelimElements pBTabDelim;
	private SOutFmtElements pSOutFmt;
	private NTStartElements pNTStart;
	private IDecFactElements pIDecFact;
	private NSttsTimeElements pNSttsTime;
	private NNcIMUxnElements pNNcIMUxn;
	private NNcIMUynElements pNNcIMUyn;
	private NNcIMUznElements pNNcIMUzn;
	private NShftGagLElements pNShftGagL;
	private INTwGagesElements pINTwGages;
	private ATwrGagNdElements pATwrGagNd;
	private INBlGagesElements pINBlGages;
	private ABldGagNdElements pABldGagNd;
	private VOutListElements pVOutList;
	
	private final Grammar grammar;

	@Inject
	public FastfstGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("sc.ndt.editor.fast.Fastfst".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//// about EOF
	//
	//// http://www.euclideanspace.com/software/development/eclipse/xtext/grammar/lexer/index.htm
	//
	//ModelFastfst:
	//
	//	Head=Header sections+=Section Echo=bEcho ADAMSPrep=iADAMSPrep AnalMode=iAnalMode NumBl=iNumBl TMax=nTMax DT=nDT
	//
	//	sections+=Section YCMode=iYCMode TYCOn=nTYCOn PCMode=iPCMode TPCOn=nTPCOn VSContrl=iVSContrl VS_RtGnSp=nVS_RtGnSp
	//
	//	VS_RtTq=nVS_RtTq VS_Rgn2K=nVS_Rgn2K VS_SlPc=nVS_SlPc GenModel=iGenModel GenTiStr=bGenTiStr GenTiStp=bGenTiStp
	//
	//	SpdGenOn=nSpdGenOn TimGenOn=nTimGenOn TimGenOf=nTimGenOf HSSBrMode=iHSSBrMode THSSBrDp=nTHSSBrDp TiDynBrk=nTiDynBrk
	//
	//	TTpBrDp_1_=nTTpBrDp_1_ TTpBrDp_2_=nTTpBrDp_2_ TTpBrDp_3_=nTTpBrDp_3_ TBDepISp_1_=nTBDepISp_1_
	//
	//	TBDepISp_2_=nTBDepISp_2_ TBDepISp_3_=nTBDepISp_3_ TYawManS=nTYawManS TYawManE=nTYawManE NacYawF=nNacYawF
	//
	//	TPitManS_1_=nTPitManS_1_ TPitManS_2_=nTPitManS_2_ TPitManS_3_=nTPitManS_3_ TPitManE_1_=nTPitManE_1_
	//
	//	TPitManE_2_=nTPitManE_2_ TPitManE_3_=nTPitManE_3_ BlPitch_1_=nBlPitch_1_ BlPitch_2_=nBlPitch_2_
	//
	//	BlPitch_3_=nBlPitch_3_ BlPitchF_1_=nBlPitchF_1_ BlPitchF_2_=nBlPitchF_2_ BlPitchF_3_=nBlPitchF_3_ sections+=Section
	//
	//	Gravity=nGravity sections+=Section FlapDOF1=bFlapDOF1 FlapDOF2=bFlapDOF2 EdgeDOF=bEdgeDOF TeetDOF=bTeetDOF
	//
	//	DrTrDOF=bDrTrDOF GenDOF=bGenDOF YawDOF=bYawDOF TwFADOF1=bTwFADOF1 TwFADOF2=bTwFADOF2 TwSSDOF1=bTwSSDOF1
	//
	//	TwSSDOF2=bTwSSDOF2 CompAero=bCompAero CompNoise=bCompNoise sections+=Section OoPDefl=nOoPDefl IPDefl=nIPDefl
	//
	//	TeetDefl=nTeetDefl Azimuth=nAzimuth RotSpeed=nRotSpeed NacYaw=nNacYaw TTDspFA=nTTDspFA TTDspSS=nTTDspSS
	//
	//	sections+=Section TipRad=nTipRad HubRad=nHubRad PSpnElN=nPSpnElN UndSling=nUndSling HubCM=nHubCM OverHang=nOverHang
	//
	//	NacCMxn=nNacCMxn NacCMyn=nNacCMyn NacCMzn=nNacCMzn TowerHt=nTowerHt Twr2Shft=nTwr2Shft TwrRBHt=nTwrRBHt
	//
	//	ShftTilt=nShftTilt Delta3=nDelta3 PreCone_1_=nPreCone_1_ PreCone_2_=nPreCone_2_ PreCone_3_=nPreCone_3_
	//
	//	AzimB1Up=nAzimB1Up sections+=Section YawBrMass=nYawBrMass NacMass=nNacMass HubMass=nHubMass TipMass_1_=nTipMass_1_
	//
	//	TipMass_2_=nTipMass_2_ TipMass_3_=nTipMass_3_ NacYIner=nNacYIner GenIner=nGenIner HubIner=nHubIner sections+=Section
	//
	//	GBoxEff= // Gearbox efficiency (%)								
	//
	//	nGBoxEff GenEff= // Generator efficiency [ignored by the Thevenin and user-defined generator models] (%)								
	//
	//	nGenEff GBRatio= // Gearbox ratio (-)								
	//
	//	nGBRatio GBRevers= // Gearbox reversal {T: if rotor and generator rotate in opposite directions} (flag)
	//
	//	bGBRevers HSSBrTqF= // Fully deployed HSS-brake torque (N-m)
	//
	//	nHSSBrTqF HSSBrDT= // Time for HSS-brake to reach full deployment once initiated (sec) [used only when HSSBrMode=1]
	//
	//	nHSSBrDT DynBrkFi= // File containing a mech-gen-torque vs HSS-speed curve for a dynamic brake [CURRENTLY IGNORED] (quoted string)
	//
	//	fDynBrkFi DTTorSpr= // Drivetrain torsional spring (N-m/rad)
	//
	//	nDTTorSpr DTTorDmp= // Drivetrain torsional damper (N-m/s)
	//
	//	nDTTorDmp sections+=Section SIG_SlPc= // Rated generator slip percentage (%) [used only when VSContrl=0 and GenModel=1]
	//
	//	nSIG_SlPc SIG_SySp= // Synchronous (zero-torque) generator speed (rpm) [used only when VSContrl=0 and GenModel=1]
	//
	//	nSIG_SySp SIG_RtTq= // Rated torque (N-m) [used only when VSContrl=0 and GenModel=1]
	//
	//	nSIG_RtTq SIG_PORt= // Pull-out ratio (Tpullout/Trated) (-) [used only when VSContrl=0 and GenModel=1]
	//
	//	nSIG_PORt sections+=Section TEC_Freq= // Line frequency [50 or 60] (Hz) [used only when VSContrl=0 and GenModel=2]
	//
	//	nTEC_Freq TEC_Npol= // Number of poles [even integer > 0] (-) [used only when VSContrl=0 and GenModel=2]
	//
	//	nTEC_Npol TEC_Sres= // Stator resistance (ohms) [used only when VSContrl=0 and GenModel=2]
	//
	//	nTEC_Sres TEC_Rres= // Rotor resistance (ohms) [used only when VSContrl=0 and GenModel=2]
	//
	//	nTEC_Rres TEC_VLL= // Line-to-line RMS voltage (volts) [used only when VSContrl=0 and GenModel=2]								
	//
	//	nTEC_VLL TEC_SLR= // Stator leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
	//
	//	nTEC_SLR TEC_RLR= // Rotor leakage reactance (ohms) [used only when VSContrl=0 and GenModel=2]								
	//
	//	nTEC_RLR TEC_MR= // Magnetizing reactance (ohms) [used only when VSContrl=0 and GenModel=2]
	//
	//	nTEC_MR sections+=Section PtfmModel= // Platform model {0: none, 1: onshore, 2: fixed bottom offshore, 3: floating offshore}	(switch)
	//
	//	iPtfmModel PtfmFile= // Name of file containing platform properties [unused when PtfmModel=0]
	//
	//	fPtfmFile sections+=Section TwrNodes= // Number of tower nodes used for analysis (-)
	//
	//	iTwrNodes TwrFile= // Name of file containing tower properties	(quoted string)
	//
	//	fTwrFile sections+=Section YawSpr= // Nacelle-yaw spring constant (N-m/rad)								
	//
	//	nYawSpr YawDamp= // Nacelle-yaw damping constant (N-m/rad/s)								
	//
	//	nYawDamp YawNeut= // Neutral yaw position--yaw spring force is zero at this yaw (degrees)
	//
	//	nYawNeut sections+=Section Furling= // Read in additional model properties for Furling turbine (flag)								
	//
	//	bFurling FurlFile= // Name of file containing furling properties (quoted string) [unused when Furling=False]
	//
	//	fFurlFile sections+=Section TeetMod= // Rotor-teeter spring/damper model {0: none, 1: standard, 2: user-def routine UserTeet} [unused for 3 blades]								(switch)
	//
	//	iTeetMod TeetDmpP= // Rotor-teeter damper position (degrees) [used only for 2 blades and when TeetMod=1]								
	//
	//	nTeetDmpP TeetDmp= // Rotor-teeter damping constant (N-m/rad/s) [used only for 2 blades and when TeetMod=1]								
	//
	//	nTeetDmp TeetCDmp= // Rotor-teeter rate-independent Coulomb-damping moment (N-m) [used only for 2 blades and when TeetMod=1]								
	//
	//	nTeetCDmp TeetSStP= // Rotor-teeter soft-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
	//
	//	nTeetSStP TeetHStP= // Rotor-teeter hard-stop position (degrees) [used only for 2 blades and when TeetMod=1]								
	//
	//	nTeetHStP TeetSSSp= // Rotor-teeter soft-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]								
	//
	//	nTeetSSSp TeetHSSp= // Rotor-teeter hard-stop linear-spring constant (N-m/rad) [used only for 2 blades and when TeetMod=1]
	//
	//	nTeetHSSp sections+=Section TBDrConN= // Tip-brake drag constant during normal operation, Cd*Area	(m^2)
	//
	//	nTBDrConN TBDrConD= // Tip-brake drag constant during fully-deployed operation, Cd*Area (m^2)
	//
	//	nTBDrConD TpBrDT= // Time for Tip-BRAKE to reach full deployment once released (sec)
	//
	//	nTpBrDT sections+=Section BldFile_1_= // Name of file containing properties for blade 1 (quoted string)
	//
	//	fBldFile_1_ BldFile_2_= // Name of file containing properties for blade 2 (quoted string)
	//
	//	fBldFile_2_ BldFile_3_= // Name of file containing properties for blade 3 [unused for 2 blades]	
	//
	//	fBldFile_3_ sections+=Section ADFile= // Name of file containing AeroDyn input parameters	(quoted string)
	//
	//	fADFile sections+=Section NoiseFile= // Name of file containing aerodynamic noise input parameters [used only when CompNoise=True] (quoted string)
	//
	//	fNoiseFile sections+=Section ADAMSFile= // Name of file containing ADAMS-specific input parameters (quoted string) [unused when ADAMSPrep=1]
	//
	//	fADAMSFile sections+=Section LinFile= // Name of file containing FAST linearazation parameters (quoted string) [unused when AnalMode=1]
	//
	//	fLinFile sections+=Section SumPrint= // Print summary data to "<RootName>.fsm" (flag)
	//
	//	bSumPrint OutFileFmt=bOutFileFmt? // Format for tabular (time-marching) output file(s) (1: text file [<RootName>.out], 2: binary file [<RootName>.outb], 3: both) (switch)
	//
	//	TabDelim= // Generate A tab-delimited tabular Output file. (flag)
	//
	//	bTabDelim OutFmt= // Format used for tabular output except time.  Resulting field should be 10 characters. [not checked for validity!]								(quoted string)
	//
	//	sOutFmt TStart= // Time to begin tabular Output (s)
	//
	//	nTStart DecFact= // Decimation factor for tabular output {1: output every time step} (-)								
	//
	//	iDecFact SttsTime= // Amount of time between screen status messages (sec)								
	//
	//	nSttsTime NcIMUxn= // Downwind distance from the tower-top to the nacelle IMU (meters)								
	//
	//	nNcIMUxn NcIMUyn= // Lateral  distance from the tower-top to the nacelle IMU (meters)								
	//
	//	nNcIMUyn NcIMUzn= // Vertical distance from the tower-top to the nacelle IMU (meters)								
	//
	//	nNcIMUzn ShftGagL= // Distance from rotor apex [3 blades] or teeter pin [2 blades] to shaft strain gages [positive for upwind rotors] (meters)								
	//
	//	nShftGagL NTwGages= // Number of tower nodes that have strain gages for output [0 to 5]								(-)
	//
	//	iNTwGages TwrGagNd= // List of tower nodes that have strain gages [1 to TwrNodes] [unused if NTwGages=0]								(-)
	//
	//	aTwrGagNd NBlGages= // Number of blade nodes that have strain gages for output [0 to 5]								(-)
	//
	//	iNBlGages BldGagNd= // List of blade nodes that have strain gages [1 to BldNodes] [unused if NBlGages=0]								(-)
	//
	//	aBldGagNd OutList= // The next line(s) contains a list of output parameters.  See OutList.txt for a listing of available output channels.
	//
	//	vOutList (WS | NEWLINE | SL_COMMENT)* // The word "END" must appear in the first 3 columns of this last line).
	//
	//	END (WS | NEWLINE | SL_COMMENT)*;
	public ModelFastfstElements getModelFastfstAccess() {
		return (pModelFastfst != null) ? pModelFastfst : (pModelFastfst = new ModelFastfstElements());
	}
	
	public ParserRule getModelFastfstRule() {
		return getModelFastfstAccess().getRule();
	}

	//tNUMBER returns ecore::EFloat:
	//
	//	INT | NUMBER;
	public TNUMBERElements getTNUMBERAccess() {
		return (pTNUMBER != null) ? pTNUMBER : (pTNUMBER = new TNUMBERElements());
	}
	
	public ParserRule getTNUMBERRule() {
		return getTNUMBERAccess().getRule();
	}

	//tBOOL returns ecore::EBoolean:
	//
	//	"TRUE" | "True" | "true" | "FALSE" | "False" | "false";
	public TBOOLElements getTBOOLAccess() {
		return (pTBOOL != null) ? pTBOOL : (pTBOOL = new TBOOLElements());
	}
	
	public ParserRule getTBOOLRule() {
		return getTBOOLAccess().getRule();
	}

	////(('T'|'t')('R'|'r')('U'|'u')('E'|'e')) | //(('F'|'f')('A'|'a')('L'|'l')('S'|'s')('E'|'e'));
	//
	////from online help: The QualifiedName is a little special. It does not contain any assignments. 
	//
	//// Therefore, it serves as a data type rule, which returns a String. So the feature name of a 
	//
	//// Package is still of type String. 
	//
	////FILE: ('.'?'.'?)('/'? STRING)*;
	//
	////FILE returns ecore::EString:
	//
	////	'"' ((('.'|'..')? '/')? (NAME '/')* NAME'.'NAME)? '"';
	//
	//tARRAY_INT returns ecore::EString:
	//
	//	INT ("," INT)*;
	public TARRAY_INTElements getTARRAY_INTAccess() {
		return (pTARRAY_INT != null) ? pTARRAY_INT : (pTARRAY_INT = new TARRAY_INTElements());
	}
	
	public ParserRule getTARRAY_INTRule() {
		return getTARRAY_INTAccess().getRule();
	}

	//// OK tARRAY_STR returns ecore::EString hidden(SL_COMMENT): (WS? '"' WS? OUT_CH WS? (',' WS? OUT_CH WS?)* '"' WS? NEWLINE )+;
	//
	//tARRAY_STR returns ecore::EString hidden(SL_COMMENT):
	//
	//	(WS? STRING WS? NEWLINE)*;
	public TARRAY_STRElements getTARRAY_STRAccess() {
		return (pTARRAY_STR != null) ? pTARRAY_STR : (pTARRAY_STR = new TARRAY_STRElements());
	}
	
	public ParserRule getTARRAY_STRRule() {
		return getTARRAY_STRAccess().getRule();
	}

	//// TERMINALS 
	//
	//// NOTE : see http://www.eclipse.org/Xtext/documentation.html#syntax
	//
	//// NOTE : the order of terminal rules is crucial for your grammar, as they may shadow each other. This is especially important for newly introduced rules in connection with imported rules from used grammars. 
	//
	//terminal END:
	//
	//	"END" !("\n" | "\r")* NEWLINE;
	public TerminalRule getENDRule() {
		return (tEND != null) ? tEND : (tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "END"));
	} 

	//terminal OUT_CH:
	//
	//	"WindV" ("x" | "y" | "z") "i" // from FAST 7.02.00d
	//
	//	| ("Tot" | "Hor") "WindV" | ("Hor" | "Ver") "WndDir" | "Azimuth" | "TeetDefl" | "NacYawP" | "RootMOoP1" | "RootMIP1" |
	//
	//	"Tip" (("D" | "AL" | "RD") "x".."z" ("b" | "c") | "Clrnc") "1".."3" | "Spn" "1".."9" ("AL" | "TD") "x".."z" "b"
	//
	//	"1".."3" | "PtchPMzc" "1".."3" | "Teet" ("P" | "V" | "A") "ya" | "LSS" ("Tip" | "Gag") ("P" | "V" | "A") "xa" |
	//
	//	("HSShft" ("V" | "A") | "TipSpdRat") | "NcIMU" ("T" | "R") ("V" | "A") "x".."z" "s" | ("RotFurl" | "TailFurl") ("P" |
	//
	//	"V" | "A") | "TwHt" "1".."9" (("A" | "M" | "F") "L") "x".."z" "t" | "TwHt" "1".."9" ("T" | "R") "P" "x".."z" "i" |
	//
	//	"Ptfm" (("T" | "R") ("D" | "V" | "A") | ("F" | "M")) "x".."z" ("t" | "i") | "Spn" "1".."9" ("M" | "F") "L" "x".."z"
	//
	//	"b" "1".."3" | "Wave" ("Elev" | "1".."9" ("V" | "A") "x".."z" "i") | "TwrBs" ("F" | "M") "x".."z" "t" | "Root" ("M" |
	//
	//	"F") "x".."z" ("b" | "c") "1".."3" | "YawBr" (("F" | "M") "x".."z" ("n" | "p") | ("T" | "R") ("D" | "V" | "A")
	//
	//	"x".."z" ("t" | "p")) | "YawBr" ("T" | "R") | "Yaw" ("P" | "V" | "A") "zn" | "NacYawErr" | "LSS" ("hft" ("F" | "M")
	//
	//	"x".."z" ("a" | "s") | "GagM" ("y" | "z") ("a" | "s")) | "CThrst" ("Azm" | "Rad") | "Rot" ("Pwr" | "C" ("q" | "p" |
	//
	//	"t")) | "HSS" ("BrTq" | "hft" ("Tq" | "Pwr" | "C" ("q" | "p"))) | "Gen" ("Tq" | "Pwr" | "C" ("q" | "p")) | ("R" |
	//
	//	"T") "FrlBrm" | "TFin" (("Alpha" | "C" ("Lift" | "Drag")) | ("DnPrs" | "CPF" ("x" | "y"))) | ("Fair" | "Anch")
	//
	//	"1".."9" ("Ten" | "Ang") | "Q" (("_" | "D" "2"? "_") ("B" "1".."3" ("E1" | "F" ("1" | "2") | "Teet" | "DrTr" | "GeAz"
	//
	//	| ("R" | "T") "Frl" | "Yaw" | "T" ("FA" | "SS") ("1" | "2") | "S" ("g" | "w") | "Hv" | "R" | "P" | "Y")));
	public TerminalRule getOUT_CHRule() {
		return (tOUT_CH != null) ? tOUT_CH : (tOUT_CH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "OUT_CH"));
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return (tINT != null) ? tINT : (tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT"));
	} 

	//terminal NUMBER returns ecore::EFloat:
	//
	//	("+" | "-")? INT ("." INT?) (("E" | "e") ("+" | "-")? INT)? | ("+" | "-")? INT (("E" | "e") ("+" | "-")? INT) | ("."
	//
	//	INT) (("E" | "e") ("+" | "-")? INT)? | "-" INT;
	public TerminalRule getNUMBERRule() {
		return (tNUMBER != null) ? tNUMBER : (tNUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NUMBER"));
	} 

	//// see http://www.cs.mtu.edu/~shene/COURSES/cs201/NOTES/chap05/format.html
	//
	//terminal FORMAT:
	//
	//	"\""? ("0".."9" | "I" | "F" | "T" | "E" | "S" | "P" | "N" | "L" | "A" | "B" | "X" | "R" | "Z" | "." | ":")+ "\""?;
	public TerminalRule getFORMATRule() {
		return (tFORMAT != null) ? tFORMAT : (tFORMAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "FORMAT"));
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal NEWLINE:
	//
	//	"\r" | "\n" | "\r\n";
	public TerminalRule getNEWLINERule() {
		return (tNEWLINE != null) ? tNEWLINE : (tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NEWLINE"));
	} 

	//terminal SL_COMMENT:
	//
	//	"-" !"0".."9" !("\r" | "\n" | "\r\n")*;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal WS:
	//
	//	(" " | "\t")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//Header hidden():
	//
	//	(rows+=SL_COMMENT NEWLINE)+;
	public HeaderElements getHeaderAccess() {
		return (pHeader != null) ? pHeader : (pHeader = new HeaderElements());
	}
	
	public ParserRule getHeaderRule() {
		return getHeaderAccess().getRule();
	}

	//Section hidden():
	//
	//	name=SL_COMMENT NEWLINE;
	public SectionElements getSectionAccess() {
		return (pSection != null) ? pSection : (pSection = new SectionElements());
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}

	//bEcho hidden():
	//
	//	WS? value=tBOOL WS name="Echo" WS? SL_COMMENT? NEWLINE;
	public BEchoElements getBEchoAccess() {
		return (pBEcho != null) ? pBEcho : (pBEcho = new BEchoElements());
	}
	
	public ParserRule getBEchoRule() {
		return getBEchoAccess().getRule();
	}

	//iADAMSPrep hidden():
	//
	//	WS? value=INT WS name="ADAMSPrep" WS? SL_COMMENT? NEWLINE;
	public IADAMSPrepElements getIADAMSPrepAccess() {
		return (pIADAMSPrep != null) ? pIADAMSPrep : (pIADAMSPrep = new IADAMSPrepElements());
	}
	
	public ParserRule getIADAMSPrepRule() {
		return getIADAMSPrepAccess().getRule();
	}

	//iAnalMode hidden():
	//
	//	WS? value=INT WS name="AnalMode" WS? SL_COMMENT? NEWLINE;
	public IAnalModeElements getIAnalModeAccess() {
		return (pIAnalMode != null) ? pIAnalMode : (pIAnalMode = new IAnalModeElements());
	}
	
	public ParserRule getIAnalModeRule() {
		return getIAnalModeAccess().getRule();
	}

	//iNumBl hidden():
	//
	//	WS? value=INT WS name="NumBl" WS? SL_COMMENT? NEWLINE;
	public INumBlElements getINumBlAccess() {
		return (pINumBl != null) ? pINumBl : (pINumBl = new INumBlElements());
	}
	
	public ParserRule getINumBlRule() {
		return getINumBlAccess().getRule();
	}

	//nTMax hidden():
	//
	//	WS? value=tNUMBER WS name="TMax" WS? SL_COMMENT? NEWLINE;
	public NTMaxElements getNTMaxAccess() {
		return (pNTMax != null) ? pNTMax : (pNTMax = new NTMaxElements());
	}
	
	public ParserRule getNTMaxRule() {
		return getNTMaxAccess().getRule();
	}

	//nDT hidden():
	//
	//	WS? value=tNUMBER WS name="DT" WS? SL_COMMENT? NEWLINE;
	public NDTElements getNDTAccess() {
		return (pNDT != null) ? pNDT : (pNDT = new NDTElements());
	}
	
	public ParserRule getNDTRule() {
		return getNDTAccess().getRule();
	}

	//iYCMode hidden():
	//
	//	WS? value=INT WS name="YCMode" WS? SL_COMMENT? NEWLINE;
	public IYCModeElements getIYCModeAccess() {
		return (pIYCMode != null) ? pIYCMode : (pIYCMode = new IYCModeElements());
	}
	
	public ParserRule getIYCModeRule() {
		return getIYCModeAccess().getRule();
	}

	//nTYCOn hidden():
	//
	//	WS? value=tNUMBER WS name="TYCOn" WS? SL_COMMENT? NEWLINE;
	public NTYCOnElements getNTYCOnAccess() {
		return (pNTYCOn != null) ? pNTYCOn : (pNTYCOn = new NTYCOnElements());
	}
	
	public ParserRule getNTYCOnRule() {
		return getNTYCOnAccess().getRule();
	}

	//iPCMode hidden():
	//
	//	WS? value=INT WS name="PCMode" WS? SL_COMMENT? NEWLINE;
	public IPCModeElements getIPCModeAccess() {
		return (pIPCMode != null) ? pIPCMode : (pIPCMode = new IPCModeElements());
	}
	
	public ParserRule getIPCModeRule() {
		return getIPCModeAccess().getRule();
	}

	//nTPCOn hidden():
	//
	//	WS? value=tNUMBER WS name="TPCOn" WS? SL_COMMENT? NEWLINE;
	public NTPCOnElements getNTPCOnAccess() {
		return (pNTPCOn != null) ? pNTPCOn : (pNTPCOn = new NTPCOnElements());
	}
	
	public ParserRule getNTPCOnRule() {
		return getNTPCOnAccess().getRule();
	}

	//iVSContrl hidden():
	//
	//	WS? value=INT WS name="VSContrl" WS? SL_COMMENT? NEWLINE;
	public IVSContrlElements getIVSContrlAccess() {
		return (pIVSContrl != null) ? pIVSContrl : (pIVSContrl = new IVSContrlElements());
	}
	
	public ParserRule getIVSContrlRule() {
		return getIVSContrlAccess().getRule();
	}

	//nVS_RtGnSp hidden():
	//
	//	WS? value=tNUMBER WS name="VS_RtGnSp" WS? SL_COMMENT? NEWLINE;
	public NVS_RtGnSpElements getNVS_RtGnSpAccess() {
		return (pNVS_RtGnSp != null) ? pNVS_RtGnSp : (pNVS_RtGnSp = new NVS_RtGnSpElements());
	}
	
	public ParserRule getNVS_RtGnSpRule() {
		return getNVS_RtGnSpAccess().getRule();
	}

	//nVS_RtTq hidden():
	//
	//	WS? value=tNUMBER WS name="VS_RtTq" WS? SL_COMMENT? NEWLINE;
	public NVS_RtTqElements getNVS_RtTqAccess() {
		return (pNVS_RtTq != null) ? pNVS_RtTq : (pNVS_RtTq = new NVS_RtTqElements());
	}
	
	public ParserRule getNVS_RtTqRule() {
		return getNVS_RtTqAccess().getRule();
	}

	//nVS_Rgn2K hidden():
	//
	//	WS? value=tNUMBER WS name="VS_Rgn2K" WS? SL_COMMENT? NEWLINE;
	public NVS_Rgn2KElements getNVS_Rgn2KAccess() {
		return (pNVS_Rgn2K != null) ? pNVS_Rgn2K : (pNVS_Rgn2K = new NVS_Rgn2KElements());
	}
	
	public ParserRule getNVS_Rgn2KRule() {
		return getNVS_Rgn2KAccess().getRule();
	}

	//nVS_SlPc hidden():
	//
	//	WS? value=tNUMBER WS name="VS_SlPc" WS? SL_COMMENT? NEWLINE;
	public NVS_SlPcElements getNVS_SlPcAccess() {
		return (pNVS_SlPc != null) ? pNVS_SlPc : (pNVS_SlPc = new NVS_SlPcElements());
	}
	
	public ParserRule getNVS_SlPcRule() {
		return getNVS_SlPcAccess().getRule();
	}

	//iGenModel hidden():
	//
	//	WS? value=INT WS name="GenModel" WS? SL_COMMENT? NEWLINE;
	public IGenModelElements getIGenModelAccess() {
		return (pIGenModel != null) ? pIGenModel : (pIGenModel = new IGenModelElements());
	}
	
	public ParserRule getIGenModelRule() {
		return getIGenModelAccess().getRule();
	}

	//bGenTiStr hidden():
	//
	//	WS? value=tBOOL WS name="GenTiStr" WS? SL_COMMENT? NEWLINE;
	public BGenTiStrElements getBGenTiStrAccess() {
		return (pBGenTiStr != null) ? pBGenTiStr : (pBGenTiStr = new BGenTiStrElements());
	}
	
	public ParserRule getBGenTiStrRule() {
		return getBGenTiStrAccess().getRule();
	}

	//bGenTiStp hidden():
	//
	//	WS? value=tBOOL WS name="GenTiStp" WS? SL_COMMENT? NEWLINE;
	public BGenTiStpElements getBGenTiStpAccess() {
		return (pBGenTiStp != null) ? pBGenTiStp : (pBGenTiStp = new BGenTiStpElements());
	}
	
	public ParserRule getBGenTiStpRule() {
		return getBGenTiStpAccess().getRule();
	}

	//nSpdGenOn hidden():
	//
	//	WS? value=tNUMBER WS name="SpdGenOn" WS? SL_COMMENT? NEWLINE;
	public NSpdGenOnElements getNSpdGenOnAccess() {
		return (pNSpdGenOn != null) ? pNSpdGenOn : (pNSpdGenOn = new NSpdGenOnElements());
	}
	
	public ParserRule getNSpdGenOnRule() {
		return getNSpdGenOnAccess().getRule();
	}

	//nTimGenOn hidden():
	//
	//	WS? value=tNUMBER WS name="TimGenOn" WS? SL_COMMENT? NEWLINE;
	public NTimGenOnElements getNTimGenOnAccess() {
		return (pNTimGenOn != null) ? pNTimGenOn : (pNTimGenOn = new NTimGenOnElements());
	}
	
	public ParserRule getNTimGenOnRule() {
		return getNTimGenOnAccess().getRule();
	}

	//nTimGenOf hidden():
	//
	//	WS? value=tNUMBER WS name="TimGenOf" WS? SL_COMMENT? NEWLINE;
	public NTimGenOfElements getNTimGenOfAccess() {
		return (pNTimGenOf != null) ? pNTimGenOf : (pNTimGenOf = new NTimGenOfElements());
	}
	
	public ParserRule getNTimGenOfRule() {
		return getNTimGenOfAccess().getRule();
	}

	//iHSSBrMode hidden():
	//
	//	WS? value=INT WS name="HSSBrMode" WS? SL_COMMENT? NEWLINE;
	public IHSSBrModeElements getIHSSBrModeAccess() {
		return (pIHSSBrMode != null) ? pIHSSBrMode : (pIHSSBrMode = new IHSSBrModeElements());
	}
	
	public ParserRule getIHSSBrModeRule() {
		return getIHSSBrModeAccess().getRule();
	}

	//nTHSSBrDp hidden():
	//
	//	WS? value=tNUMBER WS name="THSSBrDp" WS? SL_COMMENT? NEWLINE;
	public NTHSSBrDpElements getNTHSSBrDpAccess() {
		return (pNTHSSBrDp != null) ? pNTHSSBrDp : (pNTHSSBrDp = new NTHSSBrDpElements());
	}
	
	public ParserRule getNTHSSBrDpRule() {
		return getNTHSSBrDpAccess().getRule();
	}

	//nTiDynBrk hidden():
	//
	//	WS? value=tNUMBER WS name="TiDynBrk" WS? SL_COMMENT? NEWLINE;
	public NTiDynBrkElements getNTiDynBrkAccess() {
		return (pNTiDynBrk != null) ? pNTiDynBrk : (pNTiDynBrk = new NTiDynBrkElements());
	}
	
	public ParserRule getNTiDynBrkRule() {
		return getNTiDynBrkAccess().getRule();
	}

	//nTTpBrDp_1_ hidden():
	//
	//	WS? value=tNUMBER WS name="TTpBrDp(1)" WS? SL_COMMENT? NEWLINE;
	public NTTpBrDp_1_Elements getNTTpBrDp_1_Access() {
		return (pNTTpBrDp_1_ != null) ? pNTTpBrDp_1_ : (pNTTpBrDp_1_ = new NTTpBrDp_1_Elements());
	}
	
	public ParserRule getNTTpBrDp_1_Rule() {
		return getNTTpBrDp_1_Access().getRule();
	}

	//nTTpBrDp_2_ hidden():
	//
	//	WS? value=tNUMBER WS name="TTpBrDp(2)" WS? SL_COMMENT? NEWLINE;
	public NTTpBrDp_2_Elements getNTTpBrDp_2_Access() {
		return (pNTTpBrDp_2_ != null) ? pNTTpBrDp_2_ : (pNTTpBrDp_2_ = new NTTpBrDp_2_Elements());
	}
	
	public ParserRule getNTTpBrDp_2_Rule() {
		return getNTTpBrDp_2_Access().getRule();
	}

	//nTTpBrDp_3_ hidden():
	//
	//	WS? value=tNUMBER WS name="TTpBrDp(3)" WS? SL_COMMENT? NEWLINE;
	public NTTpBrDp_3_Elements getNTTpBrDp_3_Access() {
		return (pNTTpBrDp_3_ != null) ? pNTTpBrDp_3_ : (pNTTpBrDp_3_ = new NTTpBrDp_3_Elements());
	}
	
	public ParserRule getNTTpBrDp_3_Rule() {
		return getNTTpBrDp_3_Access().getRule();
	}

	//nTBDepISp_1_ hidden():
	//
	//	WS? value=tNUMBER WS name="TBDepISp(1)" WS? SL_COMMENT? NEWLINE;
	public NTBDepISp_1_Elements getNTBDepISp_1_Access() {
		return (pNTBDepISp_1_ != null) ? pNTBDepISp_1_ : (pNTBDepISp_1_ = new NTBDepISp_1_Elements());
	}
	
	public ParserRule getNTBDepISp_1_Rule() {
		return getNTBDepISp_1_Access().getRule();
	}

	//nTBDepISp_2_ hidden():
	//
	//	WS? value=tNUMBER WS name="TBDepISp(2)" WS? SL_COMMENT? NEWLINE;
	public NTBDepISp_2_Elements getNTBDepISp_2_Access() {
		return (pNTBDepISp_2_ != null) ? pNTBDepISp_2_ : (pNTBDepISp_2_ = new NTBDepISp_2_Elements());
	}
	
	public ParserRule getNTBDepISp_2_Rule() {
		return getNTBDepISp_2_Access().getRule();
	}

	//nTBDepISp_3_ hidden():
	//
	//	WS? value=tNUMBER WS name="TBDepISp(3)" WS? SL_COMMENT? NEWLINE;
	public NTBDepISp_3_Elements getNTBDepISp_3_Access() {
		return (pNTBDepISp_3_ != null) ? pNTBDepISp_3_ : (pNTBDepISp_3_ = new NTBDepISp_3_Elements());
	}
	
	public ParserRule getNTBDepISp_3_Rule() {
		return getNTBDepISp_3_Access().getRule();
	}

	//nTYawManS hidden():
	//
	//	WS? value=tNUMBER WS name="TYawManS" WS? SL_COMMENT? NEWLINE;
	public NTYawManSElements getNTYawManSAccess() {
		return (pNTYawManS != null) ? pNTYawManS : (pNTYawManS = new NTYawManSElements());
	}
	
	public ParserRule getNTYawManSRule() {
		return getNTYawManSAccess().getRule();
	}

	//nTYawManE hidden():
	//
	//	WS? value=tNUMBER WS name="TYawManE" WS? SL_COMMENT? NEWLINE;
	public NTYawManEElements getNTYawManEAccess() {
		return (pNTYawManE != null) ? pNTYawManE : (pNTYawManE = new NTYawManEElements());
	}
	
	public ParserRule getNTYawManERule() {
		return getNTYawManEAccess().getRule();
	}

	//nNacYawF hidden():
	//
	//	WS? value=tNUMBER WS name="NacYawF" WS? SL_COMMENT? NEWLINE;
	public NNacYawFElements getNNacYawFAccess() {
		return (pNNacYawF != null) ? pNNacYawF : (pNNacYawF = new NNacYawFElements());
	}
	
	public ParserRule getNNacYawFRule() {
		return getNNacYawFAccess().getRule();
	}

	//nTPitManS_1_ hidden():
	//
	//	WS? value=tNUMBER WS name="TPitManS(1)" WS? SL_COMMENT? NEWLINE;
	public NTPitManS_1_Elements getNTPitManS_1_Access() {
		return (pNTPitManS_1_ != null) ? pNTPitManS_1_ : (pNTPitManS_1_ = new NTPitManS_1_Elements());
	}
	
	public ParserRule getNTPitManS_1_Rule() {
		return getNTPitManS_1_Access().getRule();
	}

	//nTPitManS_2_ hidden():
	//
	//	WS? value=tNUMBER WS name="TPitManS(2)" WS? SL_COMMENT? NEWLINE;
	public NTPitManS_2_Elements getNTPitManS_2_Access() {
		return (pNTPitManS_2_ != null) ? pNTPitManS_2_ : (pNTPitManS_2_ = new NTPitManS_2_Elements());
	}
	
	public ParserRule getNTPitManS_2_Rule() {
		return getNTPitManS_2_Access().getRule();
	}

	//nTPitManS_3_ hidden():
	//
	//	WS? value=tNUMBER WS name="TPitManS(3)" WS? SL_COMMENT? NEWLINE;
	public NTPitManS_3_Elements getNTPitManS_3_Access() {
		return (pNTPitManS_3_ != null) ? pNTPitManS_3_ : (pNTPitManS_3_ = new NTPitManS_3_Elements());
	}
	
	public ParserRule getNTPitManS_3_Rule() {
		return getNTPitManS_3_Access().getRule();
	}

	//nTPitManE_1_ hidden():
	//
	//	WS? value=tNUMBER WS name="TPitManE(1)" WS? SL_COMMENT? NEWLINE;
	public NTPitManE_1_Elements getNTPitManE_1_Access() {
		return (pNTPitManE_1_ != null) ? pNTPitManE_1_ : (pNTPitManE_1_ = new NTPitManE_1_Elements());
	}
	
	public ParserRule getNTPitManE_1_Rule() {
		return getNTPitManE_1_Access().getRule();
	}

	//nTPitManE_2_ hidden():
	//
	//	WS? value=tNUMBER WS name="TPitManE(2)" WS? SL_COMMENT? NEWLINE;
	public NTPitManE_2_Elements getNTPitManE_2_Access() {
		return (pNTPitManE_2_ != null) ? pNTPitManE_2_ : (pNTPitManE_2_ = new NTPitManE_2_Elements());
	}
	
	public ParserRule getNTPitManE_2_Rule() {
		return getNTPitManE_2_Access().getRule();
	}

	//nTPitManE_3_ hidden():
	//
	//	WS? value=tNUMBER WS name="TPitManE(3)" WS? SL_COMMENT? NEWLINE;
	public NTPitManE_3_Elements getNTPitManE_3_Access() {
		return (pNTPitManE_3_ != null) ? pNTPitManE_3_ : (pNTPitManE_3_ = new NTPitManE_3_Elements());
	}
	
	public ParserRule getNTPitManE_3_Rule() {
		return getNTPitManE_3_Access().getRule();
	}

	//nBlPitch_1_ hidden():
	//
	//	WS? value=tNUMBER WS name="BlPitch(1)" WS? SL_COMMENT? NEWLINE;
	public NBlPitch_1_Elements getNBlPitch_1_Access() {
		return (pNBlPitch_1_ != null) ? pNBlPitch_1_ : (pNBlPitch_1_ = new NBlPitch_1_Elements());
	}
	
	public ParserRule getNBlPitch_1_Rule() {
		return getNBlPitch_1_Access().getRule();
	}

	//nBlPitch_2_ hidden():
	//
	//	WS? value=tNUMBER WS name="BlPitch(2)" WS? SL_COMMENT? NEWLINE;
	public NBlPitch_2_Elements getNBlPitch_2_Access() {
		return (pNBlPitch_2_ != null) ? pNBlPitch_2_ : (pNBlPitch_2_ = new NBlPitch_2_Elements());
	}
	
	public ParserRule getNBlPitch_2_Rule() {
		return getNBlPitch_2_Access().getRule();
	}

	//nBlPitch_3_ hidden():
	//
	//	WS? value=tNUMBER WS name="BlPitch(3)" WS? SL_COMMENT? NEWLINE;
	public NBlPitch_3_Elements getNBlPitch_3_Access() {
		return (pNBlPitch_3_ != null) ? pNBlPitch_3_ : (pNBlPitch_3_ = new NBlPitch_3_Elements());
	}
	
	public ParserRule getNBlPitch_3_Rule() {
		return getNBlPitch_3_Access().getRule();
	}

	//nBlPitchF_1_ hidden():
	//
	//	WS? value=tNUMBER WS name="BlPitchF(1)" WS? SL_COMMENT? NEWLINE;
	public NBlPitchF_1_Elements getNBlPitchF_1_Access() {
		return (pNBlPitchF_1_ != null) ? pNBlPitchF_1_ : (pNBlPitchF_1_ = new NBlPitchF_1_Elements());
	}
	
	public ParserRule getNBlPitchF_1_Rule() {
		return getNBlPitchF_1_Access().getRule();
	}

	//nBlPitchF_2_ hidden():
	//
	//	WS? value=tNUMBER WS name="BlPitchF(2)" WS? SL_COMMENT? NEWLINE;
	public NBlPitchF_2_Elements getNBlPitchF_2_Access() {
		return (pNBlPitchF_2_ != null) ? pNBlPitchF_2_ : (pNBlPitchF_2_ = new NBlPitchF_2_Elements());
	}
	
	public ParserRule getNBlPitchF_2_Rule() {
		return getNBlPitchF_2_Access().getRule();
	}

	//nBlPitchF_3_ hidden():
	//
	//	WS? value=tNUMBER WS name="BlPitchF(3)" WS? SL_COMMENT? NEWLINE;
	public NBlPitchF_3_Elements getNBlPitchF_3_Access() {
		return (pNBlPitchF_3_ != null) ? pNBlPitchF_3_ : (pNBlPitchF_3_ = new NBlPitchF_3_Elements());
	}
	
	public ParserRule getNBlPitchF_3_Rule() {
		return getNBlPitchF_3_Access().getRule();
	}

	//nGravity hidden():
	//
	//	WS? value=tNUMBER WS name="Gravity" WS? SL_COMMENT? NEWLINE;
	public NGravityElements getNGravityAccess() {
		return (pNGravity != null) ? pNGravity : (pNGravity = new NGravityElements());
	}
	
	public ParserRule getNGravityRule() {
		return getNGravityAccess().getRule();
	}

	//bFlapDOF1 hidden():
	//
	//	WS? value=tBOOL WS name="FlapDOF1" WS? SL_COMMENT? NEWLINE;
	public BFlapDOF1Elements getBFlapDOF1Access() {
		return (pBFlapDOF1 != null) ? pBFlapDOF1 : (pBFlapDOF1 = new BFlapDOF1Elements());
	}
	
	public ParserRule getBFlapDOF1Rule() {
		return getBFlapDOF1Access().getRule();
	}

	//bFlapDOF2 hidden():
	//
	//	WS? value=tBOOL WS name="FlapDOF2" WS? SL_COMMENT? NEWLINE;
	public BFlapDOF2Elements getBFlapDOF2Access() {
		return (pBFlapDOF2 != null) ? pBFlapDOF2 : (pBFlapDOF2 = new BFlapDOF2Elements());
	}
	
	public ParserRule getBFlapDOF2Rule() {
		return getBFlapDOF2Access().getRule();
	}

	//bEdgeDOF hidden():
	//
	//	WS? value=tBOOL WS name="EdgeDOF" WS? SL_COMMENT? NEWLINE;
	public BEdgeDOFElements getBEdgeDOFAccess() {
		return (pBEdgeDOF != null) ? pBEdgeDOF : (pBEdgeDOF = new BEdgeDOFElements());
	}
	
	public ParserRule getBEdgeDOFRule() {
		return getBEdgeDOFAccess().getRule();
	}

	//bTeetDOF hidden():
	//
	//	WS? value=tBOOL WS name="TeetDOF" WS? SL_COMMENT? NEWLINE;
	public BTeetDOFElements getBTeetDOFAccess() {
		return (pBTeetDOF != null) ? pBTeetDOF : (pBTeetDOF = new BTeetDOFElements());
	}
	
	public ParserRule getBTeetDOFRule() {
		return getBTeetDOFAccess().getRule();
	}

	//bDrTrDOF hidden():
	//
	//	WS? value=tBOOL WS name="DrTrDOF" WS? SL_COMMENT? NEWLINE;
	public BDrTrDOFElements getBDrTrDOFAccess() {
		return (pBDrTrDOF != null) ? pBDrTrDOF : (pBDrTrDOF = new BDrTrDOFElements());
	}
	
	public ParserRule getBDrTrDOFRule() {
		return getBDrTrDOFAccess().getRule();
	}

	//bGenDOF hidden():
	//
	//	WS? value=tBOOL WS name="GenDOF" WS? SL_COMMENT? NEWLINE;
	public BGenDOFElements getBGenDOFAccess() {
		return (pBGenDOF != null) ? pBGenDOF : (pBGenDOF = new BGenDOFElements());
	}
	
	public ParserRule getBGenDOFRule() {
		return getBGenDOFAccess().getRule();
	}

	//bYawDOF hidden():
	//
	//	WS? value=tBOOL WS name="YawDOF" WS? SL_COMMENT? NEWLINE;
	public BYawDOFElements getBYawDOFAccess() {
		return (pBYawDOF != null) ? pBYawDOF : (pBYawDOF = new BYawDOFElements());
	}
	
	public ParserRule getBYawDOFRule() {
		return getBYawDOFAccess().getRule();
	}

	//bTwFADOF1 hidden():
	//
	//	WS? value=tBOOL WS name="TwFADOF1" WS? SL_COMMENT? NEWLINE;
	public BTwFADOF1Elements getBTwFADOF1Access() {
		return (pBTwFADOF1 != null) ? pBTwFADOF1 : (pBTwFADOF1 = new BTwFADOF1Elements());
	}
	
	public ParserRule getBTwFADOF1Rule() {
		return getBTwFADOF1Access().getRule();
	}

	//bTwFADOF2 hidden():
	//
	//	WS? value=tBOOL WS name="TwFADOF2" WS? SL_COMMENT? NEWLINE;
	public BTwFADOF2Elements getBTwFADOF2Access() {
		return (pBTwFADOF2 != null) ? pBTwFADOF2 : (pBTwFADOF2 = new BTwFADOF2Elements());
	}
	
	public ParserRule getBTwFADOF2Rule() {
		return getBTwFADOF2Access().getRule();
	}

	//bTwSSDOF1 hidden():
	//
	//	WS? value=tBOOL WS name="TwSSDOF1" WS? SL_COMMENT? NEWLINE;
	public BTwSSDOF1Elements getBTwSSDOF1Access() {
		return (pBTwSSDOF1 != null) ? pBTwSSDOF1 : (pBTwSSDOF1 = new BTwSSDOF1Elements());
	}
	
	public ParserRule getBTwSSDOF1Rule() {
		return getBTwSSDOF1Access().getRule();
	}

	//bTwSSDOF2 hidden():
	//
	//	WS? value=tBOOL WS name="TwSSDOF2" WS? SL_COMMENT? NEWLINE;
	public BTwSSDOF2Elements getBTwSSDOF2Access() {
		return (pBTwSSDOF2 != null) ? pBTwSSDOF2 : (pBTwSSDOF2 = new BTwSSDOF2Elements());
	}
	
	public ParserRule getBTwSSDOF2Rule() {
		return getBTwSSDOF2Access().getRule();
	}

	//bCompAero hidden():
	//
	//	WS? value=tBOOL WS name="CompAero" WS? SL_COMMENT? NEWLINE;
	public BCompAeroElements getBCompAeroAccess() {
		return (pBCompAero != null) ? pBCompAero : (pBCompAero = new BCompAeroElements());
	}
	
	public ParserRule getBCompAeroRule() {
		return getBCompAeroAccess().getRule();
	}

	//bCompNoise hidden():
	//
	//	WS? value=tBOOL WS name="CompNoise" WS? SL_COMMENT? NEWLINE;
	public BCompNoiseElements getBCompNoiseAccess() {
		return (pBCompNoise != null) ? pBCompNoise : (pBCompNoise = new BCompNoiseElements());
	}
	
	public ParserRule getBCompNoiseRule() {
		return getBCompNoiseAccess().getRule();
	}

	//nOoPDefl hidden():
	//
	//	WS? value=tNUMBER WS name="OoPDefl" WS? SL_COMMENT? NEWLINE;
	public NOoPDeflElements getNOoPDeflAccess() {
		return (pNOoPDefl != null) ? pNOoPDefl : (pNOoPDefl = new NOoPDeflElements());
	}
	
	public ParserRule getNOoPDeflRule() {
		return getNOoPDeflAccess().getRule();
	}

	//nIPDefl hidden():
	//
	//	WS? value=tNUMBER WS name="IPDefl" WS? SL_COMMENT? NEWLINE;
	public NIPDeflElements getNIPDeflAccess() {
		return (pNIPDefl != null) ? pNIPDefl : (pNIPDefl = new NIPDeflElements());
	}
	
	public ParserRule getNIPDeflRule() {
		return getNIPDeflAccess().getRule();
	}

	//nTeetDefl hidden():
	//
	//	WS? value=tNUMBER WS name="TeetDefl" WS? SL_COMMENT? NEWLINE;
	public NTeetDeflElements getNTeetDeflAccess() {
		return (pNTeetDefl != null) ? pNTeetDefl : (pNTeetDefl = new NTeetDeflElements());
	}
	
	public ParserRule getNTeetDeflRule() {
		return getNTeetDeflAccess().getRule();
	}

	//nAzimuth hidden():
	//
	//	WS? value=tNUMBER WS name="Azimuth" WS? SL_COMMENT? NEWLINE;
	public NAzimuthElements getNAzimuthAccess() {
		return (pNAzimuth != null) ? pNAzimuth : (pNAzimuth = new NAzimuthElements());
	}
	
	public ParserRule getNAzimuthRule() {
		return getNAzimuthAccess().getRule();
	}

	//nRotSpeed hidden():
	//
	//	WS? value=tNUMBER WS name="RotSpeed" WS? SL_COMMENT? NEWLINE;
	public NRotSpeedElements getNRotSpeedAccess() {
		return (pNRotSpeed != null) ? pNRotSpeed : (pNRotSpeed = new NRotSpeedElements());
	}
	
	public ParserRule getNRotSpeedRule() {
		return getNRotSpeedAccess().getRule();
	}

	//nNacYaw hidden():
	//
	//	WS? value=tNUMBER WS name="NacYaw" WS? SL_COMMENT? NEWLINE;
	public NNacYawElements getNNacYawAccess() {
		return (pNNacYaw != null) ? pNNacYaw : (pNNacYaw = new NNacYawElements());
	}
	
	public ParserRule getNNacYawRule() {
		return getNNacYawAccess().getRule();
	}

	//nTTDspFA hidden():
	//
	//	WS? value=tNUMBER WS name="TTDspFA" WS? SL_COMMENT? NEWLINE;
	public NTTDspFAElements getNTTDspFAAccess() {
		return (pNTTDspFA != null) ? pNTTDspFA : (pNTTDspFA = new NTTDspFAElements());
	}
	
	public ParserRule getNTTDspFARule() {
		return getNTTDspFAAccess().getRule();
	}

	//nTTDspSS hidden():
	//
	//	WS? value=tNUMBER WS name="TTDspSS" WS? SL_COMMENT? NEWLINE;
	public NTTDspSSElements getNTTDspSSAccess() {
		return (pNTTDspSS != null) ? pNTTDspSS : (pNTTDspSS = new NTTDspSSElements());
	}
	
	public ParserRule getNTTDspSSRule() {
		return getNTTDspSSAccess().getRule();
	}

	//nTipRad hidden():
	//
	//	WS? value=tNUMBER WS name="TipRad" WS? SL_COMMENT? NEWLINE;
	public NTipRadElements getNTipRadAccess() {
		return (pNTipRad != null) ? pNTipRad : (pNTipRad = new NTipRadElements());
	}
	
	public ParserRule getNTipRadRule() {
		return getNTipRadAccess().getRule();
	}

	//nHubRad hidden():
	//
	//	WS? value=tNUMBER WS name="HubRad" WS? SL_COMMENT? NEWLINE;
	public NHubRadElements getNHubRadAccess() {
		return (pNHubRad != null) ? pNHubRad : (pNHubRad = new NHubRadElements());
	}
	
	public ParserRule getNHubRadRule() {
		return getNHubRadAccess().getRule();
	}

	//nPSpnElN hidden():
	//
	//	WS? value=INT WS name="PSpnElN" WS? SL_COMMENT? NEWLINE;
	public NPSpnElNElements getNPSpnElNAccess() {
		return (pNPSpnElN != null) ? pNPSpnElN : (pNPSpnElN = new NPSpnElNElements());
	}
	
	public ParserRule getNPSpnElNRule() {
		return getNPSpnElNAccess().getRule();
	}

	//nUndSling hidden():
	//
	//	WS? value=tNUMBER WS name="UndSling" WS? SL_COMMENT? NEWLINE;
	public NUndSlingElements getNUndSlingAccess() {
		return (pNUndSling != null) ? pNUndSling : (pNUndSling = new NUndSlingElements());
	}
	
	public ParserRule getNUndSlingRule() {
		return getNUndSlingAccess().getRule();
	}

	//nHubCM hidden():
	//
	//	WS? value=tNUMBER WS name="HubCM" WS? SL_COMMENT? NEWLINE;
	public NHubCMElements getNHubCMAccess() {
		return (pNHubCM != null) ? pNHubCM : (pNHubCM = new NHubCMElements());
	}
	
	public ParserRule getNHubCMRule() {
		return getNHubCMAccess().getRule();
	}

	//nOverHang hidden():
	//
	//	WS? value=tNUMBER WS name="OverHang" WS? SL_COMMENT? NEWLINE;
	public NOverHangElements getNOverHangAccess() {
		return (pNOverHang != null) ? pNOverHang : (pNOverHang = new NOverHangElements());
	}
	
	public ParserRule getNOverHangRule() {
		return getNOverHangAccess().getRule();
	}

	//nNacCMxn hidden():
	//
	//	WS? value=tNUMBER WS name="NacCMxn" WS? SL_COMMENT? NEWLINE;
	public NNacCMxnElements getNNacCMxnAccess() {
		return (pNNacCMxn != null) ? pNNacCMxn : (pNNacCMxn = new NNacCMxnElements());
	}
	
	public ParserRule getNNacCMxnRule() {
		return getNNacCMxnAccess().getRule();
	}

	//nNacCMyn hidden():
	//
	//	WS? value=tNUMBER WS name="NacCMyn" WS? SL_COMMENT? NEWLINE;
	public NNacCMynElements getNNacCMynAccess() {
		return (pNNacCMyn != null) ? pNNacCMyn : (pNNacCMyn = new NNacCMynElements());
	}
	
	public ParserRule getNNacCMynRule() {
		return getNNacCMynAccess().getRule();
	}

	//nNacCMzn hidden():
	//
	//	WS? value=tNUMBER WS name="NacCMzn" WS? SL_COMMENT? NEWLINE;
	public NNacCMznElements getNNacCMznAccess() {
		return (pNNacCMzn != null) ? pNNacCMzn : (pNNacCMzn = new NNacCMznElements());
	}
	
	public ParserRule getNNacCMznRule() {
		return getNNacCMznAccess().getRule();
	}

	//nTowerHt hidden():
	//
	//	WS? value=tNUMBER WS name="TowerHt" WS? SL_COMMENT? NEWLINE;
	public NTowerHtElements getNTowerHtAccess() {
		return (pNTowerHt != null) ? pNTowerHt : (pNTowerHt = new NTowerHtElements());
	}
	
	public ParserRule getNTowerHtRule() {
		return getNTowerHtAccess().getRule();
	}

	//nTwr2Shft hidden():
	//
	//	WS? value=tNUMBER WS name="Twr2Shft" WS? SL_COMMENT? NEWLINE;
	public NTwr2ShftElements getNTwr2ShftAccess() {
		return (pNTwr2Shft != null) ? pNTwr2Shft : (pNTwr2Shft = new NTwr2ShftElements());
	}
	
	public ParserRule getNTwr2ShftRule() {
		return getNTwr2ShftAccess().getRule();
	}

	//nTwrRBHt hidden():
	//
	//	WS? value=tNUMBER WS name="TwrRBHt" WS? SL_COMMENT? NEWLINE;
	public NTwrRBHtElements getNTwrRBHtAccess() {
		return (pNTwrRBHt != null) ? pNTwrRBHt : (pNTwrRBHt = new NTwrRBHtElements());
	}
	
	public ParserRule getNTwrRBHtRule() {
		return getNTwrRBHtAccess().getRule();
	}

	//nShftTilt hidden():
	//
	//	WS? value=tNUMBER WS name="ShftTilt" WS? SL_COMMENT? NEWLINE;
	public NShftTiltElements getNShftTiltAccess() {
		return (pNShftTilt != null) ? pNShftTilt : (pNShftTilt = new NShftTiltElements());
	}
	
	public ParserRule getNShftTiltRule() {
		return getNShftTiltAccess().getRule();
	}

	//nDelta3 hidden():
	//
	//	WS? value=tNUMBER WS name="Delta3" WS? SL_COMMENT? NEWLINE;
	public NDelta3Elements getNDelta3Access() {
		return (pNDelta3 != null) ? pNDelta3 : (pNDelta3 = new NDelta3Elements());
	}
	
	public ParserRule getNDelta3Rule() {
		return getNDelta3Access().getRule();
	}

	//nPreCone_1_ hidden():
	//
	//	WS? value=tNUMBER WS name="PreCone(1)" WS? SL_COMMENT? NEWLINE;
	public NPreCone_1_Elements getNPreCone_1_Access() {
		return (pNPreCone_1_ != null) ? pNPreCone_1_ : (pNPreCone_1_ = new NPreCone_1_Elements());
	}
	
	public ParserRule getNPreCone_1_Rule() {
		return getNPreCone_1_Access().getRule();
	}

	//nPreCone_2_ hidden():
	//
	//	WS? value=tNUMBER WS name="PreCone(2)" WS? SL_COMMENT? NEWLINE;
	public NPreCone_2_Elements getNPreCone_2_Access() {
		return (pNPreCone_2_ != null) ? pNPreCone_2_ : (pNPreCone_2_ = new NPreCone_2_Elements());
	}
	
	public ParserRule getNPreCone_2_Rule() {
		return getNPreCone_2_Access().getRule();
	}

	//nPreCone_3_ hidden():
	//
	//	WS? value=tNUMBER WS name="PreCone(3)" WS? SL_COMMENT? NEWLINE;
	public NPreCone_3_Elements getNPreCone_3_Access() {
		return (pNPreCone_3_ != null) ? pNPreCone_3_ : (pNPreCone_3_ = new NPreCone_3_Elements());
	}
	
	public ParserRule getNPreCone_3_Rule() {
		return getNPreCone_3_Access().getRule();
	}

	//nAzimB1Up hidden():
	//
	//	WS? value=tNUMBER WS name="AzimB1Up" WS? SL_COMMENT? NEWLINE;
	public NAzimB1UpElements getNAzimB1UpAccess() {
		return (pNAzimB1Up != null) ? pNAzimB1Up : (pNAzimB1Up = new NAzimB1UpElements());
	}
	
	public ParserRule getNAzimB1UpRule() {
		return getNAzimB1UpAccess().getRule();
	}

	//nYawBrMass hidden():
	//
	//	WS? value=tNUMBER WS name="YawBrMass" WS? SL_COMMENT? NEWLINE;
	public NYawBrMassElements getNYawBrMassAccess() {
		return (pNYawBrMass != null) ? pNYawBrMass : (pNYawBrMass = new NYawBrMassElements());
	}
	
	public ParserRule getNYawBrMassRule() {
		return getNYawBrMassAccess().getRule();
	}

	//nNacMass hidden():
	//
	//	WS? value=tNUMBER WS name="NacMass" WS? SL_COMMENT? NEWLINE;
	public NNacMassElements getNNacMassAccess() {
		return (pNNacMass != null) ? pNNacMass : (pNNacMass = new NNacMassElements());
	}
	
	public ParserRule getNNacMassRule() {
		return getNNacMassAccess().getRule();
	}

	//nHubMass hidden():
	//
	//	WS? value=tNUMBER WS name="HubMass" WS? SL_COMMENT? NEWLINE;
	public NHubMassElements getNHubMassAccess() {
		return (pNHubMass != null) ? pNHubMass : (pNHubMass = new NHubMassElements());
	}
	
	public ParserRule getNHubMassRule() {
		return getNHubMassAccess().getRule();
	}

	//nTipMass_1_ hidden():
	//
	//	WS? value=tNUMBER WS name="TipMass(1)" WS? SL_COMMENT? NEWLINE;
	public NTipMass_1_Elements getNTipMass_1_Access() {
		return (pNTipMass_1_ != null) ? pNTipMass_1_ : (pNTipMass_1_ = new NTipMass_1_Elements());
	}
	
	public ParserRule getNTipMass_1_Rule() {
		return getNTipMass_1_Access().getRule();
	}

	//nTipMass_2_ hidden():
	//
	//	WS? value=tNUMBER WS name="TipMass(2)" WS? SL_COMMENT? NEWLINE;
	public NTipMass_2_Elements getNTipMass_2_Access() {
		return (pNTipMass_2_ != null) ? pNTipMass_2_ : (pNTipMass_2_ = new NTipMass_2_Elements());
	}
	
	public ParserRule getNTipMass_2_Rule() {
		return getNTipMass_2_Access().getRule();
	}

	//nTipMass_3_ hidden():
	//
	//	WS? value=tNUMBER WS name="TipMass(3)" WS? SL_COMMENT? NEWLINE;
	public NTipMass_3_Elements getNTipMass_3_Access() {
		return (pNTipMass_3_ != null) ? pNTipMass_3_ : (pNTipMass_3_ = new NTipMass_3_Elements());
	}
	
	public ParserRule getNTipMass_3_Rule() {
		return getNTipMass_3_Access().getRule();
	}

	//nNacYIner hidden():
	//
	//	WS? value=tNUMBER WS name="NacYIner" WS? SL_COMMENT? NEWLINE;
	public NNacYInerElements getNNacYInerAccess() {
		return (pNNacYIner != null) ? pNNacYIner : (pNNacYIner = new NNacYInerElements());
	}
	
	public ParserRule getNNacYInerRule() {
		return getNNacYInerAccess().getRule();
	}

	//nGenIner hidden():
	//
	//	WS? value=tNUMBER WS name="GenIner" WS? SL_COMMENT? NEWLINE;
	public NGenInerElements getNGenInerAccess() {
		return (pNGenIner != null) ? pNGenIner : (pNGenIner = new NGenInerElements());
	}
	
	public ParserRule getNGenInerRule() {
		return getNGenInerAccess().getRule();
	}

	//nHubIner hidden():
	//
	//	WS? value=tNUMBER WS name="HubIner" WS? SL_COMMENT? NEWLINE;
	public NHubInerElements getNHubInerAccess() {
		return (pNHubIner != null) ? pNHubIner : (pNHubIner = new NHubInerElements());
	}
	
	public ParserRule getNHubInerRule() {
		return getNHubInerAccess().getRule();
	}

	//nGBoxEff hidden():
	//
	//	WS? value=tNUMBER WS name="GBoxEff" WS? SL_COMMENT? NEWLINE;
	public NGBoxEffElements getNGBoxEffAccess() {
		return (pNGBoxEff != null) ? pNGBoxEff : (pNGBoxEff = new NGBoxEffElements());
	}
	
	public ParserRule getNGBoxEffRule() {
		return getNGBoxEffAccess().getRule();
	}

	//nGenEff hidden():
	//
	//	WS? value=tNUMBER WS name="GenEff" WS? SL_COMMENT? NEWLINE;
	public NGenEffElements getNGenEffAccess() {
		return (pNGenEff != null) ? pNGenEff : (pNGenEff = new NGenEffElements());
	}
	
	public ParserRule getNGenEffRule() {
		return getNGenEffAccess().getRule();
	}

	//nGBRatio hidden():
	//
	//	WS? value=tNUMBER WS name="GBRatio" WS? SL_COMMENT? NEWLINE;
	public NGBRatioElements getNGBRatioAccess() {
		return (pNGBRatio != null) ? pNGBRatio : (pNGBRatio = new NGBRatioElements());
	}
	
	public ParserRule getNGBRatioRule() {
		return getNGBRatioAccess().getRule();
	}

	//bGBRevers hidden():
	//
	//	WS? value=tBOOL WS name="GBRevers" WS? SL_COMMENT? NEWLINE;
	public BGBReversElements getBGBReversAccess() {
		return (pBGBRevers != null) ? pBGBRevers : (pBGBRevers = new BGBReversElements());
	}
	
	public ParserRule getBGBReversRule() {
		return getBGBReversAccess().getRule();
	}

	//nHSSBrTqF hidden():
	//
	//	WS? value=tNUMBER WS name="HSSBrTqF" WS? SL_COMMENT? NEWLINE;
	public NHSSBrTqFElements getNHSSBrTqFAccess() {
		return (pNHSSBrTqF != null) ? pNHSSBrTqF : (pNHSSBrTqF = new NHSSBrTqFElements());
	}
	
	public ParserRule getNHSSBrTqFRule() {
		return getNHSSBrTqFAccess().getRule();
	}

	//nHSSBrDT hidden():
	//
	//	WS? value=tNUMBER WS name="HSSBrDT" WS? SL_COMMENT? NEWLINE;
	public NHSSBrDTElements getNHSSBrDTAccess() {
		return (pNHSSBrDT != null) ? pNHSSBrDT : (pNHSSBrDT = new NHSSBrDTElements());
	}
	
	public ParserRule getNHSSBrDTRule() {
		return getNHSSBrDTAccess().getRule();
	}

	//fDynBrkFi hidden():
	//
	//	WS? value=STRING WS name="DynBrkFi" WS? SL_COMMENT? NEWLINE;
	public FDynBrkFiElements getFDynBrkFiAccess() {
		return (pFDynBrkFi != null) ? pFDynBrkFi : (pFDynBrkFi = new FDynBrkFiElements());
	}
	
	public ParserRule getFDynBrkFiRule() {
		return getFDynBrkFiAccess().getRule();
	}

	//nDTTorSpr hidden():
	//
	//	WS? value=tNUMBER WS name="DTTorSpr" WS? SL_COMMENT? NEWLINE;
	public NDTTorSprElements getNDTTorSprAccess() {
		return (pNDTTorSpr != null) ? pNDTTorSpr : (pNDTTorSpr = new NDTTorSprElements());
	}
	
	public ParserRule getNDTTorSprRule() {
		return getNDTTorSprAccess().getRule();
	}

	//nDTTorDmp hidden():
	//
	//	WS? value=tNUMBER WS name="DTTorDmp" WS? SL_COMMENT? NEWLINE;
	public NDTTorDmpElements getNDTTorDmpAccess() {
		return (pNDTTorDmp != null) ? pNDTTorDmp : (pNDTTorDmp = new NDTTorDmpElements());
	}
	
	public ParserRule getNDTTorDmpRule() {
		return getNDTTorDmpAccess().getRule();
	}

	//nSIG_SlPc hidden():
	//
	//	WS? value=tNUMBER WS name="SIG_SlPc" WS? SL_COMMENT? NEWLINE;
	public NSIG_SlPcElements getNSIG_SlPcAccess() {
		return (pNSIG_SlPc != null) ? pNSIG_SlPc : (pNSIG_SlPc = new NSIG_SlPcElements());
	}
	
	public ParserRule getNSIG_SlPcRule() {
		return getNSIG_SlPcAccess().getRule();
	}

	//nSIG_SySp hidden():
	//
	//	WS? value=tNUMBER WS name="SIG_SySp" WS? SL_COMMENT? NEWLINE;
	public NSIG_SySpElements getNSIG_SySpAccess() {
		return (pNSIG_SySp != null) ? pNSIG_SySp : (pNSIG_SySp = new NSIG_SySpElements());
	}
	
	public ParserRule getNSIG_SySpRule() {
		return getNSIG_SySpAccess().getRule();
	}

	//nSIG_RtTq hidden():
	//
	//	WS? value=tNUMBER WS name="SIG_RtTq" WS? SL_COMMENT? NEWLINE;
	public NSIG_RtTqElements getNSIG_RtTqAccess() {
		return (pNSIG_RtTq != null) ? pNSIG_RtTq : (pNSIG_RtTq = new NSIG_RtTqElements());
	}
	
	public ParserRule getNSIG_RtTqRule() {
		return getNSIG_RtTqAccess().getRule();
	}

	//nSIG_PORt hidden():
	//
	//	WS? value=tNUMBER WS name="SIG_PORt" WS? SL_COMMENT? NEWLINE;
	public NSIG_PORtElements getNSIG_PORtAccess() {
		return (pNSIG_PORt != null) ? pNSIG_PORt : (pNSIG_PORt = new NSIG_PORtElements());
	}
	
	public ParserRule getNSIG_PORtRule() {
		return getNSIG_PORtAccess().getRule();
	}

	//nTEC_Freq hidden():
	//
	//	WS? value=tNUMBER WS name="TEC_Freq" WS? SL_COMMENT? NEWLINE;
	public NTEC_FreqElements getNTEC_FreqAccess() {
		return (pNTEC_Freq != null) ? pNTEC_Freq : (pNTEC_Freq = new NTEC_FreqElements());
	}
	
	public ParserRule getNTEC_FreqRule() {
		return getNTEC_FreqAccess().getRule();
	}

	//nTEC_Npol hidden():
	//
	//	WS? value=tNUMBER WS name="TEC_NPol" WS? SL_COMMENT? NEWLINE;
	public NTEC_NpolElements getNTEC_NpolAccess() {
		return (pNTEC_Npol != null) ? pNTEC_Npol : (pNTEC_Npol = new NTEC_NpolElements());
	}
	
	public ParserRule getNTEC_NpolRule() {
		return getNTEC_NpolAccess().getRule();
	}

	//nTEC_Sres hidden():
	//
	//	WS? value=tNUMBER WS name="TEC_SRes" WS? SL_COMMENT? NEWLINE;
	public NTEC_SresElements getNTEC_SresAccess() {
		return (pNTEC_Sres != null) ? pNTEC_Sres : (pNTEC_Sres = new NTEC_SresElements());
	}
	
	public ParserRule getNTEC_SresRule() {
		return getNTEC_SresAccess().getRule();
	}

	//nTEC_Rres hidden():
	//
	//	WS? value=tNUMBER WS name="TEC_RRes" WS? SL_COMMENT? NEWLINE;
	public NTEC_RresElements getNTEC_RresAccess() {
		return (pNTEC_Rres != null) ? pNTEC_Rres : (pNTEC_Rres = new NTEC_RresElements());
	}
	
	public ParserRule getNTEC_RresRule() {
		return getNTEC_RresAccess().getRule();
	}

	//nTEC_VLL hidden():
	//
	//	WS? value=tNUMBER WS name="TEC_VLL" WS? SL_COMMENT? NEWLINE;
	public NTEC_VLLElements getNTEC_VLLAccess() {
		return (pNTEC_VLL != null) ? pNTEC_VLL : (pNTEC_VLL = new NTEC_VLLElements());
	}
	
	public ParserRule getNTEC_VLLRule() {
		return getNTEC_VLLAccess().getRule();
	}

	//nTEC_SLR hidden():
	//
	//	WS? value=tNUMBER WS name="TEC_SLR" WS? SL_COMMENT? NEWLINE;
	public NTEC_SLRElements getNTEC_SLRAccess() {
		return (pNTEC_SLR != null) ? pNTEC_SLR : (pNTEC_SLR = new NTEC_SLRElements());
	}
	
	public ParserRule getNTEC_SLRRule() {
		return getNTEC_SLRAccess().getRule();
	}

	//nTEC_RLR hidden():
	//
	//	WS? value=tNUMBER WS name="TEC_RLR" WS? SL_COMMENT? NEWLINE;
	public NTEC_RLRElements getNTEC_RLRAccess() {
		return (pNTEC_RLR != null) ? pNTEC_RLR : (pNTEC_RLR = new NTEC_RLRElements());
	}
	
	public ParserRule getNTEC_RLRRule() {
		return getNTEC_RLRAccess().getRule();
	}

	//nTEC_MR hidden():
	//
	//	WS? value=tNUMBER WS name="TEC_MR" WS? SL_COMMENT? NEWLINE;
	public NTEC_MRElements getNTEC_MRAccess() {
		return (pNTEC_MR != null) ? pNTEC_MR : (pNTEC_MR = new NTEC_MRElements());
	}
	
	public ParserRule getNTEC_MRRule() {
		return getNTEC_MRAccess().getRule();
	}

	//iPtfmModel hidden():
	//
	//	WS? value=INT WS name="PtfmModel" WS? SL_COMMENT? NEWLINE;
	public IPtfmModelElements getIPtfmModelAccess() {
		return (pIPtfmModel != null) ? pIPtfmModel : (pIPtfmModel = new IPtfmModelElements());
	}
	
	public ParserRule getIPtfmModelRule() {
		return getIPtfmModelAccess().getRule();
	}

	//fPtfmFile hidden():
	//
	//	WS? value=STRING WS name="PtfmFile" WS? SL_COMMENT? NEWLINE;
	public FPtfmFileElements getFPtfmFileAccess() {
		return (pFPtfmFile != null) ? pFPtfmFile : (pFPtfmFile = new FPtfmFileElements());
	}
	
	public ParserRule getFPtfmFileRule() {
		return getFPtfmFileAccess().getRule();
	}

	//iTwrNodes hidden():
	//
	//	WS? value=INT WS name="TwrNodes" WS? SL_COMMENT? NEWLINE;
	public ITwrNodesElements getITwrNodesAccess() {
		return (pITwrNodes != null) ? pITwrNodes : (pITwrNodes = new ITwrNodesElements());
	}
	
	public ParserRule getITwrNodesRule() {
		return getITwrNodesAccess().getRule();
	}

	//fTwrFile hidden():
	//
	//	WS? value=STRING WS name="TwrFile" WS? SL_COMMENT? NEWLINE;
	public FTwrFileElements getFTwrFileAccess() {
		return (pFTwrFile != null) ? pFTwrFile : (pFTwrFile = new FTwrFileElements());
	}
	
	public ParserRule getFTwrFileRule() {
		return getFTwrFileAccess().getRule();
	}

	//nYawSpr hidden():
	//
	//	WS? value=tNUMBER WS name="YawSpr" WS? SL_COMMENT? NEWLINE;
	public NYawSprElements getNYawSprAccess() {
		return (pNYawSpr != null) ? pNYawSpr : (pNYawSpr = new NYawSprElements());
	}
	
	public ParserRule getNYawSprRule() {
		return getNYawSprAccess().getRule();
	}

	//nYawDamp hidden():
	//
	//	WS? value=tNUMBER WS name="YawDamp" WS? SL_COMMENT? NEWLINE;
	public NYawDampElements getNYawDampAccess() {
		return (pNYawDamp != null) ? pNYawDamp : (pNYawDamp = new NYawDampElements());
	}
	
	public ParserRule getNYawDampRule() {
		return getNYawDampAccess().getRule();
	}

	//nYawNeut hidden():
	//
	//	WS? value=tNUMBER WS name="YawNeut" WS? SL_COMMENT? NEWLINE;
	public NYawNeutElements getNYawNeutAccess() {
		return (pNYawNeut != null) ? pNYawNeut : (pNYawNeut = new NYawNeutElements());
	}
	
	public ParserRule getNYawNeutRule() {
		return getNYawNeutAccess().getRule();
	}

	//bFurling hidden():
	//
	//	WS? value=tBOOL WS name="Furling" WS? SL_COMMENT? NEWLINE;
	public BFurlingElements getBFurlingAccess() {
		return (pBFurling != null) ? pBFurling : (pBFurling = new BFurlingElements());
	}
	
	public ParserRule getBFurlingRule() {
		return getBFurlingAccess().getRule();
	}

	//fFurlFile hidden():
	//
	//	WS? value=STRING WS name="FurlFile" WS? SL_COMMENT? NEWLINE;
	public FFurlFileElements getFFurlFileAccess() {
		return (pFFurlFile != null) ? pFFurlFile : (pFFurlFile = new FFurlFileElements());
	}
	
	public ParserRule getFFurlFileRule() {
		return getFFurlFileAccess().getRule();
	}

	//iTeetMod hidden():
	//
	//	WS? value=INT WS name="TeetMod" WS? SL_COMMENT? NEWLINE;
	public ITeetModElements getITeetModAccess() {
		return (pITeetMod != null) ? pITeetMod : (pITeetMod = new ITeetModElements());
	}
	
	public ParserRule getITeetModRule() {
		return getITeetModAccess().getRule();
	}

	//nTeetDmpP hidden():
	//
	//	WS? value=tNUMBER WS name="TeetDmpP" WS? SL_COMMENT? NEWLINE;
	public NTeetDmpPElements getNTeetDmpPAccess() {
		return (pNTeetDmpP != null) ? pNTeetDmpP : (pNTeetDmpP = new NTeetDmpPElements());
	}
	
	public ParserRule getNTeetDmpPRule() {
		return getNTeetDmpPAccess().getRule();
	}

	//nTeetDmp hidden():
	//
	//	WS? value=tNUMBER WS name="TeetDmp" WS? SL_COMMENT? NEWLINE;
	public NTeetDmpElements getNTeetDmpAccess() {
		return (pNTeetDmp != null) ? pNTeetDmp : (pNTeetDmp = new NTeetDmpElements());
	}
	
	public ParserRule getNTeetDmpRule() {
		return getNTeetDmpAccess().getRule();
	}

	//nTeetCDmp hidden():
	//
	//	WS? value=tNUMBER WS name="TeetCDmp" WS? SL_COMMENT? NEWLINE;
	public NTeetCDmpElements getNTeetCDmpAccess() {
		return (pNTeetCDmp != null) ? pNTeetCDmp : (pNTeetCDmp = new NTeetCDmpElements());
	}
	
	public ParserRule getNTeetCDmpRule() {
		return getNTeetCDmpAccess().getRule();
	}

	//nTeetSStP hidden():
	//
	//	WS? value=tNUMBER WS name="TeetSStP" WS? SL_COMMENT? NEWLINE;
	public NTeetSStPElements getNTeetSStPAccess() {
		return (pNTeetSStP != null) ? pNTeetSStP : (pNTeetSStP = new NTeetSStPElements());
	}
	
	public ParserRule getNTeetSStPRule() {
		return getNTeetSStPAccess().getRule();
	}

	//nTeetHStP hidden():
	//
	//	WS? value=tNUMBER WS name="TeetHStP" WS? SL_COMMENT? NEWLINE;
	public NTeetHStPElements getNTeetHStPAccess() {
		return (pNTeetHStP != null) ? pNTeetHStP : (pNTeetHStP = new NTeetHStPElements());
	}
	
	public ParserRule getNTeetHStPRule() {
		return getNTeetHStPAccess().getRule();
	}

	//nTeetSSSp hidden():
	//
	//	WS? value=tNUMBER WS name="TeetSSSp" WS? SL_COMMENT? NEWLINE;
	public NTeetSSSpElements getNTeetSSSpAccess() {
		return (pNTeetSSSp != null) ? pNTeetSSSp : (pNTeetSSSp = new NTeetSSSpElements());
	}
	
	public ParserRule getNTeetSSSpRule() {
		return getNTeetSSSpAccess().getRule();
	}

	//nTeetHSSp hidden():
	//
	//	WS? value=tNUMBER WS name="TeetHSSp" WS? SL_COMMENT? NEWLINE;
	public NTeetHSSpElements getNTeetHSSpAccess() {
		return (pNTeetHSSp != null) ? pNTeetHSSp : (pNTeetHSSp = new NTeetHSSpElements());
	}
	
	public ParserRule getNTeetHSSpRule() {
		return getNTeetHSSpAccess().getRule();
	}

	//nTBDrConN hidden():
	//
	//	WS? value=tNUMBER WS name="TBDrConN" WS? SL_COMMENT? NEWLINE;
	public NTBDrConNElements getNTBDrConNAccess() {
		return (pNTBDrConN != null) ? pNTBDrConN : (pNTBDrConN = new NTBDrConNElements());
	}
	
	public ParserRule getNTBDrConNRule() {
		return getNTBDrConNAccess().getRule();
	}

	//nTBDrConD hidden():
	//
	//	WS? value=tNUMBER WS name="TBDrConD" WS? SL_COMMENT? NEWLINE;
	public NTBDrConDElements getNTBDrConDAccess() {
		return (pNTBDrConD != null) ? pNTBDrConD : (pNTBDrConD = new NTBDrConDElements());
	}
	
	public ParserRule getNTBDrConDRule() {
		return getNTBDrConDAccess().getRule();
	}

	//nTpBrDT hidden():
	//
	//	WS? value=tNUMBER WS name="TpBrDT" WS? SL_COMMENT? NEWLINE;
	public NTpBrDTElements getNTpBrDTAccess() {
		return (pNTpBrDT != null) ? pNTpBrDT : (pNTpBrDT = new NTpBrDTElements());
	}
	
	public ParserRule getNTpBrDTRule() {
		return getNTpBrDTAccess().getRule();
	}

	//fBldFile_1_ hidden():
	//
	//	WS? value=STRING WS name="BldFile(1)" WS? SL_COMMENT? NEWLINE;
	public FBldFile_1_Elements getFBldFile_1_Access() {
		return (pFBldFile_1_ != null) ? pFBldFile_1_ : (pFBldFile_1_ = new FBldFile_1_Elements());
	}
	
	public ParserRule getFBldFile_1_Rule() {
		return getFBldFile_1_Access().getRule();
	}

	//fBldFile_2_ hidden():
	//
	//	WS? value=STRING WS name="BldFile(2)" WS? SL_COMMENT? NEWLINE;
	public FBldFile_2_Elements getFBldFile_2_Access() {
		return (pFBldFile_2_ != null) ? pFBldFile_2_ : (pFBldFile_2_ = new FBldFile_2_Elements());
	}
	
	public ParserRule getFBldFile_2_Rule() {
		return getFBldFile_2_Access().getRule();
	}

	//fBldFile_3_ hidden():
	//
	//	WS? value=STRING WS name="BldFile(3)" WS? SL_COMMENT? NEWLINE;
	public FBldFile_3_Elements getFBldFile_3_Access() {
		return (pFBldFile_3_ != null) ? pFBldFile_3_ : (pFBldFile_3_ = new FBldFile_3_Elements());
	}
	
	public ParserRule getFBldFile_3_Rule() {
		return getFBldFile_3_Access().getRule();
	}

	//fADFile hidden():
	//
	//	WS? value=STRING WS name="ADFile" WS? SL_COMMENT? NEWLINE;
	public FADFileElements getFADFileAccess() {
		return (pFADFile != null) ? pFADFile : (pFADFile = new FADFileElements());
	}
	
	public ParserRule getFADFileRule() {
		return getFADFileAccess().getRule();
	}

	//fNoiseFile hidden():
	//
	//	WS? value=STRING WS name="NoiseFile" WS? SL_COMMENT? NEWLINE;
	public FNoiseFileElements getFNoiseFileAccess() {
		return (pFNoiseFile != null) ? pFNoiseFile : (pFNoiseFile = new FNoiseFileElements());
	}
	
	public ParserRule getFNoiseFileRule() {
		return getFNoiseFileAccess().getRule();
	}

	//fADAMSFile hidden():
	//
	//	WS? value=STRING WS name="ADAMSFile" WS? SL_COMMENT? NEWLINE;
	public FADAMSFileElements getFADAMSFileAccess() {
		return (pFADAMSFile != null) ? pFADAMSFile : (pFADAMSFile = new FADAMSFileElements());
	}
	
	public ParserRule getFADAMSFileRule() {
		return getFADAMSFileAccess().getRule();
	}

	//fLinFile hidden():
	//
	//	WS? value=STRING WS name="LinFile" WS? SL_COMMENT? NEWLINE;
	public FLinFileElements getFLinFileAccess() {
		return (pFLinFile != null) ? pFLinFile : (pFLinFile = new FLinFileElements());
	}
	
	public ParserRule getFLinFileRule() {
		return getFLinFileAccess().getRule();
	}

	//bSumPrint hidden():
	//
	//	WS? value=tBOOL WS name="SumPrint" WS? SL_COMMENT? NEWLINE;
	public BSumPrintElements getBSumPrintAccess() {
		return (pBSumPrint != null) ? pBSumPrint : (pBSumPrint = new BSumPrintElements());
	}
	
	public ParserRule getBSumPrintRule() {
		return getBSumPrintAccess().getRule();
	}

	//// from FAST 7.00.00
	//
	//bOutFileFmt hidden():
	//
	//	WS? value=tNUMBER WS name="OutFileFmt" WS? SL_COMMENT? NEWLINE;
	public BOutFileFmtElements getBOutFileFmtAccess() {
		return (pBOutFileFmt != null) ? pBOutFileFmt : (pBOutFileFmt = new BOutFileFmtElements());
	}
	
	public ParserRule getBOutFileFmtRule() {
		return getBOutFileFmtAccess().getRule();
	}

	//bTabDelim hidden():
	//
	//	WS? value=tBOOL WS name="TabDelim" WS? SL_COMMENT? NEWLINE;
	public BTabDelimElements getBTabDelimAccess() {
		return (pBTabDelim != null) ? pBTabDelim : (pBTabDelim = new BTabDelimElements());
	}
	
	public ParserRule getBTabDelimRule() {
		return getBTabDelimAccess().getRule();
	}

	//sOutFmt hidden():
	//
	//	WS? value=FORMAT WS name="OutFmt" WS? SL_COMMENT? NEWLINE;
	public SOutFmtElements getSOutFmtAccess() {
		return (pSOutFmt != null) ? pSOutFmt : (pSOutFmt = new SOutFmtElements());
	}
	
	public ParserRule getSOutFmtRule() {
		return getSOutFmtAccess().getRule();
	}

	//nTStart hidden():
	//
	//	WS? value=tNUMBER WS name="TStart" WS? SL_COMMENT? NEWLINE;
	public NTStartElements getNTStartAccess() {
		return (pNTStart != null) ? pNTStart : (pNTStart = new NTStartElements());
	}
	
	public ParserRule getNTStartRule() {
		return getNTStartAccess().getRule();
	}

	//iDecFact hidden():
	//
	//	WS? value=INT WS name="DecFact" WS? SL_COMMENT? NEWLINE;
	public IDecFactElements getIDecFactAccess() {
		return (pIDecFact != null) ? pIDecFact : (pIDecFact = new IDecFactElements());
	}
	
	public ParserRule getIDecFactRule() {
		return getIDecFactAccess().getRule();
	}

	//nSttsTime hidden():
	//
	//	WS? value=tNUMBER WS name="SttsTime" WS? SL_COMMENT? NEWLINE;
	public NSttsTimeElements getNSttsTimeAccess() {
		return (pNSttsTime != null) ? pNSttsTime : (pNSttsTime = new NSttsTimeElements());
	}
	
	public ParserRule getNSttsTimeRule() {
		return getNSttsTimeAccess().getRule();
	}

	//nNcIMUxn hidden():
	//
	//	WS? value=tNUMBER WS name="NcIMUxn" WS? SL_COMMENT? NEWLINE;
	public NNcIMUxnElements getNNcIMUxnAccess() {
		return (pNNcIMUxn != null) ? pNNcIMUxn : (pNNcIMUxn = new NNcIMUxnElements());
	}
	
	public ParserRule getNNcIMUxnRule() {
		return getNNcIMUxnAccess().getRule();
	}

	//nNcIMUyn hidden():
	//
	//	WS? value=tNUMBER WS name="NcIMUyn" WS? SL_COMMENT? NEWLINE;
	public NNcIMUynElements getNNcIMUynAccess() {
		return (pNNcIMUyn != null) ? pNNcIMUyn : (pNNcIMUyn = new NNcIMUynElements());
	}
	
	public ParserRule getNNcIMUynRule() {
		return getNNcIMUynAccess().getRule();
	}

	//nNcIMUzn hidden():
	//
	//	WS? value=tNUMBER WS name="NcIMUzn" WS? SL_COMMENT? NEWLINE;
	public NNcIMUznElements getNNcIMUznAccess() {
		return (pNNcIMUzn != null) ? pNNcIMUzn : (pNNcIMUzn = new NNcIMUznElements());
	}
	
	public ParserRule getNNcIMUznRule() {
		return getNNcIMUznAccess().getRule();
	}

	//nShftGagL hidden():
	//
	//	WS? value=tNUMBER WS name="ShftGagL" WS? SL_COMMENT? NEWLINE;
	public NShftGagLElements getNShftGagLAccess() {
		return (pNShftGagL != null) ? pNShftGagL : (pNShftGagL = new NShftGagLElements());
	}
	
	public ParserRule getNShftGagLRule() {
		return getNShftGagLAccess().getRule();
	}

	//iNTwGages hidden():
	//
	//	WS? value=INT WS name="NTwGages" WS? SL_COMMENT? NEWLINE;
	public INTwGagesElements getINTwGagesAccess() {
		return (pINTwGages != null) ? pINTwGages : (pINTwGages = new INTwGagesElements());
	}
	
	public ParserRule getINTwGagesRule() {
		return getINTwGagesAccess().getRule();
	}

	//aTwrGagNd hidden():
	//
	//	WS? value=tARRAY_INT WS name="TwrGagNd" WS? SL_COMMENT? NEWLINE;
	public ATwrGagNdElements getATwrGagNdAccess() {
		return (pATwrGagNd != null) ? pATwrGagNd : (pATwrGagNd = new ATwrGagNdElements());
	}
	
	public ParserRule getATwrGagNdRule() {
		return getATwrGagNdAccess().getRule();
	}

	//iNBlGages hidden():
	//
	//	WS? value=INT WS name="NBlGages" WS? SL_COMMENT? NEWLINE;
	public INBlGagesElements getINBlGagesAccess() {
		return (pINBlGages != null) ? pINBlGages : (pINBlGages = new INBlGagesElements());
	}
	
	public ParserRule getINBlGagesRule() {
		return getINBlGagesAccess().getRule();
	}

	//aBldGagNd hidden():
	//
	//	WS? value=tARRAY_INT WS name="BldGagNd" WS? SL_COMMENT? NEWLINE;
	public ABldGagNdElements getABldGagNdAccess() {
		return (pABldGagNd != null) ? pABldGagNd : (pABldGagNd = new ABldGagNdElements());
	}
	
	public ParserRule getABldGagNdRule() {
		return getABldGagNdAccess().getRule();
	}

	//vOutList hidden():
	//
	//	WS? name="OutList" WS? SL_COMMENT? NEWLINE //('"' WS? value+=OUT_CH WS? (',' WS? value+=OUT_CH WS?)* '"' WS? SL_COMMENT? NEWLINE )+;
	//
	//	value=tARRAY_STR;
	public VOutListElements getVOutListAccess() {
		return (pVOutList != null) ? pVOutList : (pVOutList = new VOutListElements());
	}
	
	public ParserRule getVOutListRule() {
		return getVOutListAccess().getRule();
	}
}
