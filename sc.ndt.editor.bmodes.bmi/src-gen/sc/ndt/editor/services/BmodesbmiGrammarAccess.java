/*
* generated by Xtext
*/
package sc.ndt.editor.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class BmodesbmiGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelBmodesbmiElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelBmodesbmi");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cHeadAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cHeadHeaderParserRuleCall_0_0 = (RuleCall)cHeadAssignment_0.eContents().get(0);
		private final Assignment cSecAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSecSectionParserRuleCall_1_0 = (RuleCall)cSecAssignment_1.eContents().get(0);
		private final Assignment cEchoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEchoBEchoParserRuleCall_2_0 = (RuleCall)cEchoAssignment_2.eContents().get(0);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeIBeamTypeParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Assignment cInfModelAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInfModelNRotRpmParserRuleCall_4_0 = (RuleCall)cInfModelAssignment_4.eContents().get(0);
		private final Assignment cIndModelAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIndModelNRpmMultParserRuleCall_5_0 = (RuleCall)cIndModelAssignment_5.eContents().get(0);
		private final Assignment cAtolerAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAtolerNRadiusParserRuleCall_6_0 = (RuleCall)cAtolerAssignment_6.eContents().get(0);
		private final Assignment cTLModelAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTLModelNHubRadParserRuleCall_7_0 = (RuleCall)cTLModelAssignment_7.eContents().get(0);
		private final Assignment cHLModelAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cHLModelNPreconeParserRuleCall_8_0 = (RuleCall)cHLModelAssignment_8.eContents().get(0);
		private final Assignment cBlThpAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cBlThpNBlThpParserRuleCall_9_0 = (RuleCall)cBlThpAssignment_9.eContents().get(0);
		private final Assignment cHubConnAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cHubConnIHubConnParserRuleCall_10_0 = (RuleCall)cHubConnAssignment_10.eContents().get(0);
		private final Assignment cModePrAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cModePrIModePrParserRuleCall_11_0 = (RuleCall)cModePrAssignment_11.eContents().get(0);
		private final Assignment cTabDelimAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cTabDelimBTabDelimParserRuleCall_12_0 = (RuleCall)cTabDelimAssignment_12.eContents().get(0);
		private final Assignment cMidNodeTwAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cMidNodeTwBMidNodeTwParserRuleCall_13_0 = (RuleCall)cMidNodeTwAssignment_13.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_14 = (RuleCall)cGroup.eContents().get(14);
		private final Assignment cSecAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cSecSectionParserRuleCall_15_0 = (RuleCall)cSecAssignment_15.eContents().get(0);
		private final Assignment cTipMassAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cTipMassNTipMassParserRuleCall_16_0 = (RuleCall)cTipMassAssignment_16.eContents().get(0);
		private final Assignment cCmLocAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cCmLocNCmLocParserRuleCall_17_0 = (RuleCall)cCmLocAssignment_17.eContents().get(0);
		private final Assignment cCmAxialAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cCmAxialNCmAxialParserRuleCall_18_0 = (RuleCall)cCmAxialAssignment_18.eContents().get(0);
		private final Assignment cIxxTipAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cIxxTipNIxxTipParserRuleCall_19_0 = (RuleCall)cIxxTipAssignment_19.eContents().get(0);
		private final Assignment cIyyTipAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cIyyTipNIyyTipParserRuleCall_20_0 = (RuleCall)cIyyTipAssignment_20.eContents().get(0);
		private final Assignment cIzzTipAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cIzzTipNIzzTipParserRuleCall_21_0 = (RuleCall)cIzzTipAssignment_21.eContents().get(0);
		private final Assignment cIxyTipAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cIxyTipNIxyTipParserRuleCall_22_0 = (RuleCall)cIxyTipAssignment_22.eContents().get(0);
		private final Assignment cIzxTipAssignment_23 = (Assignment)cGroup.eContents().get(23);
		private final RuleCall cIzxTipNIzxTipParserRuleCall_23_0 = (RuleCall)cIzxTipAssignment_23.eContents().get(0);
		private final Assignment cIyzTipAssignment_24 = (Assignment)cGroup.eContents().get(24);
		private final RuleCall cIyzTipNIyzTipParserRuleCall_24_0 = (RuleCall)cIyzTipAssignment_24.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_25 = (RuleCall)cGroup.eContents().get(25);
		private final Assignment cSecAssignment_26 = (Assignment)cGroup.eContents().get(26);
		private final RuleCall cSecSectionParserRuleCall_26_0 = (RuleCall)cSecAssignment_26.eContents().get(0);
		private final Assignment cIdMatAssignment_27 = (Assignment)cGroup.eContents().get(27);
		private final RuleCall cIdMatIIdMatParserRuleCall_27_0 = (RuleCall)cIdMatAssignment_27.eContents().get(0);
		private final Assignment cSecFileAssignment_28 = (Assignment)cGroup.eContents().get(28);
		private final RuleCall cSecFileISecFileParserRuleCall_28_0 = (RuleCall)cSecFileAssignment_28.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_29 = (RuleCall)cGroup.eContents().get(29);
		private final Assignment cSecAssignment_30 = (Assignment)cGroup.eContents().get(30);
		private final RuleCall cSecSectionParserRuleCall_30_0 = (RuleCall)cSecAssignment_30.eContents().get(0);
		private final Assignment cSecMasMultAssignment_31 = (Assignment)cGroup.eContents().get(31);
		private final RuleCall cSecMasMultNSecMasMultParserRuleCall_31_0 = (RuleCall)cSecMasMultAssignment_31.eContents().get(0);
		private final Assignment cFlpInrMultAssignment_32 = (Assignment)cGroup.eContents().get(32);
		private final RuleCall cFlpInrMultNFlpInrMultParserRuleCall_32_0 = (RuleCall)cFlpInrMultAssignment_32.eContents().get(0);
		private final Assignment cLagInrMultAssignment_33 = (Assignment)cGroup.eContents().get(33);
		private final RuleCall cLagInrMultNLagInrMultParserRuleCall_33_0 = (RuleCall)cLagInrMultAssignment_33.eContents().get(0);
		private final Assignment cFlpstfMultAssignment_34 = (Assignment)cGroup.eContents().get(34);
		private final RuleCall cFlpstfMultNFlpstfMultParserRuleCall_34_0 = (RuleCall)cFlpstfMultAssignment_34.eContents().get(0);
		private final Assignment cEdgStfMultAssignment_35 = (Assignment)cGroup.eContents().get(35);
		private final RuleCall cEdgStfMultNEdgStfMultParserRuleCall_35_0 = (RuleCall)cEdgStfMultAssignment_35.eContents().get(0);
		private final Assignment cTorStfMultAssignment_36 = (Assignment)cGroup.eContents().get(36);
		private final RuleCall cTorStfMultNTorStfMultParserRuleCall_36_0 = (RuleCall)cTorStfMultAssignment_36.eContents().get(0);
		private final Assignment cAxiStfMultAssignment_37 = (Assignment)cGroup.eContents().get(37);
		private final RuleCall cAxiStfMultNAxiStfMultParserRuleCall_37_0 = (RuleCall)cAxiStfMultAssignment_37.eContents().get(0);
		private final Assignment cCgOffsMultAssignment_38 = (Assignment)cGroup.eContents().get(38);
		private final RuleCall cCgOffsMultNCgOffsMultParserRuleCall_38_0 = (RuleCall)cCgOffsMultAssignment_38.eContents().get(0);
		private final Assignment cScOffsMultAssignment_39 = (Assignment)cGroup.eContents().get(39);
		private final RuleCall cScOffsMultNScOffsMultParserRuleCall_39_0 = (RuleCall)cScOffsMultAssignment_39.eContents().get(0);
		private final Assignment cTcOffsMultAssignment_40 = (Assignment)cGroup.eContents().get(40);
		private final RuleCall cTcOffsMultNTcOffsMultParserRuleCall_40_0 = (RuleCall)cTcOffsMultAssignment_40.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_41 = (RuleCall)cGroup.eContents().get(41);
		private final Assignment cSecAssignment_42 = (Assignment)cGroup.eContents().get(42);
		private final RuleCall cSecSectionParserRuleCall_42_0 = (RuleCall)cSecAssignment_42.eContents().get(0);
		private final Assignment cNSeltAssignment_43 = (Assignment)cGroup.eContents().get(43);
		private final RuleCall cNSeltINSeltParserRuleCall_43_0 = (RuleCall)cNSeltAssignment_43.eContents().get(0);
		private final Assignment cSecAssignment_44 = (Assignment)cGroup.eContents().get(44);
		private final RuleCall cSecSectionParserRuleCall_44_0 = (RuleCall)cSecAssignment_44.eContents().get(0);
		private final Assignment cElLocAssignment_45 = (Assignment)cGroup.eContents().get(45);
		private final RuleCall cElLocAElLocParserRuleCall_45_0 = (RuleCall)cElLocAssignment_45.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_46 = (RuleCall)cGroup.eContents().get(46);
		private final Assignment cSecAssignment_47 = (Assignment)cGroup.eContents().get(47);
		private final RuleCall cSecSectionParserRuleCall_47_0 = (RuleCall)cSecAssignment_47.eContents().get(0);
		private final Assignment cTwrSupportAssignment_48 = (Assignment)cGroup.eContents().get(48);
		private final RuleCall cTwrSupportITwrSupportParserRuleCall_48_0 = (RuleCall)cTwrSupportAssignment_48.eContents().get(0);
		private final Assignment cSecAssignment_49 = (Assignment)cGroup.eContents().get(49);
		private final RuleCall cSecSectionParserRuleCall_49_0 = (RuleCall)cSecAssignment_49.eContents().get(0);
		private final Assignment cTwrAttachAssignment_50 = (Assignment)cGroup.eContents().get(50);
		private final RuleCall cTwrAttachITwrAttachParserRuleCall_50_0 = (RuleCall)cTwrAttachAssignment_50.eContents().get(0);
		private final Assignment cTwrWiresAssignment_51 = (Assignment)cGroup.eContents().get(51);
		private final RuleCall cTwrWiresATwrWiresParserRuleCall_51_0 = (RuleCall)cTwrWiresAssignment_51.eContents().get(0);
		private final Assignment cNodeAttachAssignment_52 = (Assignment)cGroup.eContents().get(52);
		private final RuleCall cNodeAttachANodeAttachParserRuleCall_52_0 = (RuleCall)cNodeAttachAssignment_52.eContents().get(0);
		private final Assignment cWireStiffAssignment_53 = (Assignment)cGroup.eContents().get(53);
		private final RuleCall cWireStiffAWireStiffParserRuleCall_53_0 = (RuleCall)cWireStiffAssignment_53.eContents().get(0);
		private final Assignment cWireAngleAssignment_54 = (Assignment)cGroup.eContents().get(54);
		private final RuleCall cWireAngleAWireAngleParserRuleCall_54_0 = (RuleCall)cWireAngleAssignment_54.eContents().get(0);
		private final Alternatives cAlternatives_55 = (Alternatives)cGroup.eContents().get(55);
		private final RuleCall cWSTerminalRuleCall_55_0 = (RuleCall)cAlternatives_55.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_55_1 = (RuleCall)cAlternatives_55.eContents().get(1);
		private final RuleCall cSL_COMMENTTerminalRuleCall_55_2 = (RuleCall)cAlternatives_55.eContents().get(2);
		
		//ModelBmodesbmi:
		//	Head=Header sec+=Section Echo=bEcho type=iBeamType InfModel=nRotRpm IndModel=nRpmMult Atoler=nRadius TLModel=nHubRad
		//	HLModel=nPrecone BlThp=nBlThp HubConn=iHubConn ModePr=iModePr TabDelim=bTabDelim MidNodeTw=bMidNodeTw NEWLINE
		//	sec+=Section TipMass=nTipMass CmLoc=nCmLoc CmAxial=nCmAxial IxxTip=nIxxTip IyyTip=nIyyTip IzzTip=nIzzTip
		//	IxyTip=nIxyTip IzxTip=nIzxTip IyzTip=nIyzTip NEWLINE sec+=Section IdMat=iIdMat SecFile=iSecFile NEWLINE sec+=Section
		//	SecMasMult=nSecMasMult FlpInrMult=nFlpInrMult LagInrMult=nLagInrMult FlpstfMult=nFlpstfMult EdgStfMult=nEdgStfMult
		//	TorStfMult=nTorStfMult AxiStfMult=nAxiStfMult CgOffsMult=nCgOffsMult ScOffsMult=nScOffsMult TcOffsMult=nTcOffsMult
		//	NEWLINE sec+=Section NSelt=iNSelt sec+=Section ElLoc=aElLoc NEWLINE sec+=Section TwrSupport=iTwrSupport sec+=Section
		//	TwrAttach=iTwrAttach TwrWires=aTwrWires NodeAttach=aNodeAttach WireStiff=aWireStiff WireAngle=aWireAngle (WS | NEWLINE
		//	| SL_COMMENT)*;
		public ParserRule getRule() { return rule; }

		//Head=Header sec+=Section Echo=bEcho type=iBeamType InfModel=nRotRpm IndModel=nRpmMult Atoler=nRadius TLModel=nHubRad
		//HLModel=nPrecone BlThp=nBlThp HubConn=iHubConn ModePr=iModePr TabDelim=bTabDelim MidNodeTw=bMidNodeTw NEWLINE
		//sec+=Section TipMass=nTipMass CmLoc=nCmLoc CmAxial=nCmAxial IxxTip=nIxxTip IyyTip=nIyyTip IzzTip=nIzzTip IxyTip=nIxyTip
		//IzxTip=nIzxTip IyzTip=nIyzTip NEWLINE sec+=Section IdMat=iIdMat SecFile=iSecFile NEWLINE sec+=Section
		//SecMasMult=nSecMasMult FlpInrMult=nFlpInrMult LagInrMult=nLagInrMult FlpstfMult=nFlpstfMult EdgStfMult=nEdgStfMult
		//TorStfMult=nTorStfMult AxiStfMult=nAxiStfMult CgOffsMult=nCgOffsMult ScOffsMult=nScOffsMult TcOffsMult=nTcOffsMult
		//NEWLINE sec+=Section NSelt=iNSelt sec+=Section ElLoc=aElLoc NEWLINE sec+=Section TwrSupport=iTwrSupport sec+=Section
		//TwrAttach=iTwrAttach TwrWires=aTwrWires NodeAttach=aNodeAttach WireStiff=aWireStiff WireAngle=aWireAngle (WS | NEWLINE
		//| SL_COMMENT)*
		public Group getGroup() { return cGroup; }

		//Head=Header
		public Assignment getHeadAssignment_0() { return cHeadAssignment_0; }

		//Header
		public RuleCall getHeadHeaderParserRuleCall_0_0() { return cHeadHeaderParserRuleCall_0_0; }

		//sec+=Section
		public Assignment getSecAssignment_1() { return cSecAssignment_1; }

		//Section
		public RuleCall getSecSectionParserRuleCall_1_0() { return cSecSectionParserRuleCall_1_0; }

		//Echo=bEcho
		public Assignment getEchoAssignment_2() { return cEchoAssignment_2; }

		//bEcho
		public RuleCall getEchoBEchoParserRuleCall_2_0() { return cEchoBEchoParserRuleCall_2_0; }

		//type=iBeamType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//iBeamType
		public RuleCall getTypeIBeamTypeParserRuleCall_3_0() { return cTypeIBeamTypeParserRuleCall_3_0; }

		//InfModel=nRotRpm
		public Assignment getInfModelAssignment_4() { return cInfModelAssignment_4; }

		//nRotRpm
		public RuleCall getInfModelNRotRpmParserRuleCall_4_0() { return cInfModelNRotRpmParserRuleCall_4_0; }

		//IndModel=nRpmMult
		public Assignment getIndModelAssignment_5() { return cIndModelAssignment_5; }

		//nRpmMult
		public RuleCall getIndModelNRpmMultParserRuleCall_5_0() { return cIndModelNRpmMultParserRuleCall_5_0; }

		//Atoler=nRadius
		public Assignment getAtolerAssignment_6() { return cAtolerAssignment_6; }

		//nRadius
		public RuleCall getAtolerNRadiusParserRuleCall_6_0() { return cAtolerNRadiusParserRuleCall_6_0; }

		//TLModel=nHubRad
		public Assignment getTLModelAssignment_7() { return cTLModelAssignment_7; }

		//nHubRad
		public RuleCall getTLModelNHubRadParserRuleCall_7_0() { return cTLModelNHubRadParserRuleCall_7_0; }

		//HLModel=nPrecone
		public Assignment getHLModelAssignment_8() { return cHLModelAssignment_8; }

		//nPrecone
		public RuleCall getHLModelNPreconeParserRuleCall_8_0() { return cHLModelNPreconeParserRuleCall_8_0; }

		//BlThp=nBlThp
		public Assignment getBlThpAssignment_9() { return cBlThpAssignment_9; }

		//nBlThp
		public RuleCall getBlThpNBlThpParserRuleCall_9_0() { return cBlThpNBlThpParserRuleCall_9_0; }

		//HubConn=iHubConn
		public Assignment getHubConnAssignment_10() { return cHubConnAssignment_10; }

		//iHubConn
		public RuleCall getHubConnIHubConnParserRuleCall_10_0() { return cHubConnIHubConnParserRuleCall_10_0; }

		//ModePr=iModePr
		public Assignment getModePrAssignment_11() { return cModePrAssignment_11; }

		//iModePr
		public RuleCall getModePrIModePrParserRuleCall_11_0() { return cModePrIModePrParserRuleCall_11_0; }

		//TabDelim=bTabDelim
		public Assignment getTabDelimAssignment_12() { return cTabDelimAssignment_12; }

		//bTabDelim
		public RuleCall getTabDelimBTabDelimParserRuleCall_12_0() { return cTabDelimBTabDelimParserRuleCall_12_0; }

		//MidNodeTw=bMidNodeTw
		public Assignment getMidNodeTwAssignment_13() { return cMidNodeTwAssignment_13; }

		//bMidNodeTw
		public RuleCall getMidNodeTwBMidNodeTwParserRuleCall_13_0() { return cMidNodeTwBMidNodeTwParserRuleCall_13_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_14() { return cNEWLINETerminalRuleCall_14; }

		//sec+=Section
		public Assignment getSecAssignment_15() { return cSecAssignment_15; }

		//Section
		public RuleCall getSecSectionParserRuleCall_15_0() { return cSecSectionParserRuleCall_15_0; }

		//TipMass=nTipMass
		public Assignment getTipMassAssignment_16() { return cTipMassAssignment_16; }

		//nTipMass
		public RuleCall getTipMassNTipMassParserRuleCall_16_0() { return cTipMassNTipMassParserRuleCall_16_0; }

		//CmLoc=nCmLoc
		public Assignment getCmLocAssignment_17() { return cCmLocAssignment_17; }

		//nCmLoc
		public RuleCall getCmLocNCmLocParserRuleCall_17_0() { return cCmLocNCmLocParserRuleCall_17_0; }

		//CmAxial=nCmAxial
		public Assignment getCmAxialAssignment_18() { return cCmAxialAssignment_18; }

		//nCmAxial
		public RuleCall getCmAxialNCmAxialParserRuleCall_18_0() { return cCmAxialNCmAxialParserRuleCall_18_0; }

		//IxxTip=nIxxTip
		public Assignment getIxxTipAssignment_19() { return cIxxTipAssignment_19; }

		//nIxxTip
		public RuleCall getIxxTipNIxxTipParserRuleCall_19_0() { return cIxxTipNIxxTipParserRuleCall_19_0; }

		//IyyTip=nIyyTip
		public Assignment getIyyTipAssignment_20() { return cIyyTipAssignment_20; }

		//nIyyTip
		public RuleCall getIyyTipNIyyTipParserRuleCall_20_0() { return cIyyTipNIyyTipParserRuleCall_20_0; }

		//IzzTip=nIzzTip
		public Assignment getIzzTipAssignment_21() { return cIzzTipAssignment_21; }

		//nIzzTip
		public RuleCall getIzzTipNIzzTipParserRuleCall_21_0() { return cIzzTipNIzzTipParserRuleCall_21_0; }

		//IxyTip=nIxyTip
		public Assignment getIxyTipAssignment_22() { return cIxyTipAssignment_22; }

		//nIxyTip
		public RuleCall getIxyTipNIxyTipParserRuleCall_22_0() { return cIxyTipNIxyTipParserRuleCall_22_0; }

		//IzxTip=nIzxTip
		public Assignment getIzxTipAssignment_23() { return cIzxTipAssignment_23; }

		//nIzxTip
		public RuleCall getIzxTipNIzxTipParserRuleCall_23_0() { return cIzxTipNIzxTipParserRuleCall_23_0; }

		//IyzTip=nIyzTip
		public Assignment getIyzTipAssignment_24() { return cIyzTipAssignment_24; }

		//nIyzTip
		public RuleCall getIyzTipNIyzTipParserRuleCall_24_0() { return cIyzTipNIyzTipParserRuleCall_24_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_25() { return cNEWLINETerminalRuleCall_25; }

		//sec+=Section
		public Assignment getSecAssignment_26() { return cSecAssignment_26; }

		//Section
		public RuleCall getSecSectionParserRuleCall_26_0() { return cSecSectionParserRuleCall_26_0; }

		//IdMat=iIdMat
		public Assignment getIdMatAssignment_27() { return cIdMatAssignment_27; }

		//iIdMat
		public RuleCall getIdMatIIdMatParserRuleCall_27_0() { return cIdMatIIdMatParserRuleCall_27_0; }

		//SecFile=iSecFile
		public Assignment getSecFileAssignment_28() { return cSecFileAssignment_28; }

		//iSecFile
		public RuleCall getSecFileISecFileParserRuleCall_28_0() { return cSecFileISecFileParserRuleCall_28_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_29() { return cNEWLINETerminalRuleCall_29; }

		//sec+=Section
		public Assignment getSecAssignment_30() { return cSecAssignment_30; }

		//Section
		public RuleCall getSecSectionParserRuleCall_30_0() { return cSecSectionParserRuleCall_30_0; }

		//SecMasMult=nSecMasMult
		public Assignment getSecMasMultAssignment_31() { return cSecMasMultAssignment_31; }

		//nSecMasMult
		public RuleCall getSecMasMultNSecMasMultParserRuleCall_31_0() { return cSecMasMultNSecMasMultParserRuleCall_31_0; }

		//FlpInrMult=nFlpInrMult
		public Assignment getFlpInrMultAssignment_32() { return cFlpInrMultAssignment_32; }

		//nFlpInrMult
		public RuleCall getFlpInrMultNFlpInrMultParserRuleCall_32_0() { return cFlpInrMultNFlpInrMultParserRuleCall_32_0; }

		//LagInrMult=nLagInrMult
		public Assignment getLagInrMultAssignment_33() { return cLagInrMultAssignment_33; }

		//nLagInrMult
		public RuleCall getLagInrMultNLagInrMultParserRuleCall_33_0() { return cLagInrMultNLagInrMultParserRuleCall_33_0; }

		//FlpstfMult=nFlpstfMult
		public Assignment getFlpstfMultAssignment_34() { return cFlpstfMultAssignment_34; }

		//nFlpstfMult
		public RuleCall getFlpstfMultNFlpstfMultParserRuleCall_34_0() { return cFlpstfMultNFlpstfMultParserRuleCall_34_0; }

		//EdgStfMult=nEdgStfMult
		public Assignment getEdgStfMultAssignment_35() { return cEdgStfMultAssignment_35; }

		//nEdgStfMult
		public RuleCall getEdgStfMultNEdgStfMultParserRuleCall_35_0() { return cEdgStfMultNEdgStfMultParserRuleCall_35_0; }

		//TorStfMult=nTorStfMult
		public Assignment getTorStfMultAssignment_36() { return cTorStfMultAssignment_36; }

		//nTorStfMult
		public RuleCall getTorStfMultNTorStfMultParserRuleCall_36_0() { return cTorStfMultNTorStfMultParserRuleCall_36_0; }

		//AxiStfMult=nAxiStfMult
		public Assignment getAxiStfMultAssignment_37() { return cAxiStfMultAssignment_37; }

		//nAxiStfMult
		public RuleCall getAxiStfMultNAxiStfMultParserRuleCall_37_0() { return cAxiStfMultNAxiStfMultParserRuleCall_37_0; }

		//CgOffsMult=nCgOffsMult
		public Assignment getCgOffsMultAssignment_38() { return cCgOffsMultAssignment_38; }

		//nCgOffsMult
		public RuleCall getCgOffsMultNCgOffsMultParserRuleCall_38_0() { return cCgOffsMultNCgOffsMultParserRuleCall_38_0; }

		//ScOffsMult=nScOffsMult
		public Assignment getScOffsMultAssignment_39() { return cScOffsMultAssignment_39; }

		//nScOffsMult
		public RuleCall getScOffsMultNScOffsMultParserRuleCall_39_0() { return cScOffsMultNScOffsMultParserRuleCall_39_0; }

		//TcOffsMult=nTcOffsMult
		public Assignment getTcOffsMultAssignment_40() { return cTcOffsMultAssignment_40; }

		//nTcOffsMult
		public RuleCall getTcOffsMultNTcOffsMultParserRuleCall_40_0() { return cTcOffsMultNTcOffsMultParserRuleCall_40_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_41() { return cNEWLINETerminalRuleCall_41; }

		//sec+=Section
		public Assignment getSecAssignment_42() { return cSecAssignment_42; }

		//Section
		public RuleCall getSecSectionParserRuleCall_42_0() { return cSecSectionParserRuleCall_42_0; }

		//NSelt=iNSelt
		public Assignment getNSeltAssignment_43() { return cNSeltAssignment_43; }

		//iNSelt
		public RuleCall getNSeltINSeltParserRuleCall_43_0() { return cNSeltINSeltParserRuleCall_43_0; }

		//sec+=Section
		public Assignment getSecAssignment_44() { return cSecAssignment_44; }

		//Section
		public RuleCall getSecSectionParserRuleCall_44_0() { return cSecSectionParserRuleCall_44_0; }

		//ElLoc=aElLoc
		public Assignment getElLocAssignment_45() { return cElLocAssignment_45; }

		//aElLoc
		public RuleCall getElLocAElLocParserRuleCall_45_0() { return cElLocAElLocParserRuleCall_45_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_46() { return cNEWLINETerminalRuleCall_46; }

		//sec+=Section
		public Assignment getSecAssignment_47() { return cSecAssignment_47; }

		//Section
		public RuleCall getSecSectionParserRuleCall_47_0() { return cSecSectionParserRuleCall_47_0; }

		//TwrSupport=iTwrSupport
		public Assignment getTwrSupportAssignment_48() { return cTwrSupportAssignment_48; }

		//iTwrSupport
		public RuleCall getTwrSupportITwrSupportParserRuleCall_48_0() { return cTwrSupportITwrSupportParserRuleCall_48_0; }

		//sec+=Section
		public Assignment getSecAssignment_49() { return cSecAssignment_49; }

		//Section
		public RuleCall getSecSectionParserRuleCall_49_0() { return cSecSectionParserRuleCall_49_0; }

		//TwrAttach=iTwrAttach
		public Assignment getTwrAttachAssignment_50() { return cTwrAttachAssignment_50; }

		//iTwrAttach
		public RuleCall getTwrAttachITwrAttachParserRuleCall_50_0() { return cTwrAttachITwrAttachParserRuleCall_50_0; }

		//TwrWires=aTwrWires
		public Assignment getTwrWiresAssignment_51() { return cTwrWiresAssignment_51; }

		//aTwrWires
		public RuleCall getTwrWiresATwrWiresParserRuleCall_51_0() { return cTwrWiresATwrWiresParserRuleCall_51_0; }

		//NodeAttach=aNodeAttach
		public Assignment getNodeAttachAssignment_52() { return cNodeAttachAssignment_52; }

		//aNodeAttach
		public RuleCall getNodeAttachANodeAttachParserRuleCall_52_0() { return cNodeAttachANodeAttachParserRuleCall_52_0; }

		//WireStiff=aWireStiff
		public Assignment getWireStiffAssignment_53() { return cWireStiffAssignment_53; }

		//aWireStiff
		public RuleCall getWireStiffAWireStiffParserRuleCall_53_0() { return cWireStiffAWireStiffParserRuleCall_53_0; }

		//WireAngle=aWireAngle
		public Assignment getWireAngleAssignment_54() { return cWireAngleAssignment_54; }

		//aWireAngle
		public RuleCall getWireAngleAWireAngleParserRuleCall_54_0() { return cWireAngleAWireAngleParserRuleCall_54_0; }

		//(WS | NEWLINE | SL_COMMENT)*
		public Alternatives getAlternatives_55() { return cAlternatives_55; }

		//WS
		public RuleCall getWSTerminalRuleCall_55_0() { return cWSTerminalRuleCall_55_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_55_1() { return cNEWLINETerminalRuleCall_55_1; }

		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_55_2() { return cSL_COMMENTTerminalRuleCall_55_2; }
	}

	public class TNUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tNUMBER");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNUMBERTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//tNUMBER returns ecore::EFloat:
		//	INT | NUMBER;
		public ParserRule getRule() { return rule; }

		//INT | NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//NUMBER
		public RuleCall getNUMBERTerminalRuleCall_1() { return cNUMBERTerminalRuleCall_1; }
	}

	public class TBOOLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tBOOL");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTRUEKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cTrueKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cTrueKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFALSEKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFalseKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cFalseKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//tBOOL returns ecore::EBoolean:
		//	"TRUE" | "True" | "true" | "FALSE" | "False" | "false";
		public ParserRule getRule() { return rule; }

		//"TRUE" | "True" | "true" | "FALSE" | "False" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"TRUE"
		public Keyword getTRUEKeyword_0() { return cTRUEKeyword_0; }

		//"True"
		public Keyword getTrueKeyword_1() { return cTrueKeyword_1; }

		//"true"
		public Keyword getTrueKeyword_2() { return cTrueKeyword_2; }

		//"FALSE"
		public Keyword getFALSEKeyword_3() { return cFALSEKeyword_3; }

		//"False"
		public Keyword getFalseKeyword_4() { return cFalseKeyword_4; }

		//"false"
		public Keyword getFalseKeyword_5() { return cFalseKeyword_5; }
	}

	public class HeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Header");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSL_COMMENTTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cDescAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescSL_COMMENTTerminalRuleCall_2_0 = (RuleCall)cDescAssignment_2.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cNEWLINETerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Header hidden():
		//	name=SL_COMMENT NEWLINE desc=SL_COMMENT NEWLINE NEWLINE;
		public ParserRule getRule() { return rule; }

		//name=SL_COMMENT NEWLINE desc=SL_COMMENT NEWLINE NEWLINE
		public Group getGroup() { return cGroup; }

		//name=SL_COMMENT
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//SL_COMMENT
		public RuleCall getNameSL_COMMENTTerminalRuleCall_0_0() { return cNameSL_COMMENTTerminalRuleCall_0_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_1() { return cNEWLINETerminalRuleCall_1; }

		//desc=SL_COMMENT
		public Assignment getDescAssignment_2() { return cDescAssignment_2; }

		//SL_COMMENT
		public RuleCall getDescSL_COMMENTTerminalRuleCall_2_0() { return cDescSL_COMMENTTerminalRuleCall_2_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_3() { return cNEWLINETerminalRuleCall_3; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_4() { return cNEWLINETerminalRuleCall_4; }
	}

	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSL_COMMENTTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cNEWLINETerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Section hidden():
		//	name=SL_COMMENT NEWLINE;
		public ParserRule getRule() { return rule; }

		//name=SL_COMMENT NEWLINE
		public Group getGroup() { return cGroup; }

		//name=SL_COMMENT
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//SL_COMMENT
		public RuleCall getNameSL_COMMENTTerminalRuleCall_0_0() { return cNameSL_COMMENTTerminalRuleCall_0_0; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_1() { return cNEWLINETerminalRuleCall_1; }
	}

	public class BEchoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bEcho");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameEchoKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bEcho hidden():
		//	WS? value=tBOOL WS name="Echo" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="Echo" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="Echo"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"Echo"
		public Keyword getNameEchoKeyword_3_0() { return cNameEchoKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IBeamTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iBeamType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBeam_typeKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iBeamType hidden():
		//	WS? value=INT WS name="beam_type" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="beam_type" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="beam_type"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"beam_type"
		public Keyword getNameBeam_typeKeyword_3_0() { return cNameBeam_typeKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NRotRpmElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nRotRpm");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameRot_rpmKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nRotRpm hidden():
		//	WS? value=tNUMBER WS name="rot_rpm" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="rot_rpm" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="rot_rpm"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"rot_rpm"
		public Keyword getNameRot_rpmKeyword_3_0() { return cNameRot_rpmKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NRpmMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nRpmMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameRpm_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nRpmMult hidden():
		//	WS? value=tNUMBER WS name="rpm_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="rpm_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="rpm_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"rpm_mult"
		public Keyword getNameRpm_multKeyword_3_0() { return cNameRpm_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NRadiusElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nRadius");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameRadiusKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nRadius hidden():
		//	WS? value=tNUMBER WS name="radius" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="radius" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="radius"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"radius"
		public Keyword getNameRadiusKeyword_3_0() { return cNameRadiusKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NHubRadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nHubRad");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHub_radKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nHubRad hidden():
		//	WS? value=tNUMBER WS name="hub_rad" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="hub_rad" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="hub_rad"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"hub_rad"
		public Keyword getNameHub_radKeyword_3_0() { return cNameHub_radKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NPreconeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nPrecone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNamePreconeKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nPrecone hidden():
		//	WS? value=tNUMBER WS name="precone" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="precone" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="precone"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"precone"
		public Keyword getNamePreconeKeyword_3_0() { return cNamePreconeKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NBlThpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nBlThp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameBl_thpKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nBlThp hidden():
		//	WS? value=tNUMBER WS name="bl_thp" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="bl_thp" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="bl_thp"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"bl_thp"
		public Keyword getNameBl_thpKeyword_3_0() { return cNameBl_thpKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IHubConnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iHubConn");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameHub_connKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iHubConn hidden():
		//	WS? value=INT WS name="hub_conn" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="hub_conn" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="hub_conn"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"hub_conn"
		public Keyword getNameHub_connKeyword_3_0() { return cNameHub_connKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IModePrElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iModePr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameModeprKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iModePr hidden():
		//	WS? value=INT WS name="modepr" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="modepr" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="modepr"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"modepr"
		public Keyword getNameModeprKeyword_3_0() { return cNameModeprKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BTabDelimElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bTabDelim");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTabDelimKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bTabDelim hidden():
		//	WS? value=tBOOL WS name="TabDelim" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="TabDelim" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="TabDelim"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"TabDelim"
		public Keyword getNameTabDelimKeyword_3_0() { return cNameTabDelimKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class BMidNodeTwElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "bMidNodeTw");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTBOOLParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameMid_node_twKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//bMidNodeTw hidden():
		//	WS? value=tBOOL WS name="mid_node_tw" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tBOOL WS name="mid_node_tw" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tBOOL
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tBOOL
		public RuleCall getValueTBOOLParserRuleCall_1_0() { return cValueTBOOLParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="mid_node_tw"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"mid_node_tw"
		public Keyword getNameMid_node_twKeyword_3_0() { return cNameMid_node_twKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTipMassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTipMass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTip_massKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTipMass hidden():
		//	WS? value=tNUMBER WS name="tip_mass" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="tip_mass" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="tip_mass"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"tip_mass"
		public Keyword getNameTip_massKeyword_3_0() { return cNameTip_massKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NCmLocElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nCmLoc");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameCm_locKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nCmLoc hidden():
		//	WS? value=tNUMBER WS name="cm_loc" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="cm_loc" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="cm_loc"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"cm_loc"
		public Keyword getNameCm_locKeyword_3_0() { return cNameCm_locKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NCmAxialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nCmAxial");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameCm_axialKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nCmAxial hidden():
		//	WS? value=tNUMBER WS name="cm_axial" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="cm_axial" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="cm_axial"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"cm_axial"
		public Keyword getNameCm_axialKeyword_3_0() { return cNameCm_axialKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NIxxTipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nIxxTip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameIxx_tipKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nIxxTip hidden():
		//	WS? value=tNUMBER WS name="ixx_tip" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="ixx_tip" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="ixx_tip"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"ixx_tip"
		public Keyword getNameIxx_tipKeyword_3_0() { return cNameIxx_tipKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NIyyTipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nIyyTip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameIyy_tipKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nIyyTip hidden():
		//	WS? value=tNUMBER WS name="iyy_tip" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="iyy_tip" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="iyy_tip"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"iyy_tip"
		public Keyword getNameIyy_tipKeyword_3_0() { return cNameIyy_tipKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NIzzTipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nIzzTip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameIzz_tipKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nIzzTip hidden():
		//	WS? value=tNUMBER WS name="izz_tip" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="izz_tip" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="izz_tip"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"izz_tip"
		public Keyword getNameIzz_tipKeyword_3_0() { return cNameIzz_tipKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NIxyTipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nIxyTip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameIxy_tipKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nIxyTip hidden():
		//	WS? value=tNUMBER WS name="ixy_tip" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="ixy_tip" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="ixy_tip"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"ixy_tip"
		public Keyword getNameIxy_tipKeyword_3_0() { return cNameIxy_tipKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NIzxTipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nIzxTip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameIzx_tipKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nIzxTip hidden():
		//	WS? value=tNUMBER WS name="izx_tip" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="izx_tip" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="izx_tip"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"izx_tip"
		public Keyword getNameIzx_tipKeyword_3_0() { return cNameIzx_tipKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NIyzTipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nIyzTip");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameIyz_tipKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nIyzTip hidden():
		//	WS? value=tNUMBER WS name="iyz_tip" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="iyz_tip" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="iyz_tip"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"iyz_tip"
		public Keyword getNameIyz_tipKeyword_3_0() { return cNameIyz_tipKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class IIdMatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iIdMat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameId_matKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iIdMat hidden():
		//	WS? value=INT WS name="id_mat" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="id_mat" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="id_mat"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"id_mat"
		public Keyword getNameId_matKeyword_3_0() { return cNameId_matKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class ISecFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iSecFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSec_props_fileKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iSecFile hidden():
		//	WS? value=STRING WS name="sec_props_file" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=STRING WS name="sec_props_file" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="sec_props_file"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"sec_props_file"
		public Keyword getNameSec_props_fileKeyword_3_0() { return cNameSec_props_fileKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NSecMasMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nSecMasMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSec_mass_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nSecMasMult hidden():
		//	WS? value=tNUMBER WS name="sec_mass_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="sec_mass_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="sec_mass_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"sec_mass_mult"
		public Keyword getNameSec_mass_multKeyword_3_0() { return cNameSec_mass_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NFlpInrMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nFlpInrMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameFlp_iner_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nFlpInrMult hidden():
		//	WS? value=tNUMBER WS name="flp_iner_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="flp_iner_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="flp_iner_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"flp_iner_mult"
		public Keyword getNameFlp_iner_multKeyword_3_0() { return cNameFlp_iner_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NLagInrMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nLagInrMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameLag_iner_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nLagInrMult hidden():
		//	WS? value=tNUMBER WS name="lag_iner_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="lag_iner_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="lag_iner_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"lag_iner_mult"
		public Keyword getNameLag_iner_multKeyword_3_0() { return cNameLag_iner_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NFlpstfMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nFlpstfMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameFlp_stff_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nFlpstfMult hidden():
		//	WS? value=tNUMBER WS name="flp_stff_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="flp_stff_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="flp_stff_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"flp_stff_mult"
		public Keyword getNameFlp_stff_multKeyword_3_0() { return cNameFlp_stff_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NEdgStfMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nEdgStfMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameEdge_stff_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nEdgStfMult hidden():
		//	WS? value=tNUMBER WS name="edge_stff_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="edge_stff_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="edge_stff_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"edge_stff_mult"
		public Keyword getNameEdge_stff_multKeyword_3_0() { return cNameEdge_stff_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTorStfMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTorStfMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTor_stff_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTorStfMult hidden():
		//	WS? value=tNUMBER WS name="tor_stff_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="tor_stff_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="tor_stff_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"tor_stff_mult"
		public Keyword getNameTor_stff_multKeyword_3_0() { return cNameTor_stff_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NAxiStfMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nAxiStfMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameAxial_stff_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nAxiStfMult hidden():
		//	WS? value=tNUMBER WS name="axial_stff_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="axial_stff_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="axial_stff_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"axial_stff_mult"
		public Keyword getNameAxial_stff_multKeyword_3_0() { return cNameAxial_stff_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NCgOffsMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nCgOffsMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameCg_offst_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nCgOffsMult hidden():
		//	WS? value=tNUMBER WS name="cg_offst_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="cg_offst_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="cg_offst_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"cg_offst_mult"
		public Keyword getNameCg_offst_multKeyword_3_0() { return cNameCg_offst_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NScOffsMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nScOffsMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameSc_offst_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nScOffsMult hidden():
		//	WS? value=tNUMBER WS name="sc_offst_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="sc_offst_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="sc_offst_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"sc_offst_mult"
		public Keyword getNameSc_offst_multKeyword_3_0() { return cNameSc_offst_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class NTcOffsMultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "nTcOffsMult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueTNUMBERParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTc_offst_multKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//nTcOffsMult hidden():
		//	WS? value=tNUMBER WS name="tc_offst_mult" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=tNUMBER WS name="tc_offst_mult" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=tNUMBER
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//tNUMBER
		public RuleCall getValueTNUMBERParserRuleCall_1_0() { return cValueTNUMBERParserRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="tc_offst_mult"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"tc_offst_mult"
		public Keyword getNameTc_offst_multKeyword_3_0() { return cNameTc_offst_multKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class INSeltElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iNSelt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameNseltKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iNSelt hidden():
		//	WS? value=INT WS name="nselt" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="nselt" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="nselt"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"nselt"
		public Keyword getNameNseltKeyword_3_0() { return cNameNseltKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class AElLocElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "aElLoc");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cEl_locAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cEl_locTNUMBERParserRuleCall_1_0_0 = (RuleCall)cEl_locAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cEl_locAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEl_locTNUMBERParserRuleCall_2_0 = (RuleCall)cEl_locAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSL_COMMENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cNEWLINETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//aElLoc hidden():
		//	WS? (el_loc+=tNUMBER WS)+ el_loc+=tNUMBER WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? (el_loc+=tNUMBER WS)+ el_loc+=tNUMBER WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//(el_loc+=tNUMBER WS)+
		public Group getGroup_1() { return cGroup_1; }

		//el_loc+=tNUMBER
		public Assignment getEl_locAssignment_1_0() { return cEl_locAssignment_1_0; }

		//tNUMBER
		public RuleCall getEl_locTNUMBERParserRuleCall_1_0_0() { return cEl_locTNUMBERParserRuleCall_1_0_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//el_loc+=tNUMBER
		public Assignment getEl_locAssignment_2() { return cEl_locAssignment_2; }

		//tNUMBER
		public RuleCall getEl_locTNUMBERParserRuleCall_2_0() { return cEl_locTNUMBERParserRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_4() { return cSL_COMMENTTerminalRuleCall_4; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_5() { return cNEWLINETerminalRuleCall_5; }
	}

	public class ITwrSupportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iTwrSupport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameTow_supportKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iTwrSupport hidden():
		//	WS? value=INT WS name="tow_support" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="tow_support" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="tow_support"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"tow_support"
		public Keyword getNameTow_supportKeyword_3_0() { return cNameTow_supportKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class ITwrAttachElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "iTwrAttach");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cNameN_attachmentsKeyword_3_0 = (Keyword)cNameAssignment_3.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cNEWLINETerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//iTwrAttach hidden():
		//	WS? value=INT WS name="n_attachments" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? value=INT WS name="n_attachments" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//name="n_attachments"
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//"n_attachments"
		public Keyword getNameN_attachmentsKeyword_3_0() { return cNameN_attachmentsKeyword_3_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4() { return cWSTerminalRuleCall_4; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_6() { return cNEWLINETerminalRuleCall_6; }
	}

	public class ATwrWiresElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "aTwrWires");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cEl_locAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cEl_locINTTerminalRuleCall_1_0_0 = (RuleCall)cEl_locAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameN_wiresKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSL_COMMENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cNEWLINETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//aTwrWires hidden():
		//	WS? (el_loc+=INT WS)+ name="n_wires" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? (el_loc+=INT WS)+ name="n_wires" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//(el_loc+=INT WS)+
		public Group getGroup_1() { return cGroup_1; }

		//el_loc+=INT
		public Assignment getEl_locAssignment_1_0() { return cEl_locAssignment_1_0; }

		//INT
		public RuleCall getEl_locINTTerminalRuleCall_1_0_0() { return cEl_locINTTerminalRuleCall_1_0_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//name="n_wires"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"n_wires"
		public Keyword getNameN_wiresKeyword_2_0() { return cNameN_wiresKeyword_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_4() { return cSL_COMMENTTerminalRuleCall_4; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_5() { return cNEWLINETerminalRuleCall_5; }
	}

	public class ANodeAttachElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "aNodeAttach");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cEl_locAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cEl_locINTTerminalRuleCall_1_0_0 = (RuleCall)cEl_locAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameNode_attachKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSL_COMMENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cNEWLINETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//aNodeAttach hidden():
		//	WS? (el_loc+=INT WS)+ name="node_attach" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? (el_loc+=INT WS)+ name="node_attach" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//(el_loc+=INT WS)+
		public Group getGroup_1() { return cGroup_1; }

		//el_loc+=INT
		public Assignment getEl_locAssignment_1_0() { return cEl_locAssignment_1_0; }

		//INT
		public RuleCall getEl_locINTTerminalRuleCall_1_0_0() { return cEl_locINTTerminalRuleCall_1_0_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//name="node_attach"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"node_attach"
		public Keyword getNameNode_attachKeyword_2_0() { return cNameNode_attachKeyword_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_4() { return cSL_COMMENTTerminalRuleCall_4; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_5() { return cNEWLINETerminalRuleCall_5; }
	}

	public class AWireStiffElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "aWireStiff");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cEl_locAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cEl_locTNUMBERParserRuleCall_1_0_0 = (RuleCall)cEl_locAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameWire_stfnessKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSL_COMMENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cNEWLINETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//aWireStiff hidden():
		//	WS? (el_loc+=tNUMBER WS)+ name="wire_stfness" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? (el_loc+=tNUMBER WS)+ name="wire_stfness" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//(el_loc+=tNUMBER WS)+
		public Group getGroup_1() { return cGroup_1; }

		//el_loc+=tNUMBER
		public Assignment getEl_locAssignment_1_0() { return cEl_locAssignment_1_0; }

		//tNUMBER
		public RuleCall getEl_locTNUMBERParserRuleCall_1_0_0() { return cEl_locTNUMBERParserRuleCall_1_0_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//name="wire_stfness"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"wire_stfness"
		public Keyword getNameWire_stfnessKeyword_2_0() { return cNameWire_stfnessKeyword_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_4() { return cSL_COMMENTTerminalRuleCall_4; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_5() { return cNEWLINETerminalRuleCall_5; }
	}

	public class AWireAngleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "aWireAngle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cEl_locAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cEl_locTNUMBERParserRuleCall_1_0_0 = (RuleCall)cEl_locAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cNameTh_wireKeyword_2_0 = (Keyword)cNameAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSL_COMMENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cNEWLINETerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//aWireAngle hidden():
		//	WS? (el_loc+=tNUMBER WS)+ name="th_wire" WS? SL_COMMENT? NEWLINE;
		public ParserRule getRule() { return rule; }

		//WS? (el_loc+=tNUMBER WS)+ name="th_wire" WS? SL_COMMENT? NEWLINE
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//(el_loc+=tNUMBER WS)+
		public Group getGroup_1() { return cGroup_1; }

		//el_loc+=tNUMBER
		public Assignment getEl_locAssignment_1_0() { return cEl_locAssignment_1_0; }

		//tNUMBER
		public RuleCall getEl_locTNUMBERParserRuleCall_1_0_0() { return cEl_locTNUMBERParserRuleCall_1_0_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//name="th_wire"
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//"th_wire"
		public Keyword getNameTh_wireKeyword_2_0() { return cNameTh_wireKeyword_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//SL_COMMENT?
		public RuleCall getSL_COMMENTTerminalRuleCall_4() { return cSL_COMMENTTerminalRuleCall_4; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_5() { return cNEWLINETerminalRuleCall_5; }
	}
	
	
	private ModelBmodesbmiElements pModelBmodesbmi;
	private TNUMBERElements pTNUMBER;
	private TBOOLElements pTBOOL;
	private TerminalRule tINT;
	private TerminalRule tNUMBER;
	private TerminalRule tSTRING;
	private TerminalRule tNEWLINE;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tWS;
	private HeaderElements pHeader;
	private SectionElements pSection;
	private BEchoElements pBEcho;
	private IBeamTypeElements pIBeamType;
	private NRotRpmElements pNRotRpm;
	private NRpmMultElements pNRpmMult;
	private NRadiusElements pNRadius;
	private NHubRadElements pNHubRad;
	private NPreconeElements pNPrecone;
	private NBlThpElements pNBlThp;
	private IHubConnElements pIHubConn;
	private IModePrElements pIModePr;
	private BTabDelimElements pBTabDelim;
	private BMidNodeTwElements pBMidNodeTw;
	private NTipMassElements pNTipMass;
	private NCmLocElements pNCmLoc;
	private NCmAxialElements pNCmAxial;
	private NIxxTipElements pNIxxTip;
	private NIyyTipElements pNIyyTip;
	private NIzzTipElements pNIzzTip;
	private NIxyTipElements pNIxyTip;
	private NIzxTipElements pNIzxTip;
	private NIyzTipElements pNIyzTip;
	private IIdMatElements pIIdMat;
	private ISecFileElements pISecFile;
	private NSecMasMultElements pNSecMasMult;
	private NFlpInrMultElements pNFlpInrMult;
	private NLagInrMultElements pNLagInrMult;
	private NFlpstfMultElements pNFlpstfMult;
	private NEdgStfMultElements pNEdgStfMult;
	private NTorStfMultElements pNTorStfMult;
	private NAxiStfMultElements pNAxiStfMult;
	private NCgOffsMultElements pNCgOffsMult;
	private NScOffsMultElements pNScOffsMult;
	private NTcOffsMultElements pNTcOffsMult;
	private INSeltElements pINSelt;
	private AElLocElements pAElLoc;
	private ITwrSupportElements pITwrSupport;
	private ITwrAttachElements pITwrAttach;
	private ATwrWiresElements pATwrWires;
	private ANodeAttachElements pANodeAttach;
	private AWireStiffElements pAWireStiff;
	private AWireAngleElements pAWireAngle;
	
	private final Grammar grammar;

	@Inject
	public BmodesbmiGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("sc.ndt.editor.Bmodesbmi".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//ModelBmodesbmi:
	//	Head=Header sec+=Section Echo=bEcho type=iBeamType InfModel=nRotRpm IndModel=nRpmMult Atoler=nRadius TLModel=nHubRad
	//	HLModel=nPrecone BlThp=nBlThp HubConn=iHubConn ModePr=iModePr TabDelim=bTabDelim MidNodeTw=bMidNodeTw NEWLINE
	//	sec+=Section TipMass=nTipMass CmLoc=nCmLoc CmAxial=nCmAxial IxxTip=nIxxTip IyyTip=nIyyTip IzzTip=nIzzTip
	//	IxyTip=nIxyTip IzxTip=nIzxTip IyzTip=nIyzTip NEWLINE sec+=Section IdMat=iIdMat SecFile=iSecFile NEWLINE sec+=Section
	//	SecMasMult=nSecMasMult FlpInrMult=nFlpInrMult LagInrMult=nLagInrMult FlpstfMult=nFlpstfMult EdgStfMult=nEdgStfMult
	//	TorStfMult=nTorStfMult AxiStfMult=nAxiStfMult CgOffsMult=nCgOffsMult ScOffsMult=nScOffsMult TcOffsMult=nTcOffsMult
	//	NEWLINE sec+=Section NSelt=iNSelt sec+=Section ElLoc=aElLoc NEWLINE sec+=Section TwrSupport=iTwrSupport sec+=Section
	//	TwrAttach=iTwrAttach TwrWires=aTwrWires NodeAttach=aNodeAttach WireStiff=aWireStiff WireAngle=aWireAngle (WS | NEWLINE
	//	| SL_COMMENT)*;
	public ModelBmodesbmiElements getModelBmodesbmiAccess() {
		return (pModelBmodesbmi != null) ? pModelBmodesbmi : (pModelBmodesbmi = new ModelBmodesbmiElements());
	}
	
	public ParserRule getModelBmodesbmiRule() {
		return getModelBmodesbmiAccess().getRule();
	}

	//tNUMBER returns ecore::EFloat:
	//	INT | NUMBER;
	public TNUMBERElements getTNUMBERAccess() {
		return (pTNUMBER != null) ? pTNUMBER : (pTNUMBER = new TNUMBERElements());
	}
	
	public ParserRule getTNUMBERRule() {
		return getTNUMBERAccess().getRule();
	}

	//tBOOL returns ecore::EBoolean:
	//	"TRUE" | "True" | "true" | "FALSE" | "False" | "false";
	public TBOOLElements getTBOOLAccess() {
		return (pTBOOL != null) ? pTBOOL : (pTBOOL = new TBOOLElements());
	}
	
	public ParserRule getTBOOLRule() {
		return getTBOOLAccess().getRule();
	}

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return (tINT != null) ? tINT : (tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT"));
	} 

	//terminal NUMBER returns ecore::EFloat:
	//	("+" | "-")? INT ("." INT?) (("E" | "e") ("+" | "-")? INT)? | ("+" | "-")? INT (("E" | "e") ("+" | "-")? INT) | ("."
	//	INT) (("E" | "e") ("+" | "-")? INT)? | "-" INT;
	public TerminalRule getNUMBERRule() {
		return (tNUMBER != null) ? tNUMBER : (tNUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NUMBER"));
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal NEWLINE:
	//	"\r" | "\n" | "\r\n";
	public TerminalRule getNEWLINERule() {
		return (tNEWLINE != null) ? tNEWLINE : (tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NEWLINE"));
	} 

	//terminal SL_COMMENT:
	//	"-" !"0".."9" !("\r" | "\n" | "\r\n")*;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal WS:
	//	(" " | "\t")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//Header hidden():
	//	name=SL_COMMENT NEWLINE desc=SL_COMMENT NEWLINE NEWLINE;
	public HeaderElements getHeaderAccess() {
		return (pHeader != null) ? pHeader : (pHeader = new HeaderElements());
	}
	
	public ParserRule getHeaderRule() {
		return getHeaderAccess().getRule();
	}

	//Section hidden():
	//	name=SL_COMMENT NEWLINE;
	public SectionElements getSectionAccess() {
		return (pSection != null) ? pSection : (pSection = new SectionElements());
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}

	//bEcho hidden():
	//	WS? value=tBOOL WS name="Echo" WS? SL_COMMENT? NEWLINE;
	public BEchoElements getBEchoAccess() {
		return (pBEcho != null) ? pBEcho : (pBEcho = new BEchoElements());
	}
	
	public ParserRule getBEchoRule() {
		return getBEchoAccess().getRule();
	}

	//iBeamType hidden():
	//	WS? value=INT WS name="beam_type" WS? SL_COMMENT? NEWLINE;
	public IBeamTypeElements getIBeamTypeAccess() {
		return (pIBeamType != null) ? pIBeamType : (pIBeamType = new IBeamTypeElements());
	}
	
	public ParserRule getIBeamTypeRule() {
		return getIBeamTypeAccess().getRule();
	}

	//nRotRpm hidden():
	//	WS? value=tNUMBER WS name="rot_rpm" WS? SL_COMMENT? NEWLINE;
	public NRotRpmElements getNRotRpmAccess() {
		return (pNRotRpm != null) ? pNRotRpm : (pNRotRpm = new NRotRpmElements());
	}
	
	public ParserRule getNRotRpmRule() {
		return getNRotRpmAccess().getRule();
	}

	//nRpmMult hidden():
	//	WS? value=tNUMBER WS name="rpm_mult" WS? SL_COMMENT? NEWLINE;
	public NRpmMultElements getNRpmMultAccess() {
		return (pNRpmMult != null) ? pNRpmMult : (pNRpmMult = new NRpmMultElements());
	}
	
	public ParserRule getNRpmMultRule() {
		return getNRpmMultAccess().getRule();
	}

	//nRadius hidden():
	//	WS? value=tNUMBER WS name="radius" WS? SL_COMMENT? NEWLINE;
	public NRadiusElements getNRadiusAccess() {
		return (pNRadius != null) ? pNRadius : (pNRadius = new NRadiusElements());
	}
	
	public ParserRule getNRadiusRule() {
		return getNRadiusAccess().getRule();
	}

	//nHubRad hidden():
	//	WS? value=tNUMBER WS name="hub_rad" WS? SL_COMMENT? NEWLINE;
	public NHubRadElements getNHubRadAccess() {
		return (pNHubRad != null) ? pNHubRad : (pNHubRad = new NHubRadElements());
	}
	
	public ParserRule getNHubRadRule() {
		return getNHubRadAccess().getRule();
	}

	//nPrecone hidden():
	//	WS? value=tNUMBER WS name="precone" WS? SL_COMMENT? NEWLINE;
	public NPreconeElements getNPreconeAccess() {
		return (pNPrecone != null) ? pNPrecone : (pNPrecone = new NPreconeElements());
	}
	
	public ParserRule getNPreconeRule() {
		return getNPreconeAccess().getRule();
	}

	//nBlThp hidden():
	//	WS? value=tNUMBER WS name="bl_thp" WS? SL_COMMENT? NEWLINE;
	public NBlThpElements getNBlThpAccess() {
		return (pNBlThp != null) ? pNBlThp : (pNBlThp = new NBlThpElements());
	}
	
	public ParserRule getNBlThpRule() {
		return getNBlThpAccess().getRule();
	}

	//iHubConn hidden():
	//	WS? value=INT WS name="hub_conn" WS? SL_COMMENT? NEWLINE;
	public IHubConnElements getIHubConnAccess() {
		return (pIHubConn != null) ? pIHubConn : (pIHubConn = new IHubConnElements());
	}
	
	public ParserRule getIHubConnRule() {
		return getIHubConnAccess().getRule();
	}

	//iModePr hidden():
	//	WS? value=INT WS name="modepr" WS? SL_COMMENT? NEWLINE;
	public IModePrElements getIModePrAccess() {
		return (pIModePr != null) ? pIModePr : (pIModePr = new IModePrElements());
	}
	
	public ParserRule getIModePrRule() {
		return getIModePrAccess().getRule();
	}

	//bTabDelim hidden():
	//	WS? value=tBOOL WS name="TabDelim" WS? SL_COMMENT? NEWLINE;
	public BTabDelimElements getBTabDelimAccess() {
		return (pBTabDelim != null) ? pBTabDelim : (pBTabDelim = new BTabDelimElements());
	}
	
	public ParserRule getBTabDelimRule() {
		return getBTabDelimAccess().getRule();
	}

	//bMidNodeTw hidden():
	//	WS? value=tBOOL WS name="mid_node_tw" WS? SL_COMMENT? NEWLINE;
	public BMidNodeTwElements getBMidNodeTwAccess() {
		return (pBMidNodeTw != null) ? pBMidNodeTw : (pBMidNodeTw = new BMidNodeTwElements());
	}
	
	public ParserRule getBMidNodeTwRule() {
		return getBMidNodeTwAccess().getRule();
	}

	//nTipMass hidden():
	//	WS? value=tNUMBER WS name="tip_mass" WS? SL_COMMENT? NEWLINE;
	public NTipMassElements getNTipMassAccess() {
		return (pNTipMass != null) ? pNTipMass : (pNTipMass = new NTipMassElements());
	}
	
	public ParserRule getNTipMassRule() {
		return getNTipMassAccess().getRule();
	}

	//nCmLoc hidden():
	//	WS? value=tNUMBER WS name="cm_loc" WS? SL_COMMENT? NEWLINE;
	public NCmLocElements getNCmLocAccess() {
		return (pNCmLoc != null) ? pNCmLoc : (pNCmLoc = new NCmLocElements());
	}
	
	public ParserRule getNCmLocRule() {
		return getNCmLocAccess().getRule();
	}

	//nCmAxial hidden():
	//	WS? value=tNUMBER WS name="cm_axial" WS? SL_COMMENT? NEWLINE;
	public NCmAxialElements getNCmAxialAccess() {
		return (pNCmAxial != null) ? pNCmAxial : (pNCmAxial = new NCmAxialElements());
	}
	
	public ParserRule getNCmAxialRule() {
		return getNCmAxialAccess().getRule();
	}

	//nIxxTip hidden():
	//	WS? value=tNUMBER WS name="ixx_tip" WS? SL_COMMENT? NEWLINE;
	public NIxxTipElements getNIxxTipAccess() {
		return (pNIxxTip != null) ? pNIxxTip : (pNIxxTip = new NIxxTipElements());
	}
	
	public ParserRule getNIxxTipRule() {
		return getNIxxTipAccess().getRule();
	}

	//nIyyTip hidden():
	//	WS? value=tNUMBER WS name="iyy_tip" WS? SL_COMMENT? NEWLINE;
	public NIyyTipElements getNIyyTipAccess() {
		return (pNIyyTip != null) ? pNIyyTip : (pNIyyTip = new NIyyTipElements());
	}
	
	public ParserRule getNIyyTipRule() {
		return getNIyyTipAccess().getRule();
	}

	//nIzzTip hidden():
	//	WS? value=tNUMBER WS name="izz_tip" WS? SL_COMMENT? NEWLINE;
	public NIzzTipElements getNIzzTipAccess() {
		return (pNIzzTip != null) ? pNIzzTip : (pNIzzTip = new NIzzTipElements());
	}
	
	public ParserRule getNIzzTipRule() {
		return getNIzzTipAccess().getRule();
	}

	//nIxyTip hidden():
	//	WS? value=tNUMBER WS name="ixy_tip" WS? SL_COMMENT? NEWLINE;
	public NIxyTipElements getNIxyTipAccess() {
		return (pNIxyTip != null) ? pNIxyTip : (pNIxyTip = new NIxyTipElements());
	}
	
	public ParserRule getNIxyTipRule() {
		return getNIxyTipAccess().getRule();
	}

	//nIzxTip hidden():
	//	WS? value=tNUMBER WS name="izx_tip" WS? SL_COMMENT? NEWLINE;
	public NIzxTipElements getNIzxTipAccess() {
		return (pNIzxTip != null) ? pNIzxTip : (pNIzxTip = new NIzxTipElements());
	}
	
	public ParserRule getNIzxTipRule() {
		return getNIzxTipAccess().getRule();
	}

	//nIyzTip hidden():
	//	WS? value=tNUMBER WS name="iyz_tip" WS? SL_COMMENT? NEWLINE;
	public NIyzTipElements getNIyzTipAccess() {
		return (pNIyzTip != null) ? pNIyzTip : (pNIyzTip = new NIyzTipElements());
	}
	
	public ParserRule getNIyzTipRule() {
		return getNIyzTipAccess().getRule();
	}

	//iIdMat hidden():
	//	WS? value=INT WS name="id_mat" WS? SL_COMMENT? NEWLINE;
	public IIdMatElements getIIdMatAccess() {
		return (pIIdMat != null) ? pIIdMat : (pIIdMat = new IIdMatElements());
	}
	
	public ParserRule getIIdMatRule() {
		return getIIdMatAccess().getRule();
	}

	//iSecFile hidden():
	//	WS? value=STRING WS name="sec_props_file" WS? SL_COMMENT? NEWLINE;
	public ISecFileElements getISecFileAccess() {
		return (pISecFile != null) ? pISecFile : (pISecFile = new ISecFileElements());
	}
	
	public ParserRule getISecFileRule() {
		return getISecFileAccess().getRule();
	}

	//nSecMasMult hidden():
	//	WS? value=tNUMBER WS name="sec_mass_mult" WS? SL_COMMENT? NEWLINE;
	public NSecMasMultElements getNSecMasMultAccess() {
		return (pNSecMasMult != null) ? pNSecMasMult : (pNSecMasMult = new NSecMasMultElements());
	}
	
	public ParserRule getNSecMasMultRule() {
		return getNSecMasMultAccess().getRule();
	}

	//nFlpInrMult hidden():
	//	WS? value=tNUMBER WS name="flp_iner_mult" WS? SL_COMMENT? NEWLINE;
	public NFlpInrMultElements getNFlpInrMultAccess() {
		return (pNFlpInrMult != null) ? pNFlpInrMult : (pNFlpInrMult = new NFlpInrMultElements());
	}
	
	public ParserRule getNFlpInrMultRule() {
		return getNFlpInrMultAccess().getRule();
	}

	//nLagInrMult hidden():
	//	WS? value=tNUMBER WS name="lag_iner_mult" WS? SL_COMMENT? NEWLINE;
	public NLagInrMultElements getNLagInrMultAccess() {
		return (pNLagInrMult != null) ? pNLagInrMult : (pNLagInrMult = new NLagInrMultElements());
	}
	
	public ParserRule getNLagInrMultRule() {
		return getNLagInrMultAccess().getRule();
	}

	//nFlpstfMult hidden():
	//	WS? value=tNUMBER WS name="flp_stff_mult" WS? SL_COMMENT? NEWLINE;
	public NFlpstfMultElements getNFlpstfMultAccess() {
		return (pNFlpstfMult != null) ? pNFlpstfMult : (pNFlpstfMult = new NFlpstfMultElements());
	}
	
	public ParserRule getNFlpstfMultRule() {
		return getNFlpstfMultAccess().getRule();
	}

	//nEdgStfMult hidden():
	//	WS? value=tNUMBER WS name="edge_stff_mult" WS? SL_COMMENT? NEWLINE;
	public NEdgStfMultElements getNEdgStfMultAccess() {
		return (pNEdgStfMult != null) ? pNEdgStfMult : (pNEdgStfMult = new NEdgStfMultElements());
	}
	
	public ParserRule getNEdgStfMultRule() {
		return getNEdgStfMultAccess().getRule();
	}

	//nTorStfMult hidden():
	//	WS? value=tNUMBER WS name="tor_stff_mult" WS? SL_COMMENT? NEWLINE;
	public NTorStfMultElements getNTorStfMultAccess() {
		return (pNTorStfMult != null) ? pNTorStfMult : (pNTorStfMult = new NTorStfMultElements());
	}
	
	public ParserRule getNTorStfMultRule() {
		return getNTorStfMultAccess().getRule();
	}

	//nAxiStfMult hidden():
	//	WS? value=tNUMBER WS name="axial_stff_mult" WS? SL_COMMENT? NEWLINE;
	public NAxiStfMultElements getNAxiStfMultAccess() {
		return (pNAxiStfMult != null) ? pNAxiStfMult : (pNAxiStfMult = new NAxiStfMultElements());
	}
	
	public ParserRule getNAxiStfMultRule() {
		return getNAxiStfMultAccess().getRule();
	}

	//nCgOffsMult hidden():
	//	WS? value=tNUMBER WS name="cg_offst_mult" WS? SL_COMMENT? NEWLINE;
	public NCgOffsMultElements getNCgOffsMultAccess() {
		return (pNCgOffsMult != null) ? pNCgOffsMult : (pNCgOffsMult = new NCgOffsMultElements());
	}
	
	public ParserRule getNCgOffsMultRule() {
		return getNCgOffsMultAccess().getRule();
	}

	//nScOffsMult hidden():
	//	WS? value=tNUMBER WS name="sc_offst_mult" WS? SL_COMMENT? NEWLINE;
	public NScOffsMultElements getNScOffsMultAccess() {
		return (pNScOffsMult != null) ? pNScOffsMult : (pNScOffsMult = new NScOffsMultElements());
	}
	
	public ParserRule getNScOffsMultRule() {
		return getNScOffsMultAccess().getRule();
	}

	//nTcOffsMult hidden():
	//	WS? value=tNUMBER WS name="tc_offst_mult" WS? SL_COMMENT? NEWLINE;
	public NTcOffsMultElements getNTcOffsMultAccess() {
		return (pNTcOffsMult != null) ? pNTcOffsMult : (pNTcOffsMult = new NTcOffsMultElements());
	}
	
	public ParserRule getNTcOffsMultRule() {
		return getNTcOffsMultAccess().getRule();
	}

	//iNSelt hidden():
	//	WS? value=INT WS name="nselt" WS? SL_COMMENT? NEWLINE;
	public INSeltElements getINSeltAccess() {
		return (pINSelt != null) ? pINSelt : (pINSelt = new INSeltElements());
	}
	
	public ParserRule getINSeltRule() {
		return getINSeltAccess().getRule();
	}

	//aElLoc hidden():
	//	WS? (el_loc+=tNUMBER WS)+ el_loc+=tNUMBER WS? SL_COMMENT? NEWLINE;
	public AElLocElements getAElLocAccess() {
		return (pAElLoc != null) ? pAElLoc : (pAElLoc = new AElLocElements());
	}
	
	public ParserRule getAElLocRule() {
		return getAElLocAccess().getRule();
	}

	//iTwrSupport hidden():
	//	WS? value=INT WS name="tow_support" WS? SL_COMMENT? NEWLINE;
	public ITwrSupportElements getITwrSupportAccess() {
		return (pITwrSupport != null) ? pITwrSupport : (pITwrSupport = new ITwrSupportElements());
	}
	
	public ParserRule getITwrSupportRule() {
		return getITwrSupportAccess().getRule();
	}

	//iTwrAttach hidden():
	//	WS? value=INT WS name="n_attachments" WS? SL_COMMENT? NEWLINE;
	public ITwrAttachElements getITwrAttachAccess() {
		return (pITwrAttach != null) ? pITwrAttach : (pITwrAttach = new ITwrAttachElements());
	}
	
	public ParserRule getITwrAttachRule() {
		return getITwrAttachAccess().getRule();
	}

	//aTwrWires hidden():
	//	WS? (el_loc+=INT WS)+ name="n_wires" WS? SL_COMMENT? NEWLINE;
	public ATwrWiresElements getATwrWiresAccess() {
		return (pATwrWires != null) ? pATwrWires : (pATwrWires = new ATwrWiresElements());
	}
	
	public ParserRule getATwrWiresRule() {
		return getATwrWiresAccess().getRule();
	}

	//aNodeAttach hidden():
	//	WS? (el_loc+=INT WS)+ name="node_attach" WS? SL_COMMENT? NEWLINE;
	public ANodeAttachElements getANodeAttachAccess() {
		return (pANodeAttach != null) ? pANodeAttach : (pANodeAttach = new ANodeAttachElements());
	}
	
	public ParserRule getANodeAttachRule() {
		return getANodeAttachAccess().getRule();
	}

	//aWireStiff hidden():
	//	WS? (el_loc+=tNUMBER WS)+ name="wire_stfness" WS? SL_COMMENT? NEWLINE;
	public AWireStiffElements getAWireStiffAccess() {
		return (pAWireStiff != null) ? pAWireStiff : (pAWireStiff = new AWireStiffElements());
	}
	
	public ParserRule getAWireStiffRule() {
		return getAWireStiffAccess().getRule();
	}

	//aWireAngle hidden():
	//	WS? (el_loc+=tNUMBER WS)+ name="th_wire" WS? SL_COMMENT? NEWLINE;
	public AWireAngleElements getAWireAngleAccess() {
		return (pAWireAngle != null) ? pAWireAngle : (pAWireAngle = new AWireAngleElements());
	}
	
	public ParserRule getAWireAngleRule() {
		return getAWireAngleAccess().getRule();
	}
}
