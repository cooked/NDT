/*
 * generated by Xtext
 */
package sc.ndt.editor.fast.ui;

import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.documentation.IEObjectDocumentationProvider;
import org.eclipse.xtext.ui.LanguageSpecific;
import org.eclipse.xtext.ui.editor.IURIEditorOpener;
import org.eclipse.xtext.ui.editor.folding.IFoldingRegionProvider;
import org.eclipse.xtext.ui.editor.hover.IEObjectHoverProvider;
import org.eclipse.xtext.ui.editor.hyperlinking.IHyperlinkHelper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;

import sc.ndt.editor.fast.ui.addon.folding.FastfstFoldingRegionProvider;
import sc.ndt.editor.fast.ui.addon.hover.FastfstEObjectDocumentationProvider;
import sc.ndt.editor.fast.ui.addon.hover.FastfstEObjectHoverProvider;
import sc.ndt.editor.fast.ui.addon.hyperlinking.FastfstEditorOpener;
import sc.ndt.editor.fast.ui.addon.hyperlinking.FastfstHyperlinkHelper;

import com.google.inject.Binder;

/**
 * Use this class to register components to be used within the IDE.
 */
public class FastfstUiModule extends sc.ndt.editor.fast.ui.AbstractFastfstUiModule {
	
	public FastfstUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}
	
	/* ????
	@Override
	public void configure(Binder binder) {
		super.configure(binder);
		binder.bind(String.class).annotatedWith(com.google.inject.name.Names.named(
				(XtextContentAssistProcessor.COMPLETION_AUTO_ACTIVATION_CHARS))).toInstance("\t");
	}
	*/
	
		
	// coloring
	public Class<? extends IHighlightingConfiguration> bindISemanticHighlightingConfiguration() {
		return sc.ndt.editor.fast.ui.addon.coloring.FastfstHighlightingConfiguration.class;
	}
	public Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
		return sc.ndt.editor.fast.ui.addon.coloring.FastfstSemanticHighlightingCalculator.class;
	}
	
	/*public Class<? extends ILexicalHighlightingConfiguration> bindILexicalHighlightingConfiguration() {
		return CplLexicalHighlightingConfiguration.class;
	}*/
	
	
	
	// hover - tooltip
	// see http://christiandietrich.wordpress.com/2011/07/16/hover-support-in-xtext-2-0-tutorial/
	public Class<? extends IEObjectHoverProvider> bindIEObjectHoverProvider() {
        return FastfstEObjectHoverProvider.class;}
	public Class<? extends IEObjectDocumentationProvider> bindIEObjectDocumentationProvider() {
		return FastfstEObjectDocumentationProvider.class;}
	
	// folding
	public Class<? extends IFoldingRegionProvider> bindIFoldingRegionProvider() {
		return FastfstFoldingRegionProvider.class;}
	
	// hyperlink
	/* TODO add in release 0.2.0
	@Override
	public Class<? extends IHyperlinkHelper> bindIHyperlinkHelper() {
			return FastfstHyperlinkHelper.class;}
	
	// editor opener
	@Override 
	public void configureLanguageSpecificURIEditorOpener(Binder binder) {
		if (PlatformUI.isWorkbenchRunning())
			binder.bind(IURIEditorOpener.class)
				.annotatedWith(LanguageSpecific.class)
	          	.to(FastfstEditorOpener.class);
	}
	*/
	
}
