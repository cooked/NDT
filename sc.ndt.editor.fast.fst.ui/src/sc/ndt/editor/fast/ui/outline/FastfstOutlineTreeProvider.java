/*
 * generated by Xtext
 */
package sc.ndt.editor.fast.ui.outline;

import java.util.ArrayList;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode;

import com.google.common.collect.Lists;

import sc.ndt.editor.fast.fastfst.ModelFastfst;
import sc.ndt.editor.fast.fastfst.Section;

/**
 * customization of the default outline structure
 * 
 */
public class FastfstOutlineTreeProvider extends DefaultOutlineTreeProvider {

	// SC
	// outline, see
	// http://v4.drdobbs.com/article/print?articleId=231902091&siteSectionName=architecture-and-design

	private ArrayList<String> s01 = new ArrayList<String>(Lists.newArrayList(
			"Echo", "ADAMSPrep", "AnalMode", "NumBl", "TMax", "DT"));

	private ArrayList<String> s02 = new ArrayList<String>(Lists.newArrayList(
			"YCMode", "TYCOn", "PCMode", "TPCOn", "VSContrl", "VS_RtGnSp",
			"VS_RtTq", "VS_Rgn2K", "VS_SlPc", "GenModel", "GenTiStr",
			"GenTiStp", "SpdGenOn", "TimGenOn", "TimGenOf", "HSSBrMode",
			"THSSBrDp", "TiDynBrk", "TTpBrDp(1)", "TTpBrDp(2)", "TTpBrDp(3)",
			"TBDepISp_1_", "TBDepISp_2_", "TBDepISp_3_", "TYawManS",
			"TYawManE", "NacYawF", "TPitManS_1_", "TPitManS_2_", "TPitManS_3_",
			"TPitManE_1_", "TPitManE_2_", "TPitManE_3_", "BlPitch_1_ ",
			"BlPitch_2_", "BlPitch_3_ ", "B1PitchF_1_", "B1PitchF_2_",
			"B1PitchF_3_"));

	private ArrayList<String> s03 = new ArrayList<String>(
			Lists.newArrayList("Gravity"));

	private ArrayList<String> s04 = new ArrayList<String>(Lists.newArrayList(
			"FlapDOF1", "FlapDOF2", "EdgeDOF", "TeetDOF", "DrTrDOF", "GenDOF",
			"YawDOF", "TwFADOF1", "TwFADOF2", "TwSSDOF1", "TwSSDOF2",
			"CompAero", "CompNoise"));

	private ArrayList<String> s05 = new ArrayList<String>(Lists.newArrayList(
			"OoPDefl", "IPDefl", "TeetDefl", "Azimuth", "RotSpeed", "NacYaw",
			"TTDspFA", "TTDspSS"));

	private ArrayList<String> s06 = new ArrayList<String>(Lists.newArrayList(
			"TipRad	", "HubRad", "PSpnElN", "UndSling", "HubCM", "OverHang",
			"NacCMxn", "NacCMyn", "NacCMzn", "TowerHt", "Twr2Shft", "TwrRBHt",
			"ShftTilt", "Delta3	", "PreCone_1_", "PreCone_2_", "PreCone_3_",
			"AzimB1Up"));

	private ArrayList<String> s07 = new ArrayList<String>(Lists.newArrayList(
			"YawBrMass", "NacMass", "HubMass", "TipMass_1_", "TipMass_2_",
			"TipMass_3_", "NacYIner", "GenIner", "HubIner"));

	private ArrayList<String> s08 = new ArrayList<String>(Lists.newArrayList(
			"GBoxEff", "GenEff	", "GBRatio", "GBRevers", "HSSBrTqF", "HSSBrDT",
			"DynBrkFi", "DTTorSpr", "DTTorDmp"));

	private ArrayList<String> s09 = new ArrayList<String>(Lists.newArrayList(
			"SIG_SlPc", "SIG_SySp", "SIG_RtTq", "SIG_PORt"));

	private ArrayList<String> s10 = new ArrayList<String>(Lists.newArrayList(
			"TEC_Freq", "TEC_Npol", "TEC_Sres", "TEC_Rres", "TEC_VLL",
			"TEC_SLR", "TEC_RLR", "TEC_MR	"));

	private ArrayList<String> s11 = new ArrayList<String>(Lists.newArrayList(
			"PtfmModel", "PtfmFile"));

	private ArrayList<String> s12 = new ArrayList<String>(Lists.newArrayList(
			"TwrNodes", "TwrFile"));

	private ArrayList<String> s13 = new ArrayList<String>(Lists.newArrayList(
			"YawSpr", "YawDamp", "YawNeut"));

	private ArrayList<String> s14 = new ArrayList<String>(Lists.newArrayList(
			"Furling", "FurlFile"));

	private ArrayList<String> s15 = new ArrayList<String>(Lists.newArrayList(
			"TeetMod", "TeetDmpP", "TeetDmp", "TeetCDmp", "TeetSStP",
			"TeetHStP", "TeetSSSp", "TeetHSSp"));

	private ArrayList<String> s16 = new ArrayList<String>(Lists.newArrayList(
			"TBDrConN", "TBDrConD", "TpBrDT"));

	private ArrayList<String> s17 = new ArrayList<String>(Lists.newArrayList(
			"BldFile_1_", "BldFile_2_", "BldFile_3_"));

	private ArrayList<String> s18 = new ArrayList<String>(
			Lists.newArrayList("ADFile"));

	private ArrayList<String> s19 = new ArrayList<String>(
			Lists.newArrayList("NoiseFile"));

	private ArrayList<String> s20 = new ArrayList<String>(
			Lists.newArrayList("ADAMSFile"));

	private ArrayList<String> s21 = new ArrayList<String>(
			Lists.newArrayList("LinFile"));

	private ArrayList<String> s22 = new ArrayList<String>(Lists.newArrayList(
			"SumPrint", "TabDelim", "OutFmt", "TStart", "DecFact", "SttsTime",
			"NcIMUxn", "NcIMUyn", "NcIMUzn", "ShftGagL", "NTwGages",
			"TwrGagNd", "NBlGages", "BldGagNd"));

	private ArrayList<ArrayList<String>> map = new ArrayList<ArrayList<String>>(Lists.newArrayList(
			s01,s02,s03,s04,s05,s06,s07,s08,s09,s10,
			s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21));
	
	protected void _createChildren(DocumentRootNode parentNode,	ModelFastfst domainModel) {
		for (Section element : domainModel.getSections()) {
			createNode(parentNode, element);
		}
	}

	// TODO 
	/*public ContentOutlineNode createNode(Section semanticNode, ContentOutlineNode parentNode) {
		ContentOutlineNode node = super.newOutlineNode(semanticNode, parentNode);
		if( !(semanticNode.eContainer() instanceof Point)) {
			PointsCurveSurf p = (PointsCurveSurf)semanticNode.eContainer();
		}
		return node;
	}*/
	
	/*
	 * protected void _createChildren(IOutlineNode parentNode, Section
	 * modelElement) {
	 * 
	 * }
	 */
}
