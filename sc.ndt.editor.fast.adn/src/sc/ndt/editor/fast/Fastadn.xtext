grammar sc.ndt.editor.fast.Fastadn //with org.eclipse.xtext.common.Terminals

generate fastadn "http://www.ndt.sc/editor/fast/Fastadn"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

ModelFastadn: 
	
	Head 		= Header
	
  	SIUnits		= sUnits
  	StallMod	= sStallMod
  	UseCm 		= sUseCm
  	InfModel	= sInfModel
  	IndModel	= sIndModel
  	Atoler		= nAtoler
  	TLModel		= sTLModel
  	HLModel		= sHLModel
  	
  	WindFile	= sWindFile
  	
  	HH			= nHH
  	TwrShad  	= nTwrShad						
	ShadHWid 	= nShadHWid					
	TShadRefPt 	= nTShadRefPt
	Rho     	= nRho			// Air density (kg/m^3)						
	KinVisc  	= nKinVisc 		// Kinematic air viscosity [MUST !=0 FOR NOISE]						(m^2/sec)						
	DTAero		= nDTAero 		// Time interval for aerodynamic calculations						(sec)
	
	NumFoil		= iNumFoil		// Number of airfoil files (-)
	FoilNm		= aFoilNm		// Names of the airfoil files [NumFoil lines]					(quoted strings)

	BldNodes	= iBldNodes
	AirStat		= aAirStat
	
  	(WS|NEWLINE|SL_COMMENT)*
  	
  	// about EOF
  	// http://www.euclideanspace.com/software/development/eclipse/xtext/grammar/lexer/index.htm
  
;

tNUMBER returns ecore::EFloat	: INT | NUMBER;

//from online help: The QualifiedName is a little special. It does not contain any assignments. 
// Therefore, it serves as a data type rule, which returns a String. So the feature name of a 
// Package is still of type String. 
//FILE: ('.'?'.'?)('/'? STRING)*;
//FILE returns ecore::EString:
//	'"' ((('.'|'..')? '/')? (NAME '/')* NAME'.'NAME)? '"';

// TERMINALS 
// NOTE : see http://www.eclipse.org/Xtext/documentation.html#syntax
// NOTE : the order of terminal rules is crucial for your grammar, as they may shadow each other. This is especially important for newly introduced rules in connection with imported rules from used grammars. 
terminal INT returns ecore::EInt: ('0'..'9')+;
terminal NUMBER returns ecore::EFloat:	
	(('+'|'-')? INT ('.'INT?) (('E'|'e')('+'|'-')? INT )?) |
	(('+'|'-')? INT 		  (('E'|'e')('+'|'-')? INT ) ) |
	(				('.'INT)  (('E'|'e')('+'|'-')? INT )?) |
	('-'		INT										 )
;
terminal PRINT		: 'PRINT'|'NOPRINT';
terminal STRING		: '"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
					  "'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'";
terminal NEWLINE	: '\r'|'\n'|'\r\n';
terminal SL_COMMENT	: '-' !('0'..'9') !('\r'|'\n'|'\r\n')*;
terminal WS			: (' '|'\t')+;


	
	
Header hidden(): 
	name=SL_COMMENT  NEWLINE
;

sUnits 		hidden():	WS? value='SI' 		WS	name='SysUnits' 	WS? SL_COMMENT? NEWLINE;
sStallMod 	hidden():	WS? value='BEDDOES' WS	name='StallMod' 	WS? SL_COMMENT? NEWLINE;
sUseCm 		hidden():	WS? value=('NO_CM'|'USE_CM') 	WS	name='UseCm' 		WS? SL_COMMENT? NEWLINE;
sInfModel 	hidden():	WS? value=('EQUIL'|'DYNIN') 	WS	name='InfModel' 	WS? SL_COMMENT? NEWLINE;
sIndModel	hidden():	WS? value='SWIRL' 	WS	name='IndModel'		WS? SL_COMMENT? NEWLINE;
nAtoler		hidden():	WS? value=tNUMBER 	WS	name=('Atoler'|'AToler')		WS? SL_COMMENT? NEWLINE;
sTLModel	hidden():	WS? value=('PRANDtl'|'NONE') WS	name='TLModel'		WS? SL_COMMENT? NEWLINE;
sHLModel	hidden():	WS? value=('PRANDtl'|'NONE') WS	name='HLModel'		WS? SL_COMMENT? NEWLINE;

sWindFile hidden(): 	WS? value=STRING 	WS	name='WindFile'		WS?	SL_COMMENT? NEWLINE;

nHH			hidden():	WS? value=tNUMBER 	WS	name='HH'			WS? SL_COMMENT? NEWLINE;
nTwrShad	hidden():	WS? value=tNUMBER 	WS	name='TwrShad'		WS? SL_COMMENT? NEWLINE;
nShadHWid	hidden():	WS? value=tNUMBER 	WS	name='ShadHWid'		WS? SL_COMMENT? NEWLINE;
nTShadRefPt	hidden():	WS? value=tNUMBER 	WS	name='T_Shad_Refpt'	WS? SL_COMMENT? NEWLINE;								
nRho		hidden():	WS? value=tNUMBER 	WS	name=('Rho'|'AirDens')			WS? SL_COMMENT? NEWLINE;								
nKinVisc	hidden():	WS? value=tNUMBER 	WS	name='KinVisc'		WS? SL_COMMENT? NEWLINE;								
nDTAero		hidden():	WS? value=tNUMBER 	WS	name='DTAero'		WS? SL_COMMENT? NEWLINE;								

iNumFoil	hidden():	WS? value=INT 		WS	name='NumFoil'		WS? SL_COMMENT? NEWLINE;								
aFoilNm		hidden():	WS? value+=STRING WS name='FoilNm' WS? SL_COMMENT? NEWLINE
						(WS? value+=STRING WS? SL_COMMENT? NEWLINE)*;

iBldNodes	hidden():	WS? value=INT 		WS	name='BldNodes'		WS? SL_COMMENT? NEWLINE;
aAirStat	hidden():	
	WS? 'RNodes' WS	'AeroTwst' WS 'DRNodes'	WS 'Chord' WS 'NFoil' WS 'PrnElm' WS? SL_COMMENT? NEWLINE	
	(WS? rnodes+=tNUMBER WS aerotwst+=tNUMBER WS drnodes+=tNUMBER WS chord+=tNUMBER WS nfoil+=tNUMBER WS prnelm+=PRINT WS? SL_COMMENT? NEWLINE)+
;										
	